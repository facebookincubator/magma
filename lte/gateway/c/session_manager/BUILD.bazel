cc_library(
    name = "logging",
    srcs = [],
    hdrs = [
        "magma_logging.h",
        "magma_logging_init.h",
    ],
)

cc_library(
    name = "utilities",
    srcs = [
        "DiameterCodes.cpp",
        "GrpcMagmaUtils.cpp",
        "SessionID.cpp",
        "Utilities.cpp",
    ],
    hdrs = [
        "DiameterCodes.h",
        "GrpcMagmaUtils.h",
        "SessionID.h",
        "Utilities.h",
    ],
    deps = [":logging"],
)

cc_library(
    name = "credit_key",
    hdrs = ["CreditKey.h"],
    deps = [
        "//lte/protos:policydb_cpp_proto",
        "//lte/protos:session_manager_cpp_proto",
    ],
)

cc_library(
    name = "types",
    hdrs = ["Types.h"],
    deps = [
        ":credit_key",
        "//lte/protos:pipelined_cpp_proto",
        "//lte/protos:session_manager_cpp_proto",
    ],
)

cc_library(
    name = "service_action",
    hdrs = ["ServiceAction.h"],
    deps = [
        ":credit_key",
        ":types",
        "//lte/protos:session_manager_cpp_proto",
    ],
)

# TODO this is lacking folly dependency
#cc_library(
#	name = "stored_state",
#	hdrs = ["StoredState.h"],
#	srcs = ["StoredState.cpp"],
#		":credit_key",
#		":logging",
#		":types",
#		"//lte/protos:pipelined_cpp_grpc",
#		"//lte/protos:session_manager_cpp_grpc",
#	],
#)

cc_library(
    name = "policy_loader",
    srcs = [
        "PolicyLoader.cpp",
    ],
    hdrs = [
        "ObjectMap.h",
        "PolicyLoader.h",
        "RedisMap.hpp",
        "Serializers.h",
    ],
    copts = ["-DBAZEL=1"],
    deps = [
        ":logging",
        "//lte/protos:policydb_cpp_proto",
        "//orc8r/gateway/c/common/config",
        "//orc8r/protos:redis_cpp_proto",
        "@cpp_redis",
    ],
)
