// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/mconfig/mconfigs.proto

package mconfig // import "magma/lte/cloud/go/protos/mconfig"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "magma/orc8r/cloud/go/protos"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type EnodebD_CSFBRat int32

const (
	EnodebD_CSFBRAT_2G EnodebD_CSFBRat = 0
	EnodebD_CSFBRAT_3G EnodebD_CSFBRat = 1
)

var EnodebD_CSFBRat_name = map[int32]string{
	0: "CSFBRAT_2G",
	1: "CSFBRAT_3G",
}
var EnodebD_CSFBRat_value = map[string]int32{
	"CSFBRAT_2G": 0,
	"CSFBRAT_3G": 1,
}

func (x EnodebD_CSFBRat) String() string {
	return proto.EnumName(EnodebD_CSFBRat_name, int32(x))
}
func (EnodebD_CSFBRat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{0, 0}
}

type PipelineD_NetworkServices int32

const (
	PipelineD_METERING    PipelineD_NetworkServices = 0
	PipelineD_DPI         PipelineD_NetworkServices = 1
	PipelineD_ENFORCEMENT PipelineD_NetworkServices = 2
)

var PipelineD_NetworkServices_name = map[int32]string{
	0: "METERING",
	1: "DPI",
	2: "ENFORCEMENT",
}
var PipelineD_NetworkServices_value = map[string]int32{
	"METERING":    0,
	"DPI":         1,
	"ENFORCEMENT": 2,
}

func (x PipelineD_NetworkServices) String() string {
	return proto.EnumName(PipelineD_NetworkServices_name, int32(x))
}
func (PipelineD_NetworkServices) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{1, 0}
}

// (0)Turning off NonEPS service, (1)Both CSFB and SMS, (2)only SMS
type MME_NonEPSServiceControl int32

const (
	MME_NON_EPS_SERVICE_CONTROL_OFF      MME_NonEPSServiceControl = 0
	MME_NON_EPS_SERVICE_CONTROL_CSFB_SMS MME_NonEPSServiceControl = 1
	MME_NON_EPS_SERVICE_CONTROL_SMS      MME_NonEPSServiceControl = 2
)

var MME_NonEPSServiceControl_name = map[int32]string{
	0: "NON_EPS_SERVICE_CONTROL_OFF",
	1: "NON_EPS_SERVICE_CONTROL_CSFB_SMS",
	2: "NON_EPS_SERVICE_CONTROL_SMS",
}
var MME_NonEPSServiceControl_value = map[string]int32{
	"NON_EPS_SERVICE_CONTROL_OFF":      0,
	"NON_EPS_SERVICE_CONTROL_CSFB_SMS": 1,
	"NON_EPS_SERVICE_CONTROL_SMS":      2,
}

func (x MME_NonEPSServiceControl) String() string {
	return proto.EnumName(MME_NonEPSServiceControl_name, int32(x))
}
func (MME_NonEPSServiceControl) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{6, 0}
}

// ------------------------------------------------------------------------------
// EnodebD configs
// ------------------------------------------------------------------------------
type EnodebD struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Physical cell ID (0-504)
	Pci int32 `protobuf:"varint,2,opt,name=pci,proto3" json:"pci,omitempty"`
	// Frequency channel number. See niviuk.free.fr/lte_band.php for mapping to
	// frequency
	Earfcndl int32 `protobuf:"varint,3,opt,name=earfcndl,proto3" json:"earfcndl,omitempty"`
	// Bandwidth in MHz, from set {1.4, 3, 5, 10, 15, 20}
	BandwidthMhz int32 `protobuf:"varint,4,opt,name=bandwidth_mhz,json=bandwidthMhz,proto3" json:"bandwidth_mhz,omitempty"`
	// Network operator identifier.
	PlmnidList string `protobuf:"bytes,5,opt,name=plmnid_list,json=plmnidList,proto3" json:"plmnid_list,omitempty"`
	// TDD subframe config parameter. See http://niviuk.free.fr/lte_tdd.php
	SubframeAssignment int32 `protobuf:"varint,6,opt,name=subframe_assignment,json=subframeAssignment,proto3" json:"subframe_assignment,omitempty"`
	// TDD subframe config parameter. See http://niviuk.free.fr/lte_tdd.php
	SpecialSubframePattern int32 `protobuf:"varint,7,opt,name=special_subframe_pattern,json=specialSubframePattern,proto3" json:"special_subframe_pattern,omitempty"`
	// Enable eNodeB
	AllowEnodebTransmit bool `protobuf:"varint,8,opt,name=allow_enodeb_transmit,json=allowEnodebTransmit,proto3" json:"allow_enodeb_transmit,omitempty"`
	// Tracking area code. 16-bit
	Tac int32 `protobuf:"varint,9,opt,name=tac,proto3" json:"tac,omitempty"`
	// RAT type (2G/3G), used by eNB
	CsfbRat EnodebD_CSFBRat `protobuf:"varint,10,opt,name=csfb_rat,json=csfbRat,proto3,enum=magma.mconfig.EnodebD_CSFBRat" json:"csfb_rat,omitempty"`
	// 2G RAT frequencies /ARFCNs for redirection, used by eNB
	Arfcn_2G             []int32            `protobuf:"varint,11,rep,packed,name=arfcn_2g,json=arfcn2g,proto3" json:"arfcn_2g,omitempty"`
	TddConfig            *EnodebD_TDDConfig `protobuf:"bytes,12,opt,name=tdd_config,json=tddConfig,proto3" json:"tdd_config,omitempty"`
	FddConfig            *EnodebD_FDDConfig `protobuf:"bytes,13,opt,name=fdd_config,json=fddConfig,proto3" json:"fdd_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EnodebD) Reset()         { *m = EnodebD{} }
func (m *EnodebD) String() string { return proto.CompactTextString(m) }
func (*EnodebD) ProtoMessage()    {}
func (*EnodebD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{0}
}
func (m *EnodebD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnodebD.Unmarshal(m, b)
}
func (m *EnodebD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnodebD.Marshal(b, m, deterministic)
}
func (dst *EnodebD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnodebD.Merge(dst, src)
}
func (m *EnodebD) XXX_Size() int {
	return xxx_messageInfo_EnodebD.Size(m)
}
func (m *EnodebD) XXX_DiscardUnknown() {
	xxx_messageInfo_EnodebD.DiscardUnknown(m)
}

var xxx_messageInfo_EnodebD proto.InternalMessageInfo

func (m *EnodebD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *EnodebD) GetPci() int32 {
	if m != nil {
		return m.Pci
	}
	return 0
}

func (m *EnodebD) GetEarfcndl() int32 {
	if m != nil {
		return m.Earfcndl
	}
	return 0
}

func (m *EnodebD) GetBandwidthMhz() int32 {
	if m != nil {
		return m.BandwidthMhz
	}
	return 0
}

func (m *EnodebD) GetPlmnidList() string {
	if m != nil {
		return m.PlmnidList
	}
	return ""
}

func (m *EnodebD) GetSubframeAssignment() int32 {
	if m != nil {
		return m.SubframeAssignment
	}
	return 0
}

func (m *EnodebD) GetSpecialSubframePattern() int32 {
	if m != nil {
		return m.SpecialSubframePattern
	}
	return 0
}

func (m *EnodebD) GetAllowEnodebTransmit() bool {
	if m != nil {
		return m.AllowEnodebTransmit
	}
	return false
}

func (m *EnodebD) GetTac() int32 {
	if m != nil {
		return m.Tac
	}
	return 0
}

func (m *EnodebD) GetCsfbRat() EnodebD_CSFBRat {
	if m != nil {
		return m.CsfbRat
	}
	return EnodebD_CSFBRAT_2G
}

func (m *EnodebD) GetArfcn_2G() []int32 {
	if m != nil {
		return m.Arfcn_2G
	}
	return nil
}

func (m *EnodebD) GetTddConfig() *EnodebD_TDDConfig {
	if m != nil {
		return m.TddConfig
	}
	return nil
}

func (m *EnodebD) GetFddConfig() *EnodebD_FDDConfig {
	if m != nil {
		return m.FddConfig
	}
	return nil
}

type EnodebD_FDDConfig struct {
	Earfcndl             int32    `protobuf:"varint,1,opt,name=earfcndl,proto3" json:"earfcndl,omitempty"`
	Earfcnul             int32    `protobuf:"varint,2,opt,name=earfcnul,proto3" json:"earfcnul,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnodebD_FDDConfig) Reset()         { *m = EnodebD_FDDConfig{} }
func (m *EnodebD_FDDConfig) String() string { return proto.CompactTextString(m) }
func (*EnodebD_FDDConfig) ProtoMessage()    {}
func (*EnodebD_FDDConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{0, 0}
}
func (m *EnodebD_FDDConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnodebD_FDDConfig.Unmarshal(m, b)
}
func (m *EnodebD_FDDConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnodebD_FDDConfig.Marshal(b, m, deterministic)
}
func (dst *EnodebD_FDDConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnodebD_FDDConfig.Merge(dst, src)
}
func (m *EnodebD_FDDConfig) XXX_Size() int {
	return xxx_messageInfo_EnodebD_FDDConfig.Size(m)
}
func (m *EnodebD_FDDConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnodebD_FDDConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnodebD_FDDConfig proto.InternalMessageInfo

func (m *EnodebD_FDDConfig) GetEarfcndl() int32 {
	if m != nil {
		return m.Earfcndl
	}
	return 0
}

func (m *EnodebD_FDDConfig) GetEarfcnul() int32 {
	if m != nil {
		return m.Earfcnul
	}
	return 0
}

type EnodebD_TDDConfig struct {
	Earfcndl int32 `protobuf:"varint,1,opt,name=earfcndl,proto3" json:"earfcndl,omitempty"`
	// TDD subframe config parameter. See http://niviuk.free.fr/lte_tdd.php
	SubframeAssignment int32 `protobuf:"varint,2,opt,name=subframe_assignment,json=subframeAssignment,proto3" json:"subframe_assignment,omitempty"`
	// TDD subframe config parameter. See http://niviuk.free.fr/lte_tdd.php
	SpecialSubframePattern int32    `protobuf:"varint,3,opt,name=special_subframe_pattern,json=specialSubframePattern,proto3" json:"special_subframe_pattern,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *EnodebD_TDDConfig) Reset()         { *m = EnodebD_TDDConfig{} }
func (m *EnodebD_TDDConfig) String() string { return proto.CompactTextString(m) }
func (*EnodebD_TDDConfig) ProtoMessage()    {}
func (*EnodebD_TDDConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{0, 1}
}
func (m *EnodebD_TDDConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnodebD_TDDConfig.Unmarshal(m, b)
}
func (m *EnodebD_TDDConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnodebD_TDDConfig.Marshal(b, m, deterministic)
}
func (dst *EnodebD_TDDConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnodebD_TDDConfig.Merge(dst, src)
}
func (m *EnodebD_TDDConfig) XXX_Size() int {
	return xxx_messageInfo_EnodebD_TDDConfig.Size(m)
}
func (m *EnodebD_TDDConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_EnodebD_TDDConfig.DiscardUnknown(m)
}

var xxx_messageInfo_EnodebD_TDDConfig proto.InternalMessageInfo

func (m *EnodebD_TDDConfig) GetEarfcndl() int32 {
	if m != nil {
		return m.Earfcndl
	}
	return 0
}

func (m *EnodebD_TDDConfig) GetSubframeAssignment() int32 {
	if m != nil {
		return m.SubframeAssignment
	}
	return 0
}

func (m *EnodebD_TDDConfig) GetSpecialSubframePattern() int32 {
	if m != nil {
		return m.SpecialSubframePattern
	}
	return 0
}

// ------------------------------------------------------------------------------
// PipelineD configs
// ------------------------------------------------------------------------------
type PipelineD struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Range of IPs allocated to UEs
	UeIpBlock string `protobuf:"bytes,2,opt,name=ue_ip_block,json=ueIpBlock,proto3" json:"ue_ip_block,omitempty"`
	// Whether NAT is enabled
	NatEnabled bool `protobuf:"varint,3,opt,name=nat_enabled,json=natEnabled,proto3" json:"nat_enabled,omitempty"`
	// repeated PolicyRule policy_rules = 5; // Policies have moved to policydb.proto
	DefaultRuleId string `protobuf:"bytes,6,opt,name=default_rule_id,json=defaultRuleId,proto3" json:"default_rule_id,omitempty"`
	// Enable forwarding S6a related requests to Federated GW
	RelayEnabled         bool                        `protobuf:"varint,7,opt,name=relay_enabled,json=relayEnabled,proto3" json:"relay_enabled,omitempty"`
	Services             []PipelineD_NetworkServices `protobuf:"varint,8,rep,packed,name=services,proto3,enum=magma.mconfig.PipelineD_NetworkServices" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *PipelineD) Reset()         { *m = PipelineD{} }
func (m *PipelineD) String() string { return proto.CompactTextString(m) }
func (*PipelineD) ProtoMessage()    {}
func (*PipelineD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{1}
}
func (m *PipelineD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipelineD.Unmarshal(m, b)
}
func (m *PipelineD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipelineD.Marshal(b, m, deterministic)
}
func (dst *PipelineD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipelineD.Merge(dst, src)
}
func (m *PipelineD) XXX_Size() int {
	return xxx_messageInfo_PipelineD.Size(m)
}
func (m *PipelineD) XXX_DiscardUnknown() {
	xxx_messageInfo_PipelineD.DiscardUnknown(m)
}

var xxx_messageInfo_PipelineD proto.InternalMessageInfo

func (m *PipelineD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *PipelineD) GetUeIpBlock() string {
	if m != nil {
		return m.UeIpBlock
	}
	return ""
}

func (m *PipelineD) GetNatEnabled() bool {
	if m != nil {
		return m.NatEnabled
	}
	return false
}

func (m *PipelineD) GetDefaultRuleId() string {
	if m != nil {
		return m.DefaultRuleId
	}
	return ""
}

func (m *PipelineD) GetRelayEnabled() bool {
	if m != nil {
		return m.RelayEnabled
	}
	return false
}

func (m *PipelineD) GetServices() []PipelineD_NetworkServices {
	if m != nil {
		return m.Services
	}
	return nil
}

// ------------------------------------------------------------------------------
// SessionD configs
// ------------------------------------------------------------------------------
type SessionD struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Enable forwarding S6a related requests to Federated GW
	RelayEnabled         bool     `protobuf:"varint,2,opt,name=relay_enabled,json=relayEnabled,proto3" json:"relay_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SessionD) Reset()         { *m = SessionD{} }
func (m *SessionD) String() string { return proto.CompactTextString(m) }
func (*SessionD) ProtoMessage()    {}
func (*SessionD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{2}
}
func (m *SessionD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionD.Unmarshal(m, b)
}
func (m *SessionD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionD.Marshal(b, m, deterministic)
}
func (dst *SessionD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionD.Merge(dst, src)
}
func (m *SessionD) XXX_Size() int {
	return xxx_messageInfo_SessionD.Size(m)
}
func (m *SessionD) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionD.DiscardUnknown(m)
}

var xxx_messageInfo_SessionD proto.InternalMessageInfo

func (m *SessionD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *SessionD) GetRelayEnabled() bool {
	if m != nil {
		return m.RelayEnabled
	}
	return false
}

// ------------------------------------------------------------------------------
// PolicyDB configs
// ------------------------------------------------------------------------------
type PolicyDB struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PolicyDB) Reset()         { *m = PolicyDB{} }
func (m *PolicyDB) String() string { return proto.CompactTextString(m) }
func (*PolicyDB) ProtoMessage()    {}
func (*PolicyDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{3}
}
func (m *PolicyDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyDB.Unmarshal(m, b)
}
func (m *PolicyDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyDB.Marshal(b, m, deterministic)
}
func (dst *PolicyDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyDB.Merge(dst, src)
}
func (m *PolicyDB) XXX_Size() int {
	return xxx_messageInfo_PolicyDB.Size(m)
}
func (m *PolicyDB) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyDB.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyDB proto.InternalMessageInfo

func (m *PolicyDB) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// RedirectD configs
// ------------------------------------------------------------------------------
type RedirectD struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RedirectD) Reset()         { *m = RedirectD{} }
func (m *RedirectD) String() string { return proto.CompactTextString(m) }
func (*RedirectD) ProtoMessage()    {}
func (*RedirectD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{4}
}
func (m *RedirectD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedirectD.Unmarshal(m, b)
}
func (m *RedirectD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedirectD.Marshal(b, m, deterministic)
}
func (dst *RedirectD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedirectD.Merge(dst, src)
}
func (m *RedirectD) XXX_Size() int {
	return xxx_messageInfo_RedirectD.Size(m)
}
func (m *RedirectD) XXX_DiscardUnknown() {
	xxx_messageInfo_RedirectD.DiscardUnknown(m)
}

var xxx_messageInfo_RedirectD proto.InternalMessageInfo

func (m *RedirectD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// MobilityD configs
// ------------------------------------------------------------------------------
type MobilityD struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// An IP block is a range of IP addresses specified by a network address and
	// a prefix-length of the netmask. For example,
	//    IPv4 IP block:      "192.168.0.0/24"
	//    IPv6 IP block:      "2401:db00:1116:301b::/64"
	IpBlock              string   `protobuf:"bytes,2,opt,name=ip_block,json=ipBlock,proto3" json:"ip_block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MobilityD) Reset()         { *m = MobilityD{} }
func (m *MobilityD) String() string { return proto.CompactTextString(m) }
func (*MobilityD) ProtoMessage()    {}
func (*MobilityD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{5}
}
func (m *MobilityD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MobilityD.Unmarshal(m, b)
}
func (m *MobilityD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MobilityD.Marshal(b, m, deterministic)
}
func (dst *MobilityD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MobilityD.Merge(dst, src)
}
func (m *MobilityD) XXX_Size() int {
	return xxx_messageInfo_MobilityD.Size(m)
}
func (m *MobilityD) XXX_DiscardUnknown() {
	xxx_messageInfo_MobilityD.DiscardUnknown(m)
}

var xxx_messageInfo_MobilityD proto.InternalMessageInfo

func (m *MobilityD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *MobilityD) GetIpBlock() string {
	if m != nil {
		return m.IpBlock
	}
	return ""
}

// ------------------------------------------------------------------------------
// MME configs
// ------------------------------------------------------------------------------
type MME struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Mobile country code
	Mcc string `protobuf:"bytes,2,opt,name=mcc,proto3" json:"mcc,omitempty"`
	// Mobile network code
	Mnc string `protobuf:"bytes,3,opt,name=mnc,proto3" json:"mnc,omitempty"`
	// Tracking area code. 16-bit
	Tac int32 `protobuf:"varint,4,opt,name=tac,proto3" json:"tac,omitempty"`
	// MME group identifier - unique within a PLMN. 16-bit
	MmeGid int32 `protobuf:"varint,5,opt,name=mme_gid,json=mmeGid,proto3" json:"mme_gid,omitempty"`
	// MME code - unique within an MME group. 8-bit
	MmeCode int32 `protobuf:"varint,6,opt,name=mme_code,json=mmeCode,proto3" json:"mme_code,omitempty"`
	// Enable DNS Caching. Will be filled by DnsD
	EnableDnsCaching bool `protobuf:"varint,7,opt,name=enable_dns_caching,json=enableDnsCaching,proto3" json:"enable_dns_caching,omitempty"`
	// Enable credit control tracking with OCS and forwarding S6a related
	// requests to Federated GW
	RelayEnabled bool `protobuf:"varint,8,opt,name=relay_enabled,json=relayEnabled,proto3" json:"relay_enabled,omitempty"`
	// For indicating one of the three modes
	NonEpsServiceControl MME_NonEPSServiceControl `protobuf:"varint,9,opt,name=non_eps_service_control,json=nonEpsServiceControl,proto3,enum=magma.mconfig.MME_NonEPSServiceControl" json:"non_eps_service_control,omitempty"`
	// Mobile country code for CSFB
	CsfbMcc string `protobuf:"bytes,10,opt,name=csfb_mcc,json=csfbMcc,proto3" json:"csfb_mcc,omitempty"`
	// Mobile network code for CSFB
	CsfbMnc string `protobuf:"bytes,11,opt,name=csfb_mnc,json=csfbMnc,proto3" json:"csfb_mnc,omitempty"`
	// Location area code. 16-bit
	Lac int32 `protobuf:"varint,12,opt,name=lac,proto3" json:"lac,omitempty"`
	// If relay_enabled is false, this determines whether cloud subscriberdb
	// or local subscriberdb is used for authentication requests.
	CloudSubscriberdbEnabled bool     `protobuf:"varint,14,opt,name=cloud_subscriberdb_enabled,json=cloudSubscriberdbEnabled,proto3" json:"cloud_subscriberdb_enabled,omitempty"`
	XXX_NoUnkeyedLiteral     struct{} `json:"-"`
	XXX_unrecognized         []byte   `json:"-"`
	XXX_sizecache            int32    `json:"-"`
}

func (m *MME) Reset()         { *m = MME{} }
func (m *MME) String() string { return proto.CompactTextString(m) }
func (*MME) ProtoMessage()    {}
func (*MME) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{6}
}
func (m *MME) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MME.Unmarshal(m, b)
}
func (m *MME) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MME.Marshal(b, m, deterministic)
}
func (dst *MME) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MME.Merge(dst, src)
}
func (m *MME) XXX_Size() int {
	return xxx_messageInfo_MME.Size(m)
}
func (m *MME) XXX_DiscardUnknown() {
	xxx_messageInfo_MME.DiscardUnknown(m)
}

var xxx_messageInfo_MME proto.InternalMessageInfo

func (m *MME) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *MME) GetMcc() string {
	if m != nil {
		return m.Mcc
	}
	return ""
}

func (m *MME) GetMnc() string {
	if m != nil {
		return m.Mnc
	}
	return ""
}

func (m *MME) GetTac() int32 {
	if m != nil {
		return m.Tac
	}
	return 0
}

func (m *MME) GetMmeGid() int32 {
	if m != nil {
		return m.MmeGid
	}
	return 0
}

func (m *MME) GetMmeCode() int32 {
	if m != nil {
		return m.MmeCode
	}
	return 0
}

func (m *MME) GetEnableDnsCaching() bool {
	if m != nil {
		return m.EnableDnsCaching
	}
	return false
}

func (m *MME) GetRelayEnabled() bool {
	if m != nil {
		return m.RelayEnabled
	}
	return false
}

func (m *MME) GetNonEpsServiceControl() MME_NonEPSServiceControl {
	if m != nil {
		return m.NonEpsServiceControl
	}
	return MME_NON_EPS_SERVICE_CONTROL_OFF
}

func (m *MME) GetCsfbMcc() string {
	if m != nil {
		return m.CsfbMcc
	}
	return ""
}

func (m *MME) GetCsfbMnc() string {
	if m != nil {
		return m.CsfbMnc
	}
	return ""
}

func (m *MME) GetLac() int32 {
	if m != nil {
		return m.Lac
	}
	return 0
}

func (m *MME) GetCloudSubscriberdbEnabled() bool {
	if m != nil {
		return m.CloudSubscriberdbEnabled
	}
	return false
}

// ------------------------------------------------------------------------------
// SubscriberDB configs
// ------------------------------------------------------------------------------
type SubscriberDB struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Operator configuration field for LTE
	LteAuthOp []byte `protobuf:"bytes,2,opt,name=lte_auth_op,json=lteAuthOp,proto3" json:"lte_auth_op,omitempty"`
	// Authentication management field for LTE
	LteAuthAmf  []byte                                       `protobuf:"bytes,3,opt,name=lte_auth_amf,json=lteAuthAmf,proto3" json:"lte_auth_amf,omitempty"`
	SubProfiles map[string]*SubscriberDB_SubscriptionProfile `protobuf:"bytes,4,rep,name=sub_profiles,json=subProfiles,proto3" json:"sub_profiles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Enable forwarding S6a related requests to Federated GW
	RelayEnabled         bool     `protobuf:"varint,5,opt,name=relay_enabled,json=relayEnabled,proto3" json:"relay_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriberDB) Reset()         { *m = SubscriberDB{} }
func (m *SubscriberDB) String() string { return proto.CompactTextString(m) }
func (*SubscriberDB) ProtoMessage()    {}
func (*SubscriberDB) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{7}
}
func (m *SubscriberDB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberDB.Unmarshal(m, b)
}
func (m *SubscriberDB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberDB.Marshal(b, m, deterministic)
}
func (dst *SubscriberDB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberDB.Merge(dst, src)
}
func (m *SubscriberDB) XXX_Size() int {
	return xxx_messageInfo_SubscriberDB.Size(m)
}
func (m *SubscriberDB) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberDB.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberDB proto.InternalMessageInfo

func (m *SubscriberDB) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *SubscriberDB) GetLteAuthOp() []byte {
	if m != nil {
		return m.LteAuthOp
	}
	return nil
}

func (m *SubscriberDB) GetLteAuthAmf() []byte {
	if m != nil {
		return m.LteAuthAmf
	}
	return nil
}

func (m *SubscriberDB) GetSubProfiles() map[string]*SubscriberDB_SubscriptionProfile {
	if m != nil {
		return m.SubProfiles
	}
	return nil
}

func (m *SubscriberDB) GetRelayEnabled() bool {
	if m != nil {
		return m.RelayEnabled
	}
	return false
}

type SubscriberDB_SubscriptionProfile struct {
	// Maximum uplink bit rate (AMBR-UL)
	MaxUlBitRate uint64 `protobuf:"varint,1,opt,name=max_ul_bit_rate,json=maxUlBitRate,proto3" json:"max_ul_bit_rate,omitempty"`
	// Maximum downlink bit rate (AMBR-DL)
	MaxDlBitRate         uint64   `protobuf:"varint,2,opt,name=max_dl_bit_rate,json=maxDlBitRate,proto3" json:"max_dl_bit_rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscriberDB_SubscriptionProfile) Reset()         { *m = SubscriberDB_SubscriptionProfile{} }
func (m *SubscriberDB_SubscriptionProfile) String() string { return proto.CompactTextString(m) }
func (*SubscriberDB_SubscriptionProfile) ProtoMessage()    {}
func (*SubscriberDB_SubscriptionProfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{7, 0}
}
func (m *SubscriberDB_SubscriptionProfile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberDB_SubscriptionProfile.Unmarshal(m, b)
}
func (m *SubscriberDB_SubscriptionProfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberDB_SubscriptionProfile.Marshal(b, m, deterministic)
}
func (dst *SubscriberDB_SubscriptionProfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberDB_SubscriptionProfile.Merge(dst, src)
}
func (m *SubscriberDB_SubscriptionProfile) XXX_Size() int {
	return xxx_messageInfo_SubscriberDB_SubscriptionProfile.Size(m)
}
func (m *SubscriberDB_SubscriptionProfile) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberDB_SubscriptionProfile.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberDB_SubscriptionProfile proto.InternalMessageInfo

func (m *SubscriberDB_SubscriptionProfile) GetMaxUlBitRate() uint64 {
	if m != nil {
		return m.MaxUlBitRate
	}
	return 0
}

func (m *SubscriberDB_SubscriptionProfile) GetMaxDlBitRate() uint64 {
	if m != nil {
		return m.MaxDlBitRate
	}
	return 0
}

// ------------------------------------------------------------------------------
// LighttpD configs
// ------------------------------------------------------------------------------
type LighttpD struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	EnableCaching        bool            `protobuf:"varint,2,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LighttpD) Reset()         { *m = LighttpD{} }
func (m *LighttpD) String() string { return proto.CompactTextString(m) }
func (*LighttpD) ProtoMessage()    {}
func (*LighttpD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_0eb6cc054744ee5c, []int{8}
}
func (m *LighttpD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LighttpD.Unmarshal(m, b)
}
func (m *LighttpD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LighttpD.Marshal(b, m, deterministic)
}
func (dst *LighttpD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LighttpD.Merge(dst, src)
}
func (m *LighttpD) XXX_Size() int {
	return xxx_messageInfo_LighttpD.Size(m)
}
func (m *LighttpD) XXX_DiscardUnknown() {
	xxx_messageInfo_LighttpD.DiscardUnknown(m)
}

var xxx_messageInfo_LighttpD proto.InternalMessageInfo

func (m *LighttpD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *LighttpD) GetEnableCaching() bool {
	if m != nil {
		return m.EnableCaching
	}
	return false
}

func init() {
	proto.RegisterType((*EnodebD)(nil), "magma.mconfig.EnodebD")
	proto.RegisterType((*EnodebD_FDDConfig)(nil), "magma.mconfig.EnodebD.FDDConfig")
	proto.RegisterType((*EnodebD_TDDConfig)(nil), "magma.mconfig.EnodebD.TDDConfig")
	proto.RegisterType((*PipelineD)(nil), "magma.mconfig.PipelineD")
	proto.RegisterType((*SessionD)(nil), "magma.mconfig.SessionD")
	proto.RegisterType((*PolicyDB)(nil), "magma.mconfig.PolicyDB")
	proto.RegisterType((*RedirectD)(nil), "magma.mconfig.RedirectD")
	proto.RegisterType((*MobilityD)(nil), "magma.mconfig.MobilityD")
	proto.RegisterType((*MME)(nil), "magma.mconfig.MME")
	proto.RegisterType((*SubscriberDB)(nil), "magma.mconfig.SubscriberDB")
	proto.RegisterMapType((map[string]*SubscriberDB_SubscriptionProfile)(nil), "magma.mconfig.SubscriberDB.SubProfilesEntry")
	proto.RegisterType((*SubscriberDB_SubscriptionProfile)(nil), "magma.mconfig.SubscriberDB.SubscriptionProfile")
	proto.RegisterType((*LighttpD)(nil), "magma.mconfig.LighttpD")
	proto.RegisterEnum("magma.mconfig.EnodebD_CSFBRat", EnodebD_CSFBRat_name, EnodebD_CSFBRat_value)
	proto.RegisterEnum("magma.mconfig.PipelineD_NetworkServices", PipelineD_NetworkServices_name, PipelineD_NetworkServices_value)
	proto.RegisterEnum("magma.mconfig.MME_NonEPSServiceControl", MME_NonEPSServiceControl_name, MME_NonEPSServiceControl_value)
}

func init() {
	proto.RegisterFile("lte/protos/mconfig/mconfigs.proto", fileDescriptor_mconfigs_0eb6cc054744ee5c)
}

var fileDescriptor_mconfigs_0eb6cc054744ee5c = []byte{
	// 1168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x6e, 0x1b, 0x37,
	0x16, 0x8e, 0x24, 0xdb, 0x9a, 0x39, 0x92, 0x6d, 0x61, 0x92, 0x6c, 0x26, 0x5a, 0x20, 0x51, 0x94,
	0xcd, 0xae, 0x16, 0x08, 0x64, 0x40, 0xb9, 0x49, 0x8a, 0xa2, 0x81, 0x2d, 0x8d, 0x03, 0x03, 0xd6,
	0x0f, 0x28, 0xb5, 0x17, 0xb9, 0x28, 0x41, 0x71, 0x28, 0x89, 0x08, 0x87, 0x1c, 0xcc, 0x50, 0x49,
	0x9c, 0x8b, 0x3e, 0x44, 0x5f, 0xa8, 0x6f, 0x50, 0xf4, 0x01, 0xfa, 0x30, 0x05, 0x39, 0xa3, 0xb1,
	0x23, 0x27, 0x69, 0xa1, 0x2b, 0x93, 0xdf, 0xf9, 0xf8, 0x99, 0xe7, 0x9c, 0x8f, 0x47, 0x03, 0x4f,
	0x84, 0x66, 0x27, 0x71, 0xa2, 0xb4, 0x4a, 0x4f, 0x22, 0xaa, 0xe4, 0x82, 0x2f, 0x37, 0x7f, 0xd3,
	0xae, 0xc5, 0xbd, 0xc3, 0x88, 0x2c, 0x23, 0xd2, 0xcd, 0xd1, 0xe6, 0x43, 0x95, 0xd0, 0x97, 0xc9,
	0xe6, 0x0c, 0x55, 0x51, 0xa4, 0x64, 0xc6, 0x6c, 0xff, 0x76, 0x00, 0xd5, 0x40, 0xaa, 0x90, 0xcd,
	0x07, 0x5e, 0x0f, 0x5c, 0xa1, 0x96, 0x58, 0xb0, 0xf7, 0x4c, 0xf8, 0xa5, 0x56, 0xa9, 0x73, 0xd4,
	0xbb, 0xdf, 0xcd, 0x94, 0xac, 0x40, 0xf7, 0x52, 0x2d, 0x2f, 0x4d, 0x10, 0x39, 0x22, 0x5f, 0x79,
	0x0d, 0xa8, 0xc4, 0x94, 0xfb, 0xe5, 0x56, 0xa9, 0xb3, 0x8f, 0xcc, 0xd2, 0x6b, 0x82, 0xc3, 0x48,
	0xb2, 0xa0, 0x32, 0x14, 0x7e, 0xc5, 0xc2, 0xc5, 0xde, 0x7b, 0x0a, 0x87, 0x73, 0x22, 0xc3, 0x0f,
	0x3c, 0xd4, 0x2b, 0x1c, 0xad, 0x3e, 0xf9, 0x7b, 0x96, 0x50, 0x2f, 0xc0, 0xe1, 0xea, 0x93, 0xf7,
	0x18, 0x6a, 0xb1, 0x88, 0x24, 0x0f, 0xb1, 0xe0, 0xa9, 0xf6, 0xf7, 0x5b, 0xa5, 0x8e, 0x8b, 0x20,
	0x83, 0x2e, 0x79, 0xaa, 0xbd, 0x13, 0xb8, 0x9b, 0xae, 0xe7, 0x8b, 0x84, 0x44, 0x0c, 0x93, 0x34,
	0xe5, 0x4b, 0x19, 0x31, 0xa9, 0xfd, 0x03, 0xab, 0xe5, 0x6d, 0x42, 0xa7, 0x45, 0xc4, 0x7b, 0x09,
	0x7e, 0x1a, 0x33, 0xca, 0x89, 0xc0, 0xc5, 0xc1, 0x98, 0x68, 0xcd, 0x12, 0xe9, 0x57, 0xed, 0xa9,
	0x7f, 0xe5, 0xf1, 0x69, 0x1e, 0x9e, 0x64, 0x51, 0xaf, 0x07, 0xf7, 0x89, 0x10, 0xea, 0x03, 0x66,
	0xb6, 0x46, 0x58, 0x27, 0x44, 0xa6, 0x11, 0xd7, 0xbe, 0xd3, 0x2a, 0x75, 0x1c, 0x74, 0xd7, 0x06,
	0xb3, 0xfa, 0xcd, 0xf2, 0x90, 0x29, 0x89, 0x26, 0xd4, 0x77, 0xb3, 0x92, 0x68, 0x42, 0xbd, 0x57,
	0xe0, 0xd0, 0x74, 0x31, 0xc7, 0x09, 0xd1, 0x3e, 0xd8, 0xba, 0x3e, 0xea, 0x7e, 0xd6, 0xa1, 0x6e,
	0xde, 0x82, 0x6e, 0x7f, 0x7a, 0x7e, 0x86, 0x88, 0x46, 0x55, 0xc3, 0x47, 0x44, 0x7b, 0x0f, 0xc1,
	0xb1, 0xc5, 0xc3, 0xbd, 0xa5, 0x5f, 0x6b, 0x55, 0x3a, 0xfb, 0xa8, 0x6a, 0xf7, 0xbd, 0xa5, 0xf7,
	0x1a, 0x40, 0x87, 0x21, 0xce, 0x14, 0xfc, 0x7a, 0xab, 0xd4, 0xa9, 0xf5, 0x5a, 0x5f, 0xd1, 0x9d,
	0x0d, 0x06, 0x7d, 0x8b, 0x20, 0x57, 0x87, 0x61, 0xb6, 0x34, 0x02, 0x8b, 0x6b, 0x81, 0xc3, 0x6f,
	0x0a, 0x9c, 0x5f, 0x0b, 0x2c, 0x36, 0x02, 0xcd, 0x3e, 0xb8, 0x05, 0xfe, 0x59, 0xdf, 0x4b, 0x5b,
	0x7d, 0x2f, 0x62, 0x6b, 0x91, 0x5b, 0xa5, 0xd8, 0x37, 0x7f, 0x2d, 0x81, 0x3b, 0xfb, 0x47, 0x2a,
	0x5f, 0xe9, 0x7b, 0x79, 0xa7, 0xbe, 0x57, 0xbe, 0xd5, 0xf7, 0xf6, 0xff, 0xa1, 0x9a, 0xb7, 0xc2,
	0x3b, 0x02, 0xb0, 0xcb, 0xd3, 0x19, 0xee, 0xbd, 0x69, 0xdc, 0xb9, 0xb9, 0x7f, 0xf1, 0xa6, 0x51,
	0x6a, 0xff, 0x5e, 0x06, 0x77, 0xc2, 0x63, 0x26, 0xb8, 0x64, 0xbb, 0xbd, 0xa1, 0x47, 0x50, 0x5b,
	0x33, 0xcc, 0x63, 0x3c, 0x17, 0x8a, 0xbe, 0xb3, 0xf9, 0xb8, 0xc8, 0x5d, 0xb3, 0x8b, 0xf8, 0xcc,
	0x00, 0xe6, 0x41, 0x48, 0xa2, 0x31, 0x93, 0x64, 0x2e, 0x58, 0x68, 0x6f, 0xee, 0x20, 0x90, 0x44,
	0x07, 0x19, 0xe2, 0xfd, 0x17, 0x8e, 0x43, 0xb6, 0x20, 0x6b, 0xa1, 0x71, 0xb2, 0x16, 0x0c, 0xf3,
	0xd0, 0x3e, 0x06, 0x17, 0x1d, 0xe6, 0x30, 0x5a, 0x0b, 0x76, 0x11, 0x9a, 0xe7, 0x97, 0x30, 0x41,
	0xae, 0x0a, 0xa9, 0xaa, 0x95, 0xaa, 0x5b, 0x70, 0x23, 0x36, 0x00, 0x27, 0x65, 0xc9, 0x7b, 0x4e,
	0x59, 0xea, 0x3b, 0xad, 0x4a, 0xe7, 0xa8, 0xd7, 0xd9, 0xf2, 0x44, 0x91, 0x6d, 0x77, 0xc4, 0xf4,
	0x07, 0x95, 0xbc, 0x9b, 0xe6, 0x7c, 0x54, 0x9c, 0x6c, 0xbf, 0x82, 0xe3, 0xad, 0xa0, 0x57, 0x07,
	0x67, 0x18, 0xcc, 0x02, 0x74, 0x31, 0x32, 0x65, 0xac, 0x42, 0x65, 0x30, 0xb9, 0x68, 0x94, 0xbc,
	0x63, 0xa8, 0x05, 0xa3, 0xf3, 0x31, 0xea, 0x07, 0xc3, 0x60, 0x34, 0x6b, 0x94, 0xdb, 0x14, 0x9c,
	0x29, 0x4b, 0x53, 0xae, 0xe4, 0x6e, 0xe5, 0xbc, 0x95, 0x65, 0xf9, 0x76, 0x96, 0xed, 0x1f, 0xc0,
	0x99, 0x28, 0xc1, 0xe9, 0xd5, 0xe0, 0x6c, 0x97, 0x7f, 0xd2, 0x7e, 0x0d, 0x2e, 0x62, 0x21, 0x4f,
	0x18, 0xd5, 0x3b, 0xdd, 0xb2, 0xfd, 0x16, 0xdc, 0xa1, 0x9a, 0x73, 0xc1, 0xf5, 0xd5, 0x6e, 0x69,
	0x3e, 0x04, 0x67, 0xcb, 0x32, 0x55, 0x9e, 0x19, 0xa6, 0xfd, 0xe7, 0x1e, 0x54, 0x86, 0xc3, 0x60,
	0xd7, 0x81, 0x1e, 0x51, 0x9a, 0x2b, 0x9a, 0xa5, 0x45, 0x24, 0xb5, 0xb6, 0x33, 0x88, 0xa4, 0x9b,
	0x09, 0xb7, 0x77, 0x3d, 0xe1, 0x1e, 0x40, 0x35, 0x8a, 0x18, 0x5e, 0xf2, 0xd0, 0xce, 0xeb, 0x7d,
	0x74, 0x10, 0x45, 0xec, 0x0d, 0x0f, 0xcd, 0x2d, 0x4d, 0x80, 0xaa, 0x90, 0xe5, 0x03, 0xda, 0x10,
	0xfb, 0x2a, 0x64, 0xde, 0x73, 0xf0, 0xb2, 0x0e, 0xe1, 0x50, 0xa6, 0x98, 0x12, 0xba, 0xe2, 0x72,
	0x99, 0x5b, 0xb2, 0x91, 0x45, 0x06, 0x32, 0xed, 0x67, 0xf8, 0xed, 0xae, 0x3a, 0x5f, 0xf0, 0xee,
	0xcf, 0xf0, 0x40, 0x2a, 0x89, 0x59, 0x9c, 0xe2, 0xdc, 0x89, 0x66, 0xba, 0xe9, 0x44, 0x09, 0x3b,
	0x8e, 0x8f, 0x7a, 0xff, 0xdb, 0xb2, 0xf2, 0x70, 0x18, 0x74, 0x47, 0x4a, 0x06, 0x93, 0x69, 0x6e,
	0xd3, 0x7e, 0x46, 0x47, 0xf7, 0xa4, 0x92, 0x41, 0x9c, 0x7e, 0x8e, 0x9a, 0x6c, 0xec, 0x20, 0x37,
	0x15, 0x82, 0xac, 0xe6, 0x66, 0x3f, 0xa4, 0xf4, 0x3a, 0x24, 0xa9, 0x5f, 0xbb, 0x11, 0xca, 0xca,
	0x25, 0x08, 0xb5, 0x13, 0x7a, 0x1f, 0x99, 0xa5, 0xf7, 0x3d, 0x34, 0xa9, 0x50, 0xeb, 0xd0, 0x8c,
	0xa5, 0x94, 0x26, 0x7c, 0xce, 0x92, 0x70, 0x5e, 0x64, 0x76, 0x64, 0x33, 0xf3, 0x2d, 0x63, 0x7a,
	0x83, 0xb0, 0xf1, 0xee, 0x2f, 0x70, 0xef, 0x4b, 0x77, 0xf6, 0x1e, 0xc3, 0xbf, 0x47, 0xe3, 0x11,
	0x0e, 0x26, 0x53, 0x3c, 0x0d, 0xd0, 0x4f, 0x17, 0xfd, 0x00, 0xf7, 0xc7, 0xa3, 0x19, 0x1a, 0x5f,
	0xe2, 0xf1, 0xf9, 0x79, 0xe3, 0x8e, 0xf7, 0x1f, 0x68, 0x7d, 0x8d, 0x60, 0x46, 0x1a, 0x9e, 0x0e,
	0xa7, 0x8d, 0xd2, 0xb7, 0x64, 0x0c, 0xa1, 0xdc, 0xfe, 0xa3, 0x02, 0xf5, 0xeb, 0x7b, 0xed, 0xf6,
	0x80, 0xcc, 0xd0, 0x13, 0x9a, 0x61, 0xb2, 0xd6, 0x2b, 0xac, 0x62, 0xeb, 0xb7, 0x3a, 0x72, 0x85,
	0x66, 0xa7, 0x6b, 0xbd, 0x1a, 0xc7, 0x5e, 0x0b, 0xea, 0x45, 0x9c, 0x44, 0x0b, 0x6b, 0xbf, 0x3a,
	0x82, 0x9c, 0x70, 0x1a, 0x2d, 0xbc, 0x31, 0xd4, 0xd3, 0xf5, 0x1c, 0xc7, 0x89, 0x5a, 0x70, 0xc1,
	0x52, 0x7f, 0xaf, 0x55, 0xe9, 0xd4, 0x7a, 0xcf, 0xb7, 0x3a, 0x7c, 0xf3, 0xa2, 0x66, 0x33, 0xc9,
	0xe9, 0x81, 0xd4, 0xc9, 0x15, 0xaa, 0xa5, 0xd7, 0xc8, 0x6d, 0x8b, 0xed, 0xdf, 0xb6, 0x58, 0x93,
	0xc2, 0xdd, 0x5c, 0x32, 0xd6, 0x5c, 0xc9, 0xfc, 0xb0, 0xf7, 0x0c, 0x8e, 0x23, 0xf2, 0x11, 0xaf,
	0x05, 0x9e, 0x73, 0x6d, 0x7e, 0xe8, 0x99, 0x2d, 0xc4, 0x1e, 0xaa, 0x47, 0xe4, 0xe3, 0x8f, 0xe2,
	0x8c, 0x6b, 0x44, 0x74, 0x41, 0x0b, 0x6f, 0xd0, 0xca, 0x05, 0x6d, 0xb0, 0xa1, 0x35, 0x15, 0x34,
	0xb6, 0xaf, 0x6a, 0x5c, 0xf4, 0x8e, 0x5d, 0x59, 0x55, 0x17, 0x99, 0xa5, 0x17, 0xc0, 0xfe, 0x7b,
	0x22, 0xd6, 0x99, 0x44, 0xad, 0x77, 0xf2, 0x37, 0x99, 0x6f, 0xdf, 0x19, 0x65, 0xa7, 0xbf, 0x2b,
	0xbf, 0x2c, 0xb5, 0x19, 0x38, 0x97, 0x7c, 0xb9, 0xd2, 0x3a, 0xde, 0x6d, 0x18, 0x3d, 0x83, 0xa3,
	0xfc, 0x2d, 0x6f, 0xde, 0x71, 0x36, 0x74, 0x0f, 0x33, 0x34, 0x7f, 0xc4, 0x67, 0x4f, 0xdf, 0x3e,
	0xb1, 0x42, 0x27, 0xe6, 0x13, 0xd6, 0xfa, 0xfb, 0x64, 0xa9, 0xb6, 0xbe, 0x65, 0xe7, 0x07, 0x76,
	0xff, 0xe2, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x52, 0x36, 0xbe, 0xe8, 0x0a, 0x00, 0x00,
}
