// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/pipelined.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SetupFlowsResult_Result int32

const (
	SetupFlowsResult_SUCCESS        SetupFlowsResult_Result = 0
	SetupFlowsResult_FAILURE        SetupFlowsResult_Result = 1
	SetupFlowsResult_OUTDATED_EPOCH SetupFlowsResult_Result = 2
)

var SetupFlowsResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var SetupFlowsResult_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x SetupFlowsResult_Result) String() string {
	return proto.EnumName(SetupFlowsResult_Result_name, int32(x))
}

func (SetupFlowsResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{4, 0}
}

type RequestOriginType_OriginType int32

const (
	RequestOriginType_GX RequestOriginType_OriginType = 0
	RequestOriginType_GY RequestOriginType_OriginType = 1
)

var RequestOriginType_OriginType_name = map[int32]string{
	0: "GX",
	1: "GY",
}

var RequestOriginType_OriginType_value = map[string]int32{
	"GX": 0,
	"GY": 1,
}

func (x RequestOriginType_OriginType) String() string {
	return proto.EnumName(RequestOriginType_OriginType_name, int32(x))
}

func (RequestOriginType_OriginType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{5, 0}
}

type RuleModResult_Result int32

const (
	RuleModResult_SUCCESS         RuleModResult_Result = 0
	RuleModResult_PARTIAL_SUCCESS RuleModResult_Result = 1
	RuleModResult_FAILURE         RuleModResult_Result = 2
)

var RuleModResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "PARTIAL_SUCCESS",
	2: "FAILURE",
}

var RuleModResult_Result_value = map[string]int32{
	"SUCCESS":         0,
	"PARTIAL_SUCCESS": 1,
	"FAILURE":         2,
}

func (x RuleModResult_Result) String() string {
	return proto.EnumName(RuleModResult_Result_name, int32(x))
}

func (RuleModResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{8, 0}
}

type DeactivateFlowsResult_Result int32

const (
	DeactivateFlowsResult_SUCCESS        DeactivateFlowsResult_Result = 0
	DeactivateFlowsResult_FAILURE        DeactivateFlowsResult_Result = 1
	DeactivateFlowsResult_OUTDATED_EPOCH DeactivateFlowsResult_Result = 2
)

var DeactivateFlowsResult_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var DeactivateFlowsResult_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x DeactivateFlowsResult_Result) String() string {
	return proto.EnumName(DeactivateFlowsResult_Result_name, int32(x))
}

func (DeactivateFlowsResult_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{10, 0}
}

type FlowRequest_FlowState int32

const (
	FlowRequest_FLOW_CREATED                FlowRequest_FlowState = 0
	FlowRequest_FLOW_PARTIAL_CLASSIFICATION FlowRequest_FlowState = 1
	FlowRequest_FLOW_FINAL_CLASSIFICATION   FlowRequest_FlowState = 2
	FlowRequest_FLOW_EXPIRED                FlowRequest_FlowState = 3
)

var FlowRequest_FlowState_name = map[int32]string{
	0: "FLOW_CREATED",
	1: "FLOW_PARTIAL_CLASSIFICATION",
	2: "FLOW_FINAL_CLASSIFICATION",
	3: "FLOW_EXPIRED",
}

var FlowRequest_FlowState_value = map[string]int32{
	"FLOW_CREATED":                0,
	"FLOW_PARTIAL_CLASSIFICATION": 1,
	"FLOW_FINAL_CLASSIFICATION":   2,
	"FLOW_EXPIRED":                3,
}

func (x FlowRequest_FlowState) String() string {
	return proto.EnumName(FlowRequest_FlowState_name, int32(x))
}

func (FlowRequest_FlowState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{11, 0}
}

type FlowResponse_Result int32

const (
	FlowResponse_SUCCESS        FlowResponse_Result = 0
	FlowResponse_FAILURE        FlowResponse_Result = 1
	FlowResponse_OUTDATED_EPOCH FlowResponse_Result = 2
)

var FlowResponse_Result_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILURE",
	2: "OUTDATED_EPOCH",
}

var FlowResponse_Result_value = map[string]int32{
	"SUCCESS":        0,
	"FAILURE":        1,
	"OUTDATED_EPOCH": 2,
}

func (x FlowResponse_Result) String() string {
	return proto.EnumName(FlowResponse_Result_name, int32(x))
}

func (FlowResponse_Result) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{12, 0}
}

type SubscriberQuotaUpdate_Type int32

const (
	SubscriberQuotaUpdate_VALID_QUOTA SubscriberQuotaUpdate_Type = 0
	SubscriberQuotaUpdate_NO_QUOTA    SubscriberQuotaUpdate_Type = 1
	SubscriberQuotaUpdate_TERMINATE   SubscriberQuotaUpdate_Type = 2
)

var SubscriberQuotaUpdate_Type_name = map[int32]string{
	0: "VALID_QUOTA",
	1: "NO_QUOTA",
	2: "TERMINATE",
}

var SubscriberQuotaUpdate_Type_value = map[string]int32{
	"VALID_QUOTA": 0,
	"NO_QUOTA":    1,
	"TERMINATE":   2,
}

func (x SubscriberQuotaUpdate_Type) String() string {
	return proto.EnumName(SubscriberQuotaUpdate_Type_name, int32(x))
}

func (SubscriberQuotaUpdate_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{14, 0}
}

type NodeID_NodeIDType int32

const (
	NodeID_IPv4 NodeID_NodeIDType = 0
	NodeID_IPv6 NodeID_NodeIDType = 1
	NodeID_FQDN NodeID_NodeIDType = 2
)

var NodeID_NodeIDType_name = map[int32]string{
	0: "IPv4",
	1: "IPv6",
	2: "FQDN",
}

var NodeID_NodeIDType_value = map[string]int32{
	"IPv4": 0,
	"IPv6": 1,
	"FQDN": 2,
}

func (x NodeID_NodeIDType) String() string {
	return proto.EnumName(NodeID_NodeIDType_name, int32(x))
}

func (NodeID_NodeIDType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{20, 0}
}

type FsmState_FsmState int32

const (
	FsmState_SESSION_ACTIVE     FsmState_FsmState = 0
	FsmState_SESSION_TERMINATED FsmState_FsmState = 4
	FsmState_SESSION_RELEASED   FsmState_FsmState = 6
	FsmState_CREATING           FsmState_FsmState = 7
	FsmState_CREATED            FsmState_FsmState = 8
	FsmState_ACTIVE             FsmState_FsmState = 9
	FsmState_INACTIVE           FsmState_FsmState = 10
	FsmState_RELEASE            FsmState_FsmState = 11
)

var FsmState_FsmState_name = map[int32]string{
	0:  "SESSION_ACTIVE",
	4:  "SESSION_TERMINATED",
	6:  "SESSION_RELEASED",
	7:  "CREATING",
	8:  "CREATED",
	9:  "ACTIVE",
	10: "INACTIVE",
	11: "RELEASE",
}

var FsmState_FsmState_value = map[string]int32{
	"SESSION_ACTIVE":     0,
	"SESSION_TERMINATED": 4,
	"SESSION_RELEASED":   6,
	"CREATING":           7,
	"CREATED":            8,
	"ACTIVE":             9,
	"INACTIVE":           10,
	"RELEASE":            11,
}

func (x FsmState_FsmState) String() string {
	return proto.EnumName(FsmState_FsmState_name, int32(x))
}

func (FsmState_FsmState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{21, 0}
}

type FlowDescriptor_Action int32

const (
	FlowDescriptor_PERMIT FlowDescriptor_Action = 0
	FlowDescriptor_DENY   FlowDescriptor_Action = 1
)

var FlowDescriptor_Action_name = map[int32]string{
	0: "PERMIT",
	1: "DENY",
}

var FlowDescriptor_Action_value = map[string]int32{
	"PERMIT": 0,
	"DENY":   1,
}

func (x FlowDescriptor_Action) String() string {
	return proto.EnumName(FlowDescriptor_Action_name, int32(x))
}

func (FlowDescriptor_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{25, 0}
}

type ApplyAction_Action int32

const (
	ApplyAction_DROP ApplyAction_Action = 0
	ApplyAction_FORW ApplyAction_Action = 1
	//Below fields may be required In future.
	ApplyAction_BUFF ApplyAction_Action = 2
	ApplyAction_NOCP ApplyAction_Action = 3
	ApplyAction_DUPL ApplyAction_Action = 4
)

var ApplyAction_Action_name = map[int32]string{
	0: "DROP",
	1: "FORW",
	2: "BUFF",
	3: "NOCP",
	4: "DUPL",
}

var ApplyAction_Action_value = map[string]int32{
	"DROP": 0,
	"FORW": 1,
	"BUFF": 2,
	"NOCP": 3,
	"DUPL": 4,
}

func (x ApplyAction_Action) String() string {
	return proto.EnumName(ApplyAction_Action_name, int32(x))
}

func (ApplyAction_Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{29, 0}
}

type RedirectInfo_RedirectAddrType int32

const (
	RedirectInfo_IPV4   RedirectInfo_RedirectAddrType = 0
	RedirectInfo_IPV6   RedirectInfo_RedirectAddrType = 1
	RedirectInfo_URL    RedirectInfo_RedirectAddrType = 2
	RedirectInfo_SIPURI RedirectInfo_RedirectAddrType = 3
	RedirectInfo_IPV4V6 RedirectInfo_RedirectAddrType = 4
)

var RedirectInfo_RedirectAddrType_name = map[int32]string{
	0: "IPV4",
	1: "IPV6",
	2: "URL",
	3: "SIPURI",
	4: "IPV4V6",
}

var RedirectInfo_RedirectAddrType_value = map[string]int32{
	"IPV4":   0,
	"IPV6":   1,
	"URL":    2,
	"SIPURI": 3,
	"IPV4V6": 4,
}

func (x RedirectInfo_RedirectAddrType) String() string {
	return proto.EnumName(RedirectInfo_RedirectAddrType_name, int32(x))
}

func (RedirectInfo_RedirectAddrType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{30, 0}
}

// Deprecated
type SetupFlowsRequest struct {
	// List of requests to activate
	Requests []*ActivateFlowsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch uint64 `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	// List of subscriber quota updates
	QuotaUpdates         *UpdateSubscriberQuotaStateRequest `protobuf:"bytes,3,opt,name=quota_updates,json=quotaUpdates,proto3" json:"quota_updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *SetupFlowsRequest) Reset()         { *m = SetupFlowsRequest{} }
func (m *SetupFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*SetupFlowsRequest) ProtoMessage()    {}
func (*SetupFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{0}
}

func (m *SetupFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupFlowsRequest.Unmarshal(m, b)
}
func (m *SetupFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupFlowsRequest.Marshal(b, m, deterministic)
}
func (m *SetupFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupFlowsRequest.Merge(m, src)
}
func (m *SetupFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_SetupFlowsRequest.Size(m)
}
func (m *SetupFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupFlowsRequest proto.InternalMessageInfo

func (m *SetupFlowsRequest) GetRequests() []*ActivateFlowsRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupFlowsRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

func (m *SetupFlowsRequest) GetQuotaUpdates() *UpdateSubscriberQuotaStateRequest {
	if m != nil {
		return m.QuotaUpdates
	}
	return nil
}

type SetupUEMacRequest struct {
	// List of UEs to activate
	Requests []*UEMacFlowRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupUEMacRequest) Reset()         { *m = SetupUEMacRequest{} }
func (m *SetupUEMacRequest) String() string { return proto.CompactTextString(m) }
func (*SetupUEMacRequest) ProtoMessage()    {}
func (*SetupUEMacRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{1}
}

func (m *SetupUEMacRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupUEMacRequest.Unmarshal(m, b)
}
func (m *SetupUEMacRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupUEMacRequest.Marshal(b, m, deterministic)
}
func (m *SetupUEMacRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupUEMacRequest.Merge(m, src)
}
func (m *SetupUEMacRequest) XXX_Size() int {
	return xxx_messageInfo_SetupUEMacRequest.Size(m)
}
func (m *SetupUEMacRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupUEMacRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupUEMacRequest proto.InternalMessageInfo

func (m *SetupUEMacRequest) GetRequests() []*UEMacFlowRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupUEMacRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupPolicyRequest struct {
	// List of requests to activate
	Requests []*ActivateFlowsRequest `protobuf:"bytes,1,rep,name=requests,proto3" json:"requests,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupPolicyRequest) Reset()         { *m = SetupPolicyRequest{} }
func (m *SetupPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*SetupPolicyRequest) ProtoMessage()    {}
func (*SetupPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{2}
}

func (m *SetupPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupPolicyRequest.Unmarshal(m, b)
}
func (m *SetupPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupPolicyRequest.Marshal(b, m, deterministic)
}
func (m *SetupPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupPolicyRequest.Merge(m, src)
}
func (m *SetupPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_SetupPolicyRequest.Size(m)
}
func (m *SetupPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupPolicyRequest proto.InternalMessageInfo

func (m *SetupPolicyRequest) GetRequests() []*ActivateFlowsRequest {
	if m != nil {
		return m.Requests
	}
	return nil
}

func (m *SetupPolicyRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupQuotaRequest struct {
	// List of quota rules to activate
	QuotaUpdates *UpdateSubscriberQuotaStateRequest `protobuf:"bytes,1,opt,name=quota_updates,json=quotaUpdates,proto3" json:"quota_updates,omitempty"`
	// epoch to prevent outdated setup calls
	Epoch                uint64   `protobuf:"varint,2,opt,name=epoch,proto3" json:"epoch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetupQuotaRequest) Reset()         { *m = SetupQuotaRequest{} }
func (m *SetupQuotaRequest) String() string { return proto.CompactTextString(m) }
func (*SetupQuotaRequest) ProtoMessage()    {}
func (*SetupQuotaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{3}
}

func (m *SetupQuotaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupQuotaRequest.Unmarshal(m, b)
}
func (m *SetupQuotaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupQuotaRequest.Marshal(b, m, deterministic)
}
func (m *SetupQuotaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupQuotaRequest.Merge(m, src)
}
func (m *SetupQuotaRequest) XXX_Size() int {
	return xxx_messageInfo_SetupQuotaRequest.Size(m)
}
func (m *SetupQuotaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupQuotaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetupQuotaRequest proto.InternalMessageInfo

func (m *SetupQuotaRequest) GetQuotaUpdates() *UpdateSubscriberQuotaStateRequest {
	if m != nil {
		return m.QuotaUpdates
	}
	return nil
}

func (m *SetupQuotaRequest) GetEpoch() uint64 {
	if m != nil {
		return m.Epoch
	}
	return 0
}

type SetupFlowsResult struct {
	Result               SetupFlowsResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.SetupFlowsResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SetupFlowsResult) Reset()         { *m = SetupFlowsResult{} }
func (m *SetupFlowsResult) String() string { return proto.CompactTextString(m) }
func (*SetupFlowsResult) ProtoMessage()    {}
func (*SetupFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{4}
}

func (m *SetupFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetupFlowsResult.Unmarshal(m, b)
}
func (m *SetupFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetupFlowsResult.Marshal(b, m, deterministic)
}
func (m *SetupFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetupFlowsResult.Merge(m, src)
}
func (m *SetupFlowsResult) XXX_Size() int {
	return xxx_messageInfo_SetupFlowsResult.Size(m)
}
func (m *SetupFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SetupFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_SetupFlowsResult proto.InternalMessageInfo

func (m *SetupFlowsResult) GetResult() SetupFlowsResult_Result {
	if m != nil {
		return m.Result
	}
	return SetupFlowsResult_SUCCESS
}

type RequestOriginType struct {
	Type                 RequestOriginType_OriginType `protobuf:"varint,1,opt,name=type,proto3,enum=magma.lte.RequestOriginType_OriginType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *RequestOriginType) Reset()         { *m = RequestOriginType{} }
func (m *RequestOriginType) String() string { return proto.CompactTextString(m) }
func (*RequestOriginType) ProtoMessage()    {}
func (*RequestOriginType) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{5}
}

func (m *RequestOriginType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestOriginType.Unmarshal(m, b)
}
func (m *RequestOriginType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestOriginType.Marshal(b, m, deterministic)
}
func (m *RequestOriginType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestOriginType.Merge(m, src)
}
func (m *RequestOriginType) XXX_Size() int {
	return xxx_messageInfo_RequestOriginType.Size(m)
}
func (m *RequestOriginType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestOriginType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestOriginType proto.InternalMessageInfo

func (m *RequestOriginType) GetType() RequestOriginType_OriginType {
	if m != nil {
		return m.Type
	}
	return RequestOriginType_GX
}

type ActivateFlowsRequest struct {
	Sid                  *SubscriberID             `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	IpAddr               string                    `protobuf:"bytes,2,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	RuleIds              []string                  `protobuf:"bytes,3,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	DynamicRules         []*PolicyRule             `protobuf:"bytes,4,rep,name=dynamic_rules,json=dynamicRules,proto3" json:"dynamic_rules,omitempty"`
	RequestOrigin        *RequestOriginType        `protobuf:"bytes,5,opt,name=request_origin,json=requestOrigin,proto3" json:"request_origin,omitempty"`
	ApnAmbr              *AggregatedMaximumBitrate `protobuf:"bytes,6,opt,name=apn_ambr,json=apnAmbr,proto3" json:"apn_ambr,omitempty"`
	Ipv6Addr             []byte                    `protobuf:"bytes,7,opt,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *ActivateFlowsRequest) Reset()         { *m = ActivateFlowsRequest{} }
func (m *ActivateFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*ActivateFlowsRequest) ProtoMessage()    {}
func (*ActivateFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{6}
}

func (m *ActivateFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateFlowsRequest.Unmarshal(m, b)
}
func (m *ActivateFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateFlowsRequest.Marshal(b, m, deterministic)
}
func (m *ActivateFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateFlowsRequest.Merge(m, src)
}
func (m *ActivateFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_ActivateFlowsRequest.Size(m)
}
func (m *ActivateFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateFlowsRequest proto.InternalMessageInfo

func (m *ActivateFlowsRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *ActivateFlowsRequest) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *ActivateFlowsRequest) GetRuleIds() []string {
	if m != nil {
		return m.RuleIds
	}
	return nil
}

func (m *ActivateFlowsRequest) GetDynamicRules() []*PolicyRule {
	if m != nil {
		return m.DynamicRules
	}
	return nil
}

func (m *ActivateFlowsRequest) GetRequestOrigin() *RequestOriginType {
	if m != nil {
		return m.RequestOrigin
	}
	return nil
}

func (m *ActivateFlowsRequest) GetApnAmbr() *AggregatedMaximumBitrate {
	if m != nil {
		return m.ApnAmbr
	}
	return nil
}

func (m *ActivateFlowsRequest) GetIpv6Addr() []byte {
	if m != nil {
		return m.Ipv6Addr
	}
	return nil
}

// DeactivateFlowsRequest can be used to deactivate all flows for a subscriber,
// all flows for some rules, or particular rules for a subscriber, depending on
// which parameters are passed. Rule IDs can apply to static rules or dynamic
// rules
// If no rule ids are given, all flows are deactivated
type DeactivateFlowsRequest struct {
	Sid                  *SubscriberID      `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	RuleIds              []string           `protobuf:"bytes,2,rep,name=rule_ids,json=ruleIds,proto3" json:"rule_ids,omitempty"`
	RequestOrigin        *RequestOriginType `protobuf:"bytes,3,opt,name=request_origin,json=requestOrigin,proto3" json:"request_origin,omitempty"`
	IpAddr               string             `protobuf:"bytes,4,opt,name=ip_addr,json=ipAddr,proto3" json:"ip_addr,omitempty"`
	Ipv6Addr             []byte             `protobuf:"bytes,5,opt,name=ipv6_addr,json=ipv6Addr,proto3" json:"ipv6_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DeactivateFlowsRequest) Reset()         { *m = DeactivateFlowsRequest{} }
func (m *DeactivateFlowsRequest) String() string { return proto.CompactTextString(m) }
func (*DeactivateFlowsRequest) ProtoMessage()    {}
func (*DeactivateFlowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{7}
}

func (m *DeactivateFlowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateFlowsRequest.Unmarshal(m, b)
}
func (m *DeactivateFlowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateFlowsRequest.Marshal(b, m, deterministic)
}
func (m *DeactivateFlowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateFlowsRequest.Merge(m, src)
}
func (m *DeactivateFlowsRequest) XXX_Size() int {
	return xxx_messageInfo_DeactivateFlowsRequest.Size(m)
}
func (m *DeactivateFlowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateFlowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateFlowsRequest proto.InternalMessageInfo

func (m *DeactivateFlowsRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetRuleIds() []string {
	if m != nil {
		return m.RuleIds
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetRequestOrigin() *RequestOriginType {
	if m != nil {
		return m.RequestOrigin
	}
	return nil
}

func (m *DeactivateFlowsRequest) GetIpAddr() string {
	if m != nil {
		return m.IpAddr
	}
	return ""
}

func (m *DeactivateFlowsRequest) GetIpv6Addr() []byte {
	if m != nil {
		return m.Ipv6Addr
	}
	return nil
}

type RuleModResult struct {
	RuleId               string               `protobuf:"bytes,1,opt,name=rule_id,json=ruleId,proto3" json:"rule_id,omitempty"`
	Result               RuleModResult_Result `protobuf:"varint,2,opt,name=result,proto3,enum=magma.lte.RuleModResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RuleModResult) Reset()         { *m = RuleModResult{} }
func (m *RuleModResult) String() string { return proto.CompactTextString(m) }
func (*RuleModResult) ProtoMessage()    {}
func (*RuleModResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{8}
}

func (m *RuleModResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleModResult.Unmarshal(m, b)
}
func (m *RuleModResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleModResult.Marshal(b, m, deterministic)
}
func (m *RuleModResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleModResult.Merge(m, src)
}
func (m *RuleModResult) XXX_Size() int {
	return xxx_messageInfo_RuleModResult.Size(m)
}
func (m *RuleModResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleModResult.DiscardUnknown(m)
}

var xxx_messageInfo_RuleModResult proto.InternalMessageInfo

func (m *RuleModResult) GetRuleId() string {
	if m != nil {
		return m.RuleId
	}
	return ""
}

func (m *RuleModResult) GetResult() RuleModResult_Result {
	if m != nil {
		return m.Result
	}
	return RuleModResult_SUCCESS
}

type ActivateFlowsResult struct {
	StaticRuleResults    []*RuleModResult `protobuf:"bytes,1,rep,name=static_rule_results,json=staticRuleResults,proto3" json:"static_rule_results,omitempty"`
	DynamicRuleResults   []*RuleModResult `protobuf:"bytes,2,rep,name=dynamic_rule_results,json=dynamicRuleResults,proto3" json:"dynamic_rule_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ActivateFlowsResult) Reset()         { *m = ActivateFlowsResult{} }
func (m *ActivateFlowsResult) String() string { return proto.CompactTextString(m) }
func (*ActivateFlowsResult) ProtoMessage()    {}
func (*ActivateFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{9}
}

func (m *ActivateFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActivateFlowsResult.Unmarshal(m, b)
}
func (m *ActivateFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActivateFlowsResult.Marshal(b, m, deterministic)
}
func (m *ActivateFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActivateFlowsResult.Merge(m, src)
}
func (m *ActivateFlowsResult) XXX_Size() int {
	return xxx_messageInfo_ActivateFlowsResult.Size(m)
}
func (m *ActivateFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ActivateFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_ActivateFlowsResult proto.InternalMessageInfo

func (m *ActivateFlowsResult) GetStaticRuleResults() []*RuleModResult {
	if m != nil {
		return m.StaticRuleResults
	}
	return nil
}

func (m *ActivateFlowsResult) GetDynamicRuleResults() []*RuleModResult {
	if m != nil {
		return m.DynamicRuleResults
	}
	return nil
}

type DeactivateFlowsResult struct {
	Result               DeactivateFlowsResult_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.DeactivateFlowsResult_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *DeactivateFlowsResult) Reset()         { *m = DeactivateFlowsResult{} }
func (m *DeactivateFlowsResult) String() string { return proto.CompactTextString(m) }
func (*DeactivateFlowsResult) ProtoMessage()    {}
func (*DeactivateFlowsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{10}
}

func (m *DeactivateFlowsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeactivateFlowsResult.Unmarshal(m, b)
}
func (m *DeactivateFlowsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeactivateFlowsResult.Marshal(b, m, deterministic)
}
func (m *DeactivateFlowsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeactivateFlowsResult.Merge(m, src)
}
func (m *DeactivateFlowsResult) XXX_Size() int {
	return xxx_messageInfo_DeactivateFlowsResult.Size(m)
}
func (m *DeactivateFlowsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DeactivateFlowsResult.DiscardUnknown(m)
}

var xxx_messageInfo_DeactivateFlowsResult proto.InternalMessageInfo

func (m *DeactivateFlowsResult) GetResult() DeactivateFlowsResult_Result {
	if m != nil {
		return m.Result
	}
	return DeactivateFlowsResult_SUCCESS
}

type FlowRequest struct {
	Match                *FlowMatch            `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	AppName              string                `protobuf:"bytes,2,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	BytesRx              uint64                `protobuf:"varint,3,opt,name=bytes_rx,json=bytesRx,proto3" json:"bytes_rx,omitempty"`
	ServiceType          string                `protobuf:"bytes,4,opt,name=service_type,json=serviceType,proto3" json:"service_type,omitempty"`
	SrcMac               string                `protobuf:"bytes,5,opt,name=src_mac,json=srcMac,proto3" json:"src_mac,omitempty"`
	DstMac               string                `protobuf:"bytes,6,opt,name=dst_mac,json=dstMac,proto3" json:"dst_mac,omitempty"`
	State                FlowRequest_FlowState `protobuf:"varint,7,opt,name=state,proto3,enum=magma.lte.FlowRequest_FlowState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FlowRequest) Reset()         { *m = FlowRequest{} }
func (m *FlowRequest) String() string { return proto.CompactTextString(m) }
func (*FlowRequest) ProtoMessage()    {}
func (*FlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{11}
}

func (m *FlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowRequest.Unmarshal(m, b)
}
func (m *FlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowRequest.Marshal(b, m, deterministic)
}
func (m *FlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowRequest.Merge(m, src)
}
func (m *FlowRequest) XXX_Size() int {
	return xxx_messageInfo_FlowRequest.Size(m)
}
func (m *FlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FlowRequest proto.InternalMessageInfo

func (m *FlowRequest) GetMatch() *FlowMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *FlowRequest) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *FlowRequest) GetBytesRx() uint64 {
	if m != nil {
		return m.BytesRx
	}
	return 0
}

func (m *FlowRequest) GetServiceType() string {
	if m != nil {
		return m.ServiceType
	}
	return ""
}

func (m *FlowRequest) GetSrcMac() string {
	if m != nil {
		return m.SrcMac
	}
	return ""
}

func (m *FlowRequest) GetDstMac() string {
	if m != nil {
		return m.DstMac
	}
	return ""
}

func (m *FlowRequest) GetState() FlowRequest_FlowState {
	if m != nil {
		return m.State
	}
	return FlowRequest_FLOW_CREATED
}

type FlowResponse struct {
	Result               FlowResponse_Result `protobuf:"varint,1,opt,name=result,proto3,enum=magma.lte.FlowResponse_Result" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FlowResponse) Reset()         { *m = FlowResponse{} }
func (m *FlowResponse) String() string { return proto.CompactTextString(m) }
func (*FlowResponse) ProtoMessage()    {}
func (*FlowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{12}
}

func (m *FlowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowResponse.Unmarshal(m, b)
}
func (m *FlowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowResponse.Marshal(b, m, deterministic)
}
func (m *FlowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowResponse.Merge(m, src)
}
func (m *FlowResponse) XXX_Size() int {
	return xxx_messageInfo_FlowResponse.Size(m)
}
func (m *FlowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlowResponse proto.InternalMessageInfo

func (m *FlowResponse) GetResult() FlowResponse_Result {
	if m != nil {
		return m.Result
	}
	return FlowResponse_SUCCESS
}

// UEMacFlowRequest is used to link a subscriber ID to a MAC address.
// This is used for Carrier WiFi data session establishment
type UEMacFlowRequest struct {
	Sid *SubscriberID `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// UE MAC address
	MacAddr string `protobuf:"bytes,2,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	Msisdn  string `protobuf:"bytes,3,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	// AP MAC address
	ApMacAddr string `protobuf:"bytes,4,opt,name=ap_mac_addr,json=apMacAddr,proto3" json:"ap_mac_addr,omitempty"`
	// AP Name
	ApName string `protobuf:"bytes,5,opt,name=ap_name,json=apName,proto3" json:"ap_name,omitempty"`
	// PDP Start time
	PdpStartTime         uint64   `protobuf:"varint,6,opt,name=pdp_start_time,json=pdpStartTime,proto3" json:"pdp_start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UEMacFlowRequest) Reset()         { *m = UEMacFlowRequest{} }
func (m *UEMacFlowRequest) String() string { return proto.CompactTextString(m) }
func (*UEMacFlowRequest) ProtoMessage()    {}
func (*UEMacFlowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{13}
}

func (m *UEMacFlowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UEMacFlowRequest.Unmarshal(m, b)
}
func (m *UEMacFlowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UEMacFlowRequest.Marshal(b, m, deterministic)
}
func (m *UEMacFlowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UEMacFlowRequest.Merge(m, src)
}
func (m *UEMacFlowRequest) XXX_Size() int {
	return xxx_messageInfo_UEMacFlowRequest.Size(m)
}
func (m *UEMacFlowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UEMacFlowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UEMacFlowRequest proto.InternalMessageInfo

func (m *UEMacFlowRequest) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *UEMacFlowRequest) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *UEMacFlowRequest) GetMsisdn() string {
	if m != nil {
		return m.Msisdn
	}
	return ""
}

func (m *UEMacFlowRequest) GetApMacAddr() string {
	if m != nil {
		return m.ApMacAddr
	}
	return ""
}

func (m *UEMacFlowRequest) GetApName() string {
	if m != nil {
		return m.ApName
	}
	return ""
}

func (m *UEMacFlowRequest) GetPdpStartTime() uint64 {
	if m != nil {
		return m.PdpStartTime
	}
	return 0
}

type SubscriberQuotaUpdate struct {
	Sid *SubscriberID `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	// UE MAC address
	MacAddr              string                     `protobuf:"bytes,2,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	UpdateType           SubscriberQuotaUpdate_Type `protobuf:"varint,3,opt,name=update_type,json=updateType,proto3,enum=magma.lte.SubscriberQuotaUpdate_Type" json:"update_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *SubscriberQuotaUpdate) Reset()         { *m = SubscriberQuotaUpdate{} }
func (m *SubscriberQuotaUpdate) String() string { return proto.CompactTextString(m) }
func (*SubscriberQuotaUpdate) ProtoMessage()    {}
func (*SubscriberQuotaUpdate) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{14}
}

func (m *SubscriberQuotaUpdate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriberQuotaUpdate.Unmarshal(m, b)
}
func (m *SubscriberQuotaUpdate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriberQuotaUpdate.Marshal(b, m, deterministic)
}
func (m *SubscriberQuotaUpdate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriberQuotaUpdate.Merge(m, src)
}
func (m *SubscriberQuotaUpdate) XXX_Size() int {
	return xxx_messageInfo_SubscriberQuotaUpdate.Size(m)
}
func (m *SubscriberQuotaUpdate) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriberQuotaUpdate.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriberQuotaUpdate proto.InternalMessageInfo

func (m *SubscriberQuotaUpdate) GetSid() *SubscriberID {
	if m != nil {
		return m.Sid
	}
	return nil
}

func (m *SubscriberQuotaUpdate) GetMacAddr() string {
	if m != nil {
		return m.MacAddr
	}
	return ""
}

func (m *SubscriberQuotaUpdate) GetUpdateType() SubscriberQuotaUpdate_Type {
	if m != nil {
		return m.UpdateType
	}
	return SubscriberQuotaUpdate_VALID_QUOTA
}

type UpdateSubscriberQuotaStateRequest struct {
	Updates              []*SubscriberQuotaUpdate `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateSubscriberQuotaStateRequest) Reset()         { *m = UpdateSubscriberQuotaStateRequest{} }
func (m *UpdateSubscriberQuotaStateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSubscriberQuotaStateRequest) ProtoMessage()    {}
func (*UpdateSubscriberQuotaStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{15}
}

func (m *UpdateSubscriberQuotaStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Unmarshal(m, b)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Merge(m, src)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSubscriberQuotaStateRequest.Size(m)
}
func (m *UpdateSubscriberQuotaStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSubscriberQuotaStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSubscriberQuotaStateRequest proto.InternalMessageInfo

func (m *UpdateSubscriberQuotaStateRequest) GetUpdates() []*SubscriberQuotaUpdate {
	if m != nil {
		return m.Updates
	}
	return nil
}

type TableAssignment struct {
	AppName              string   `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	MainTable            uint64   `protobuf:"varint,2,opt,name=main_table,json=mainTable,proto3" json:"main_table,omitempty"`
	ScratchTables        []uint64 `protobuf:"varint,3,rep,packed,name=scratch_tables,json=scratchTables,proto3" json:"scratch_tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableAssignment) Reset()         { *m = TableAssignment{} }
func (m *TableAssignment) String() string { return proto.CompactTextString(m) }
func (*TableAssignment) ProtoMessage()    {}
func (*TableAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{16}
}

func (m *TableAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableAssignment.Unmarshal(m, b)
}
func (m *TableAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableAssignment.Marshal(b, m, deterministic)
}
func (m *TableAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableAssignment.Merge(m, src)
}
func (m *TableAssignment) XXX_Size() int {
	return xxx_messageInfo_TableAssignment.Size(m)
}
func (m *TableAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_TableAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_TableAssignment proto.InternalMessageInfo

func (m *TableAssignment) GetAppName() string {
	if m != nil {
		return m.AppName
	}
	return ""
}

func (m *TableAssignment) GetMainTable() uint64 {
	if m != nil {
		return m.MainTable
	}
	return 0
}

func (m *TableAssignment) GetScratchTables() []uint64 {
	if m != nil {
		return m.ScratchTables
	}
	return nil
}

type AllTableAssignments struct {
	TableAssignments     []*TableAssignment `protobuf:"bytes,1,rep,name=table_assignments,json=tableAssignments,proto3" json:"table_assignments,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AllTableAssignments) Reset()         { *m = AllTableAssignments{} }
func (m *AllTableAssignments) String() string { return proto.CompactTextString(m) }
func (*AllTableAssignments) ProtoMessage()    {}
func (*AllTableAssignments) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{17}
}

func (m *AllTableAssignments) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllTableAssignments.Unmarshal(m, b)
}
func (m *AllTableAssignments) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllTableAssignments.Marshal(b, m, deterministic)
}
func (m *AllTableAssignments) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllTableAssignments.Merge(m, src)
}
func (m *AllTableAssignments) XXX_Size() int {
	return xxx_messageInfo_AllTableAssignments.Size(m)
}
func (m *AllTableAssignments) XXX_DiscardUnknown() {
	xxx_messageInfo_AllTableAssignments.DiscardUnknown(m)
}

var xxx_messageInfo_AllTableAssignments proto.InternalMessageInfo

func (m *AllTableAssignments) GetTableAssignments() []*TableAssignment {
	if m != nil {
		return m.TableAssignments
	}
	return nil
}

type SerializedRyuPacket struct {
	Pkt                  []byte   `protobuf:"bytes,1,opt,name=pkt,proto3" json:"pkt,omitempty"`
	Imsi                 string   `protobuf:"bytes,2,opt,name=imsi,proto3" json:"imsi,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SerializedRyuPacket) Reset()         { *m = SerializedRyuPacket{} }
func (m *SerializedRyuPacket) String() string { return proto.CompactTextString(m) }
func (*SerializedRyuPacket) ProtoMessage()    {}
func (*SerializedRyuPacket) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{18}
}

func (m *SerializedRyuPacket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SerializedRyuPacket.Unmarshal(m, b)
}
func (m *SerializedRyuPacket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SerializedRyuPacket.Marshal(b, m, deterministic)
}
func (m *SerializedRyuPacket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SerializedRyuPacket.Merge(m, src)
}
func (m *SerializedRyuPacket) XXX_Size() int {
	return xxx_messageInfo_SerializedRyuPacket.Size(m)
}
func (m *SerializedRyuPacket) XXX_DiscardUnknown() {
	xxx_messageInfo_SerializedRyuPacket.DiscardUnknown(m)
}

var xxx_messageInfo_SerializedRyuPacket proto.InternalMessageInfo

func (m *SerializedRyuPacket) GetPkt() []byte {
	if m != nil {
		return m.Pkt
	}
	return nil
}

func (m *SerializedRyuPacket) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

type PacketDropTableId struct {
	TableId              int32    `protobuf:"varint,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PacketDropTableId) Reset()         { *m = PacketDropTableId{} }
func (m *PacketDropTableId) String() string { return proto.CompactTextString(m) }
func (*PacketDropTableId) ProtoMessage()    {}
func (*PacketDropTableId) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{19}
}

func (m *PacketDropTableId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PacketDropTableId.Unmarshal(m, b)
}
func (m *PacketDropTableId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PacketDropTableId.Marshal(b, m, deterministic)
}
func (m *PacketDropTableId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PacketDropTableId.Merge(m, src)
}
func (m *PacketDropTableId) XXX_Size() int {
	return xxx_messageInfo_PacketDropTableId.Size(m)
}
func (m *PacketDropTableId) XXX_DiscardUnknown() {
	xxx_messageInfo_PacketDropTableId.DiscardUnknown(m)
}

var xxx_messageInfo_PacketDropTableId proto.InternalMessageInfo

func (m *PacketDropTableId) GetTableId() int32 {
	if m != nil {
		return m.TableId
	}
	return 0
}

type NodeID struct {
	NodeIdType           NodeID_NodeIDType `protobuf:"varint,1,opt,name=node_id_type,json=nodeIdType,proto3,enum=magma.lte.NodeID_NodeIDType" json:"node_id_type,omitempty"`
	NodeId               string            `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *NodeID) Reset()         { *m = NodeID{} }
func (m *NodeID) String() string { return proto.CompactTextString(m) }
func (*NodeID) ProtoMessage()    {}
func (*NodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{20}
}

func (m *NodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeID.Unmarshal(m, b)
}
func (m *NodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeID.Marshal(b, m, deterministic)
}
func (m *NodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeID.Merge(m, src)
}
func (m *NodeID) XXX_Size() int {
	return xxx_messageInfo_NodeID.Size(m)
}
func (m *NodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeID.DiscardUnknown(m)
}

var xxx_messageInfo_NodeID proto.InternalMessageInfo

func (m *NodeID) GetNodeIdType() NodeID_NodeIDType {
	if m != nil {
		return m.NodeIdType
	}
	return NodeID_IPv4
}

func (m *NodeID) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

//ToDo latest state change will reflect in upcoming proto
type FsmState struct {
	State                FsmState_FsmState `protobuf:"varint,1,opt,name=state,proto3,enum=magma.lte.FsmState_FsmState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FsmState) Reset()         { *m = FsmState{} }
func (m *FsmState) String() string { return proto.CompactTextString(m) }
func (*FsmState) ProtoMessage()    {}
func (*FsmState) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{21}
}

func (m *FsmState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FsmState.Unmarshal(m, b)
}
func (m *FsmState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FsmState.Marshal(b, m, deterministic)
}
func (m *FsmState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FsmState.Merge(m, src)
}
func (m *FsmState) XXX_Size() int {
	return xxx_messageInfo_FsmState.Size(m)
}
func (m *FsmState) XXX_DiscardUnknown() {
	xxx_messageInfo_FsmState.DiscardUnknown(m)
}

var xxx_messageInfo_FsmState proto.InternalMessageInfo

func (m *FsmState) GetState() FsmState_FsmState {
	if m != nil {
		return m.State
	}
	return FsmState_SESSION_ACTIVE
}

//CPFseid message
type CpFSeid struct {
	FSeid                uint64   `protobuf:"varint,1,opt,name=f_seid,json=fSeid,proto3" json:"f_seid,omitempty"`
	NodeId               *NodeID  `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CpFSeid) Reset()         { *m = CpFSeid{} }
func (m *CpFSeid) String() string { return proto.CompactTextString(m) }
func (*CpFSeid) ProtoMessage()    {}
func (*CpFSeid) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{22}
}

func (m *CpFSeid) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpFSeid.Unmarshal(m, b)
}
func (m *CpFSeid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpFSeid.Marshal(b, m, deterministic)
}
func (m *CpFSeid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpFSeid.Merge(m, src)
}
func (m *CpFSeid) XXX_Size() int {
	return xxx_messageInfo_CpFSeid.Size(m)
}
func (m *CpFSeid) XXX_DiscardUnknown() {
	xxx_messageInfo_CpFSeid.DiscardUnknown(m)
}

var xxx_messageInfo_CpFSeid proto.InternalMessageInfo

func (m *CpFSeid) GetFSeid() uint64 {
	if m != nil {
		return m.FSeid
	}
	return 0
}

func (m *CpFSeid) GetNodeId() *NodeID {
	if m != nil {
		return m.NodeId
	}
	return nil
}

type OuterHeadRemoval struct {
	OHdRemoDescr         uint32   `protobuf:"varint,1,opt,name=o_hd_remo_descr,json=oHdRemoDescr,proto3" json:"o_hd_remo_descr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OuterHeadRemoval) Reset()         { *m = OuterHeadRemoval{} }
func (m *OuterHeadRemoval) String() string { return proto.CompactTextString(m) }
func (*OuterHeadRemoval) ProtoMessage()    {}
func (*OuterHeadRemoval) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{23}
}

func (m *OuterHeadRemoval) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterHeadRemoval.Unmarshal(m, b)
}
func (m *OuterHeadRemoval) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterHeadRemoval.Marshal(b, m, deterministic)
}
func (m *OuterHeadRemoval) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterHeadRemoval.Merge(m, src)
}
func (m *OuterHeadRemoval) XXX_Size() int {
	return xxx_messageInfo_OuterHeadRemoval.Size(m)
}
func (m *OuterHeadRemoval) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterHeadRemoval.DiscardUnknown(m)
}

var xxx_messageInfo_OuterHeadRemoval proto.InternalMessageInfo

func (m *OuterHeadRemoval) GetOHdRemoDescr() uint32 {
	if m != nil {
		return m.OHdRemoDescr
	}
	return 0
}

type SdfFilters struct {
	Fd                   *FlowDescriptor `protobuf:"bytes,1,opt,name=fd,proto3" json:"fd,omitempty"`
	Ttc                  []byte          `protobuf:"bytes,2,opt,name=ttc,proto3" json:"ttc,omitempty"`
	Spi                  []byte          `protobuf:"bytes,3,opt,name=spi,proto3" json:"spi,omitempty"`
	Fl                   []byte          `protobuf:"bytes,4,opt,name=fl,proto3" json:"fl,omitempty"`
	SdfId                uint32          `protobuf:"varint,5,opt,name=sdf_id,json=sdfId,proto3" json:"sdf_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SdfFilters) Reset()         { *m = SdfFilters{} }
func (m *SdfFilters) String() string { return proto.CompactTextString(m) }
func (*SdfFilters) ProtoMessage()    {}
func (*SdfFilters) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{24}
}

func (m *SdfFilters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SdfFilters.Unmarshal(m, b)
}
func (m *SdfFilters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SdfFilters.Marshal(b, m, deterministic)
}
func (m *SdfFilters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SdfFilters.Merge(m, src)
}
func (m *SdfFilters) XXX_Size() int {
	return xxx_messageInfo_SdfFilters.Size(m)
}
func (m *SdfFilters) XXX_DiscardUnknown() {
	xxx_messageInfo_SdfFilters.DiscardUnknown(m)
}

var xxx_messageInfo_SdfFilters proto.InternalMessageInfo

func (m *SdfFilters) GetFd() *FlowDescriptor {
	if m != nil {
		return m.Fd
	}
	return nil
}

func (m *SdfFilters) GetTtc() []byte {
	if m != nil {
		return m.Ttc
	}
	return nil
}

func (m *SdfFilters) GetSpi() []byte {
	if m != nil {
		return m.Spi
	}
	return nil
}

func (m *SdfFilters) GetFl() []byte {
	if m != nil {
		return m.Fl
	}
	return nil
}

func (m *SdfFilters) GetSdfId() uint32 {
	if m != nil {
		return m.SdfId
	}
	return 0
}

type FlowDescriptor struct {
	Match                *FlowMatchNew         `protobuf:"bytes,1,opt,name=match,proto3" json:"match,omitempty"`
	Action               FlowDescriptor_Action `protobuf:"varint,2,opt,name=action,proto3,enum=magma.lte.FlowDescriptor_Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *FlowDescriptor) Reset()         { *m = FlowDescriptor{} }
func (m *FlowDescriptor) String() string { return proto.CompactTextString(m) }
func (*FlowDescriptor) ProtoMessage()    {}
func (*FlowDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{25}
}

func (m *FlowDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowDescriptor.Unmarshal(m, b)
}
func (m *FlowDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowDescriptor.Marshal(b, m, deterministic)
}
func (m *FlowDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowDescriptor.Merge(m, src)
}
func (m *FlowDescriptor) XXX_Size() int {
	return xxx_messageInfo_FlowDescriptor.Size(m)
}
func (m *FlowDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_FlowDescriptor proto.InternalMessageInfo

func (m *FlowDescriptor) GetMatch() *FlowMatchNew {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *FlowDescriptor) GetAction() FlowDescriptor_Action {
	if m != nil {
		return m.Action
	}
	return FlowDescriptor_PERMIT
}

type FlowMatchNew struct {
	Ipv4Src              string   `protobuf:"bytes,1,opt,name=ipv4_src,json=ipv4Src,proto3" json:"ipv4_src,omitempty"`
	Ipv4Dst              string   `protobuf:"bytes,2,opt,name=ipv4_dst,json=ipv4Dst,proto3" json:"ipv4_dst,omitempty"`
	TcpSrc               uint32   `protobuf:"varint,3,opt,name=tcp_src,json=tcpSrc,proto3" json:"tcp_src,omitempty"`
	TcpDst               uint32   `protobuf:"varint,4,opt,name=tcp_dst,json=tcpDst,proto3" json:"tcp_dst,omitempty"`
	UdpSrc               uint32   `protobuf:"varint,5,opt,name=udp_src,json=udpSrc,proto3" json:"udp_src,omitempty"`
	UdpDst               uint32   `protobuf:"varint,6,opt,name=udp_dst,json=udpDst,proto3" json:"udp_dst,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowMatchNew) Reset()         { *m = FlowMatchNew{} }
func (m *FlowMatchNew) String() string { return proto.CompactTextString(m) }
func (*FlowMatchNew) ProtoMessage()    {}
func (*FlowMatchNew) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{26}
}

func (m *FlowMatchNew) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowMatchNew.Unmarshal(m, b)
}
func (m *FlowMatchNew) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowMatchNew.Marshal(b, m, deterministic)
}
func (m *FlowMatchNew) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowMatchNew.Merge(m, src)
}
func (m *FlowMatchNew) XXX_Size() int {
	return xxx_messageInfo_FlowMatchNew.Size(m)
}
func (m *FlowMatchNew) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowMatchNew.DiscardUnknown(m)
}

var xxx_messageInfo_FlowMatchNew proto.InternalMessageInfo

func (m *FlowMatchNew) GetIpv4Src() string {
	if m != nil {
		return m.Ipv4Src
	}
	return ""
}

func (m *FlowMatchNew) GetIpv4Dst() string {
	if m != nil {
		return m.Ipv4Dst
	}
	return ""
}

func (m *FlowMatchNew) GetTcpSrc() uint32 {
	if m != nil {
		return m.TcpSrc
	}
	return 0
}

func (m *FlowMatchNew) GetTcpDst() uint32 {
	if m != nil {
		return m.TcpDst
	}
	return 0
}

func (m *FlowMatchNew) GetUdpSrc() uint32 {
	if m != nil {
		return m.UdpSrc
	}
	return 0
}

func (m *FlowMatchNew) GetUdpDst() uint32 {
	if m != nil {
		return m.UdpDst
	}
	return 0
}

type MacAddress struct {
	MacSrcValue          []byte   `protobuf:"bytes,1,opt,name=mac_src_value,json=macSrcValue,proto3" json:"mac_src_value,omitempty"`
	MacDstValue          []byte   `protobuf:"bytes,2,opt,name=mac_dst_value,json=macDstValue,proto3" json:"mac_dst_value,omitempty"`
	UpperMacSrcValue     []byte   `protobuf:"bytes,3,opt,name=upper_mac_src_value,json=upperMacSrcValue,proto3" json:"upper_mac_src_value,omitempty"`
	UpperMacDstValue     []byte   `protobuf:"bytes,4,opt,name=upper_mac_dst_value,json=upperMacDstValue,proto3" json:"upper_mac_dst_value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MacAddress) Reset()         { *m = MacAddress{} }
func (m *MacAddress) String() string { return proto.CompactTextString(m) }
func (*MacAddress) ProtoMessage()    {}
func (*MacAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{27}
}

func (m *MacAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MacAddress.Unmarshal(m, b)
}
func (m *MacAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MacAddress.Marshal(b, m, deterministic)
}
func (m *MacAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MacAddress.Merge(m, src)
}
func (m *MacAddress) XXX_Size() int {
	return xxx_messageInfo_MacAddress.Size(m)
}
func (m *MacAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_MacAddress.DiscardUnknown(m)
}

var xxx_messageInfo_MacAddress proto.InternalMessageInfo

func (m *MacAddress) GetMacSrcValue() []byte {
	if m != nil {
		return m.MacSrcValue
	}
	return nil
}

func (m *MacAddress) GetMacDstValue() []byte {
	if m != nil {
		return m.MacDstValue
	}
	return nil
}

func (m *MacAddress) GetUpperMacSrcValue() []byte {
	if m != nil {
		return m.UpperMacSrcValue
	}
	return nil
}

func (m *MacAddress) GetUpperMacDstValue() []byte {
	if m != nil {
		return m.UpperMacDstValue
	}
	return nil
}

//Table 7.5.2.2-3: Ethernet Packet Filter IE within PFCP Session Establishment $
type EthPackFilter struct {
	EthFiltId            uint32      `protobuf:"varint,1,opt,name=eth_filt_id,json=ethFiltId,proto3" json:"eth_filt_id,omitempty"`
	EthFiltProp          uint32      `protobuf:"varint,2,opt,name=eth_filt_prop,json=ethFiltProp,proto3" json:"eth_filt_prop,omitempty"`
	MacAddr              *MacAddress `protobuf:"bytes,3,opt,name=mac_addr,json=macAddr,proto3" json:"mac_addr,omitempty"`
	CTag                 uint32      `protobuf:"varint,4,opt,name=c_tag,json=cTag,proto3" json:"c_tag,omitempty"`
	STag                 uint32      `protobuf:"varint,5,opt,name=s_tag,json=sTag,proto3" json:"s_tag,omitempty"`
	SdfFilters           *SdfFilters `protobuf:"bytes,6,opt,name=sdf_filters,json=sdfFilters,proto3" json:"sdf_filters,omitempty"`
	Ethertype            uint32      `protobuf:"varint,7,opt,name=ethertype,proto3" json:"ethertype,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EthPackFilter) Reset()         { *m = EthPackFilter{} }
func (m *EthPackFilter) String() string { return proto.CompactTextString(m) }
func (*EthPackFilter) ProtoMessage()    {}
func (*EthPackFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{28}
}

func (m *EthPackFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EthPackFilter.Unmarshal(m, b)
}
func (m *EthPackFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EthPackFilter.Marshal(b, m, deterministic)
}
func (m *EthPackFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EthPackFilter.Merge(m, src)
}
func (m *EthPackFilter) XXX_Size() int {
	return xxx_messageInfo_EthPackFilter.Size(m)
}
func (m *EthPackFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EthPackFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EthPackFilter proto.InternalMessageInfo

func (m *EthPackFilter) GetEthFiltId() uint32 {
	if m != nil {
		return m.EthFiltId
	}
	return 0
}

func (m *EthPackFilter) GetEthFiltProp() uint32 {
	if m != nil {
		return m.EthFiltProp
	}
	return 0
}

func (m *EthPackFilter) GetMacAddr() *MacAddress {
	if m != nil {
		return m.MacAddr
	}
	return nil
}

func (m *EthPackFilter) GetCTag() uint32 {
	if m != nil {
		return m.CTag
	}
	return 0
}

func (m *EthPackFilter) GetSTag() uint32 {
	if m != nil {
		return m.STag
	}
	return 0
}

func (m *EthPackFilter) GetSdfFilters() *SdfFilters {
	if m != nil {
		return m.SdfFilters
	}
	return nil
}

func (m *EthPackFilter) GetEthertype() uint32 {
	if m != nil {
		return m.Ethertype
	}
	return 0
}

//ToDo ApplyAction will be simplified and will reflect in upcoming proto
type ApplyAction struct {
	ApplyAction          []ApplyAction_Action `protobuf:"varint,1,rep,packed,name=apply_action,json=applyAction,proto3,enum=magma.lte.ApplyAction_Action" json:"apply_action,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ApplyAction) Reset()         { *m = ApplyAction{} }
func (m *ApplyAction) String() string { return proto.CompactTextString(m) }
func (*ApplyAction) ProtoMessage()    {}
func (*ApplyAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{29}
}

func (m *ApplyAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyAction.Unmarshal(m, b)
}
func (m *ApplyAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyAction.Marshal(b, m, deterministic)
}
func (m *ApplyAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyAction.Merge(m, src)
}
func (m *ApplyAction) XXX_Size() int {
	return xxx_messageInfo_ApplyAction.Size(m)
}
func (m *ApplyAction) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyAction.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyAction proto.InternalMessageInfo

func (m *ApplyAction) GetApplyAction() []ApplyAction_Action {
	if m != nil {
		return m.ApplyAction
	}
	return nil
}

type RedirectInfo struct {
	RedAddType           RedirectInfo_RedirectAddrType `protobuf:"varint,1,opt,name=red_add_type,json=redAddType,proto3,enum=magma.lte.RedirectInfo_RedirectAddrType" json:"red_add_type,omitempty"`
	RedServerAddr        string                        `protobuf:"bytes,2,opt,name=red_server_addr,json=redServerAddr,proto3" json:"red_server_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RedirectInfo) Reset()         { *m = RedirectInfo{} }
func (m *RedirectInfo) String() string { return proto.CompactTextString(m) }
func (*RedirectInfo) ProtoMessage()    {}
func (*RedirectInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{30}
}

func (m *RedirectInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RedirectInfo.Unmarshal(m, b)
}
func (m *RedirectInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RedirectInfo.Marshal(b, m, deterministic)
}
func (m *RedirectInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedirectInfo.Merge(m, src)
}
func (m *RedirectInfo) XXX_Size() int {
	return xxx_messageInfo_RedirectInfo.Size(m)
}
func (m *RedirectInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RedirectInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RedirectInfo proto.InternalMessageInfo

func (m *RedirectInfo) GetRedAddType() RedirectInfo_RedirectAddrType {
	if m != nil {
		return m.RedAddType
	}
	return RedirectInfo_IPV4
}

func (m *RedirectInfo) GetRedServerAddr() string {
	if m != nil {
		return m.RedServerAddr
	}
	return ""
}

type OuterHeaderCreation struct {
	OTeid                uint32   `protobuf:"varint,1,opt,name=o_teid,json=oTeid,proto3" json:"o_teid,omitempty"`
	Ipv4Adr              string   `protobuf:"bytes,2,opt,name=ipv4_adr,json=ipv4Adr,proto3" json:"ipv4_adr,omitempty"`
	PortNo               uint32   `protobuf:"varint,3,opt,name=port_no,json=portNo,proto3" json:"port_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OuterHeaderCreation) Reset()         { *m = OuterHeaderCreation{} }
func (m *OuterHeaderCreation) String() string { return proto.CompactTextString(m) }
func (*OuterHeaderCreation) ProtoMessage()    {}
func (*OuterHeaderCreation) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{31}
}

func (m *OuterHeaderCreation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OuterHeaderCreation.Unmarshal(m, b)
}
func (m *OuterHeaderCreation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OuterHeaderCreation.Marshal(b, m, deterministic)
}
func (m *OuterHeaderCreation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OuterHeaderCreation.Merge(m, src)
}
func (m *OuterHeaderCreation) XXX_Size() int {
	return xxx_messageInfo_OuterHeaderCreation.Size(m)
}
func (m *OuterHeaderCreation) XXX_DiscardUnknown() {
	xxx_messageInfo_OuterHeaderCreation.DiscardUnknown(m)
}

var xxx_messageInfo_OuterHeaderCreation proto.InternalMessageInfo

func (m *OuterHeaderCreation) GetOTeid() uint32 {
	if m != nil {
		return m.OTeid
	}
	return 0
}

func (m *OuterHeaderCreation) GetIpv4Adr() string {
	if m != nil {
		return m.Ipv4Adr
	}
	return ""
}

func (m *OuterHeaderCreation) GetPortNo() uint32 {
	if m != nil {
		return m.PortNo
	}
	return 0
}

//Table 7.5.2.3-2: Forwarding Parameters IE in FAR
type FwdParam struct {
	DestIface            uint32               `protobuf:"varint,1,opt,name=dest_iface,json=destIface,proto3" json:"dest_iface,omitempty"`
	NetInstace           string               `protobuf:"bytes,2,opt,name=net_instace,json=netInstace,proto3" json:"net_instace,omitempty"`
	RedirectInfo         *RedirectInfo        `protobuf:"bytes,3,opt,name=redirect_info,json=redirectInfo,proto3" json:"redirect_info,omitempty"`
	OutrHeadCr           *OuterHeaderCreation `protobuf:"bytes,4,opt,name=outr_head_cr,json=outrHeadCr,proto3" json:"outr_head_cr,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *FwdParam) Reset()         { *m = FwdParam{} }
func (m *FwdParam) String() string { return proto.CompactTextString(m) }
func (*FwdParam) ProtoMessage()    {}
func (*FwdParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{32}
}

func (m *FwdParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FwdParam.Unmarshal(m, b)
}
func (m *FwdParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FwdParam.Marshal(b, m, deterministic)
}
func (m *FwdParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FwdParam.Merge(m, src)
}
func (m *FwdParam) XXX_Size() int {
	return xxx_messageInfo_FwdParam.Size(m)
}
func (m *FwdParam) XXX_DiscardUnknown() {
	xxx_messageInfo_FwdParam.DiscardUnknown(m)
}

var xxx_messageInfo_FwdParam proto.InternalMessageInfo

func (m *FwdParam) GetDestIface() uint32 {
	if m != nil {
		return m.DestIface
	}
	return 0
}

func (m *FwdParam) GetNetInstace() string {
	if m != nil {
		return m.NetInstace
	}
	return ""
}

func (m *FwdParam) GetRedirectInfo() *RedirectInfo {
	if m != nil {
		return m.RedirectInfo
	}
	return nil
}

func (m *FwdParam) GetOutrHeadCr() *OuterHeaderCreation {
	if m != nil {
		return m.OutrHeadCr
	}
	return nil
}

//Table 7.5.2.3-3: Duplicating Parameters IE in FAR
type DupParam struct {
	DestIface            uint32   `protobuf:"varint,1,opt,name=dest_iface,json=destIface,proto3" json:"dest_iface,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DupParam) Reset()         { *m = DupParam{} }
func (m *DupParam) String() string { return proto.CompactTextString(m) }
func (*DupParam) ProtoMessage()    {}
func (*DupParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{33}
}

func (m *DupParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DupParam.Unmarshal(m, b)
}
func (m *DupParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DupParam.Marshal(b, m, deterministic)
}
func (m *DupParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DupParam.Merge(m, src)
}
func (m *DupParam) XXX_Size() int {
	return xxx_messageInfo_DupParam.Size(m)
}
func (m *DupParam) XXX_DiscardUnknown() {
	xxx_messageInfo_DupParam.DiscardUnknown(m)
}

var xxx_messageInfo_DupParam proto.InternalMessageInfo

func (m *DupParam) GetDestIface() uint32 {
	if m != nil {
		return m.DestIface
	}
	return 0
}

//PDI Message Table 7.5.2.2-2: PDI IE within PFCP Session Establishment Request
type PDI struct {
	SrcInterface         uint32      `protobuf:"varint,1,opt,name=src_interface,json=srcInterface,proto3" json:"src_interface,omitempty"`
	LocalFTeid           uint32      `protobuf:"varint,2,opt,name=local_f_teid,json=localFTeid,proto3" json:"local_f_teid,omitempty"`
	NetInstance          string      `protobuf:"bytes,3,opt,name=net_instance,json=netInstance,proto3" json:"net_instance,omitempty"`
	UeIpAdr              string      `protobuf:"bytes,4,opt,name=ue_ip_adr,json=ueIpAdr,proto3" json:"ue_ip_adr,omitempty"`
	TrEpId               []byte      `protobuf:"bytes,5,opt,name=tr_ep_id,json=trEpId,proto3" json:"tr_ep_id,omitempty"`
	SdfFilters           *SdfFilters `protobuf:"bytes,6,opt,name=sdf_filters,json=sdfFilters,proto3" json:"sdf_filters,omitempty"`
	AppId                string      `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PDI) Reset()         { *m = PDI{} }
func (m *PDI) String() string { return proto.CompactTextString(m) }
func (*PDI) ProtoMessage()    {}
func (*PDI) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{34}
}

func (m *PDI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PDI.Unmarshal(m, b)
}
func (m *PDI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PDI.Marshal(b, m, deterministic)
}
func (m *PDI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PDI.Merge(m, src)
}
func (m *PDI) XXX_Size() int {
	return xxx_messageInfo_PDI.Size(m)
}
func (m *PDI) XXX_DiscardUnknown() {
	xxx_messageInfo_PDI.DiscardUnknown(m)
}

var xxx_messageInfo_PDI proto.InternalMessageInfo

func (m *PDI) GetSrcInterface() uint32 {
	if m != nil {
		return m.SrcInterface
	}
	return 0
}

func (m *PDI) GetLocalFTeid() uint32 {
	if m != nil {
		return m.LocalFTeid
	}
	return 0
}

func (m *PDI) GetNetInstance() string {
	if m != nil {
		return m.NetInstance
	}
	return ""
}

func (m *PDI) GetUeIpAdr() string {
	if m != nil {
		return m.UeIpAdr
	}
	return ""
}

func (m *PDI) GetTrEpId() []byte {
	if m != nil {
		return m.TrEpId
	}
	return nil
}

func (m *PDI) GetSdfFilters() *SdfFilters {
	if m != nil {
		return m.SdfFilters
	}
	return nil
}

func (m *PDI) GetAppId() string {
	if m != nil {
		return m.AppId
	}
	return ""
}

//PDR message Table 7.5.2.2-1: Create PDR IE within PFCP Session Establishment
type SetGroupPDR struct {
	PdrId                uint32            `protobuf:"varint,1,opt,name=pdr_id,json=pdrId,proto3" json:"pdr_id,omitempty"`
	SessVerNo            int32             `protobuf:"varint,2,opt,name=sess_ver_no,json=sessVerNo,proto3" json:"sess_ver_no,omitempty"`
	Precedence           uint32            `protobuf:"varint,3,opt,name=precedence,proto3" json:"precedence,omitempty"`
	Pdi                  *PDI              `protobuf:"bytes,4,opt,name=pdi,proto3" json:"pdi,omitempty"`
	OHRemoDesc           *OuterHeadRemoval `protobuf:"bytes,5,opt,name=o_h_remo_desc,json=oHRemoDesc,proto3" json:"o_h_remo_desc,omitempty"`
	FarId                uint32            `protobuf:"varint,6,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
	UrrId                uint32            `protobuf:"varint,7,opt,name=urr_id,json=urrId,proto3" json:"urr_id,omitempty"`
	QerId                uint32            `protobuf:"varint,8,opt,name=qer_id,json=qerId,proto3" json:"qer_id,omitempty"`
	BarId                uint32            `protobuf:"varint,9,opt,name=bar_id,json=barId,proto3" json:"bar_id,omitempty"`
	ActivePredRule       string            `protobuf:"bytes,10,opt,name=active_pred_rule,json=activePredRule,proto3" json:"active_pred_rule,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SetGroupPDR) Reset()         { *m = SetGroupPDR{} }
func (m *SetGroupPDR) String() string { return proto.CompactTextString(m) }
func (*SetGroupPDR) ProtoMessage()    {}
func (*SetGroupPDR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{35}
}

func (m *SetGroupPDR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupPDR.Unmarshal(m, b)
}
func (m *SetGroupPDR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupPDR.Marshal(b, m, deterministic)
}
func (m *SetGroupPDR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupPDR.Merge(m, src)
}
func (m *SetGroupPDR) XXX_Size() int {
	return xxx_messageInfo_SetGroupPDR.Size(m)
}
func (m *SetGroupPDR) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupPDR.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupPDR proto.InternalMessageInfo

func (m *SetGroupPDR) GetPdrId() uint32 {
	if m != nil {
		return m.PdrId
	}
	return 0
}

func (m *SetGroupPDR) GetSessVerNo() int32 {
	if m != nil {
		return m.SessVerNo
	}
	return 0
}

func (m *SetGroupPDR) GetPrecedence() uint32 {
	if m != nil {
		return m.Precedence
	}
	return 0
}

func (m *SetGroupPDR) GetPdi() *PDI {
	if m != nil {
		return m.Pdi
	}
	return nil
}

func (m *SetGroupPDR) GetOHRemoDesc() *OuterHeadRemoval {
	if m != nil {
		return m.OHRemoDesc
	}
	return nil
}

func (m *SetGroupPDR) GetFarId() uint32 {
	if m != nil {
		return m.FarId
	}
	return 0
}

func (m *SetGroupPDR) GetUrrId() uint32 {
	if m != nil {
		return m.UrrId
	}
	return 0
}

func (m *SetGroupPDR) GetQerId() uint32 {
	if m != nil {
		return m.QerId
	}
	return 0
}

func (m *SetGroupPDR) GetBarId() uint32 {
	if m != nil {
		return m.BarId
	}
	return 0
}

func (m *SetGroupPDR) GetActivePredRule() string {
	if m != nil {
		return m.ActivePredRule
	}
	return ""
}

//FAR message Table 7.5.2.3-1: Create FAR IE within PFCP Session Establishment
type SetGroupFAR struct {
	FarId                uint32       `protobuf:"varint,1,opt,name=far_id,json=farId,proto3" json:"far_id,omitempty"`
	SessVerNo            int32        `protobuf:"varint,2,opt,name=sess_ver_no,json=sessVerNo,proto3" json:"sess_ver_no,omitempty"`
	ApplyAction          *ApplyAction `protobuf:"bytes,3,opt,name=apply_action,json=applyAction,proto3" json:"apply_action,omitempty"`
	FwdParm              *FwdParam    `protobuf:"bytes,4,opt,name=fwd_parm,json=fwdParm,proto3" json:"fwd_parm,omitempty"`
	DuParam              *DupParam    `protobuf:"bytes,5,opt,name=du_param,json=duParam,proto3" json:"du_param,omitempty"`
	BarId                uint32       `protobuf:"varint,6,opt,name=bar_id,json=barId,proto3" json:"bar_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetGroupFAR) Reset()         { *m = SetGroupFAR{} }
func (m *SetGroupFAR) String() string { return proto.CompactTextString(m) }
func (*SetGroupFAR) ProtoMessage()    {}
func (*SetGroupFAR) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{36}
}

func (m *SetGroupFAR) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetGroupFAR.Unmarshal(m, b)
}
func (m *SetGroupFAR) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetGroupFAR.Marshal(b, m, deterministic)
}
func (m *SetGroupFAR) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetGroupFAR.Merge(m, src)
}
func (m *SetGroupFAR) XXX_Size() int {
	return xxx_messageInfo_SetGroupFAR.Size(m)
}
func (m *SetGroupFAR) XXX_DiscardUnknown() {
	xxx_messageInfo_SetGroupFAR.DiscardUnknown(m)
}

var xxx_messageInfo_SetGroupFAR proto.InternalMessageInfo

func (m *SetGroupFAR) GetFarId() uint32 {
	if m != nil {
		return m.FarId
	}
	return 0
}

func (m *SetGroupFAR) GetSessVerNo() int32 {
	if m != nil {
		return m.SessVerNo
	}
	return 0
}

func (m *SetGroupFAR) GetApplyAction() *ApplyAction {
	if m != nil {
		return m.ApplyAction
	}
	return nil
}

func (m *SetGroupFAR) GetFwdParm() *FwdParam {
	if m != nil {
		return m.FwdParm
	}
	return nil
}

func (m *SetGroupFAR) GetDuParam() *DupParam {
	if m != nil {
		return m.DuParam
	}
	return nil
}

func (m *SetGroupFAR) GetBarId() uint32 {
	if m != nil {
		return m.BarId
	}
	return 0
}

//SET message - SMF to Upf Session Requests
//ToDo Flattening of SessionSet is in progress so will be updated along with addressing the comments
type SessionSet struct {
	Seid                 string         `protobuf:"bytes,1,opt,name=seid,proto3" json:"seid,omitempty"`
	SessVerNo            int32          `protobuf:"varint,2,opt,name=sess_ver_no,json=sessVerNo,proto3" json:"sess_ver_no,omitempty"`
	NodeId               *NodeID        `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	State                *FsmState      `protobuf:"bytes,16,opt,name=state,proto3" json:"state,omitempty"`
	FSeid                *CpFSeid       `protobuf:"bytes,4,opt,name=f_seid,json=fSeid,proto3" json:"f_seid,omitempty"`
	SetGrPdr             []*SetGroupPDR `protobuf:"bytes,5,rep,name=set_gr_pdr,json=setGrPdr,proto3" json:"set_gr_pdr,omitempty"`
	SetGrFar             []*SetGroupFAR `protobuf:"bytes,6,rep,name=set_gr_far,json=setGrFar,proto3" json:"set_gr_far,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SessionSet) Reset()         { *m = SessionSet{} }
func (m *SessionSet) String() string { return proto.CompactTextString(m) }
func (*SessionSet) ProtoMessage()    {}
func (*SessionSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{37}
}

func (m *SessionSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionSet.Unmarshal(m, b)
}
func (m *SessionSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionSet.Marshal(b, m, deterministic)
}
func (m *SessionSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionSet.Merge(m, src)
}
func (m *SessionSet) XXX_Size() int {
	return xxx_messageInfo_SessionSet.Size(m)
}
func (m *SessionSet) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionSet.DiscardUnknown(m)
}

var xxx_messageInfo_SessionSet proto.InternalMessageInfo

func (m *SessionSet) GetSeid() string {
	if m != nil {
		return m.Seid
	}
	return ""
}

func (m *SessionSet) GetSessVerNo() int32 {
	if m != nil {
		return m.SessVerNo
	}
	return 0
}

func (m *SessionSet) GetNodeId() *NodeID {
	if m != nil {
		return m.NodeId
	}
	return nil
}

func (m *SessionSet) GetState() *FsmState {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SessionSet) GetFSeid() *CpFSeid {
	if m != nil {
		return m.FSeid
	}
	return nil
}

func (m *SessionSet) GetSetGrPdr() []*SetGroupPDR {
	if m != nil {
		return m.SetGrPdr
	}
	return nil
}

func (m *SessionSet) GetSetGrFar() []*SetGroupFAR {
	if m != nil {
		return m.SetGrFar
	}
	return nil
}

//ToDo Response will reflect in upcoming proto
type UpfRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpfRes) Reset()         { *m = UpfRes{} }
func (m *UpfRes) String() string { return proto.CompactTextString(m) }
func (*UpfRes) ProtoMessage()    {}
func (*UpfRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_e17e923ef6f5752e, []int{38}
}

func (m *UpfRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpfRes.Unmarshal(m, b)
}
func (m *UpfRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpfRes.Marshal(b, m, deterministic)
}
func (m *UpfRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpfRes.Merge(m, src)
}
func (m *UpfRes) XXX_Size() int {
	return xxx_messageInfo_UpfRes.Size(m)
}
func (m *UpfRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpfRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpfRes proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("magma.lte.SetupFlowsResult_Result", SetupFlowsResult_Result_name, SetupFlowsResult_Result_value)
	proto.RegisterEnum("magma.lte.RequestOriginType_OriginType", RequestOriginType_OriginType_name, RequestOriginType_OriginType_value)
	proto.RegisterEnum("magma.lte.RuleModResult_Result", RuleModResult_Result_name, RuleModResult_Result_value)
	proto.RegisterEnum("magma.lte.DeactivateFlowsResult_Result", DeactivateFlowsResult_Result_name, DeactivateFlowsResult_Result_value)
	proto.RegisterEnum("magma.lte.FlowRequest_FlowState", FlowRequest_FlowState_name, FlowRequest_FlowState_value)
	proto.RegisterEnum("magma.lte.FlowResponse_Result", FlowResponse_Result_name, FlowResponse_Result_value)
	proto.RegisterEnum("magma.lte.SubscriberQuotaUpdate_Type", SubscriberQuotaUpdate_Type_name, SubscriberQuotaUpdate_Type_value)
	proto.RegisterEnum("magma.lte.NodeID_NodeIDType", NodeID_NodeIDType_name, NodeID_NodeIDType_value)
	proto.RegisterEnum("magma.lte.FsmState_FsmState", FsmState_FsmState_name, FsmState_FsmState_value)
	proto.RegisterEnum("magma.lte.FlowDescriptor_Action", FlowDescriptor_Action_name, FlowDescriptor_Action_value)
	proto.RegisterEnum("magma.lte.ApplyAction_Action", ApplyAction_Action_name, ApplyAction_Action_value)
	proto.RegisterEnum("magma.lte.RedirectInfo_RedirectAddrType", RedirectInfo_RedirectAddrType_name, RedirectInfo_RedirectAddrType_value)
	proto.RegisterType((*SetupFlowsRequest)(nil), "magma.lte.SetupFlowsRequest")
	proto.RegisterType((*SetupUEMacRequest)(nil), "magma.lte.SetupUEMacRequest")
	proto.RegisterType((*SetupPolicyRequest)(nil), "magma.lte.SetupPolicyRequest")
	proto.RegisterType((*SetupQuotaRequest)(nil), "magma.lte.SetupQuotaRequest")
	proto.RegisterType((*SetupFlowsResult)(nil), "magma.lte.SetupFlowsResult")
	proto.RegisterType((*RequestOriginType)(nil), "magma.lte.RequestOriginType")
	proto.RegisterType((*ActivateFlowsRequest)(nil), "magma.lte.ActivateFlowsRequest")
	proto.RegisterType((*DeactivateFlowsRequest)(nil), "magma.lte.DeactivateFlowsRequest")
	proto.RegisterType((*RuleModResult)(nil), "magma.lte.RuleModResult")
	proto.RegisterType((*ActivateFlowsResult)(nil), "magma.lte.ActivateFlowsResult")
	proto.RegisterType((*DeactivateFlowsResult)(nil), "magma.lte.DeactivateFlowsResult")
	proto.RegisterType((*FlowRequest)(nil), "magma.lte.FlowRequest")
	proto.RegisterType((*FlowResponse)(nil), "magma.lte.FlowResponse")
	proto.RegisterType((*UEMacFlowRequest)(nil), "magma.lte.UEMacFlowRequest")
	proto.RegisterType((*SubscriberQuotaUpdate)(nil), "magma.lte.SubscriberQuotaUpdate")
	proto.RegisterType((*UpdateSubscriberQuotaStateRequest)(nil), "magma.lte.UpdateSubscriberQuotaStateRequest")
	proto.RegisterType((*TableAssignment)(nil), "magma.lte.TableAssignment")
	proto.RegisterType((*AllTableAssignments)(nil), "magma.lte.AllTableAssignments")
	proto.RegisterType((*SerializedRyuPacket)(nil), "magma.lte.SerializedRyuPacket")
	proto.RegisterType((*PacketDropTableId)(nil), "magma.lte.PacketDropTableId")
	proto.RegisterType((*NodeID)(nil), "magma.lte.NodeID")
	proto.RegisterType((*FsmState)(nil), "magma.lte.Fsm_state")
	proto.RegisterType((*CpFSeid)(nil), "magma.lte.CpFSeid")
	proto.RegisterType((*OuterHeadRemoval)(nil), "magma.lte.OuterHeadRemoval")
	proto.RegisterType((*SdfFilters)(nil), "magma.lte.SdfFilters")
	proto.RegisterType((*FlowDescriptor)(nil), "magma.lte.FlowDescriptor")
	proto.RegisterType((*FlowMatchNew)(nil), "magma.lte.FlowMatchNew")
	proto.RegisterType((*MacAddress)(nil), "magma.lte.MacAddress")
	proto.RegisterType((*EthPackFilter)(nil), "magma.lte.EthPackFilter")
	proto.RegisterType((*ApplyAction)(nil), "magma.lte.ApplyAction")
	proto.RegisterType((*RedirectInfo)(nil), "magma.lte.RedirectInfo")
	proto.RegisterType((*OuterHeaderCreation)(nil), "magma.lte.OuterHeaderCreation")
	proto.RegisterType((*FwdParam)(nil), "magma.lte.FwdParam")
	proto.RegisterType((*DupParam)(nil), "magma.lte.DupParam")
	proto.RegisterType((*PDI)(nil), "magma.lte.PDI")
	proto.RegisterType((*SetGroupPDR)(nil), "magma.lte.SetGroupPDR")
	proto.RegisterType((*SetGroupFAR)(nil), "magma.lte.SetGroupFAR")
	proto.RegisterType((*SessionSet)(nil), "magma.lte.SessionSet")
	proto.RegisterType((*UpfRes)(nil), "magma.lte.UpfRes")
}

func init() { proto.RegisterFile("lte/protos/pipelined.proto", fileDescriptor_e17e923ef6f5752e) }

var fileDescriptor_e17e923ef6f5752e = []byte{
	// 2936 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x39, 0x5d, 0x6f, 0x1b, 0xc7,
	0xb5, 0x5a, 0x7e, 0x8a, 0x87, 0xa4, 0xb4, 0x1e, 0xd9, 0x96, 0x2c, 0x7f, 0x44, 0xde, 0xdc, 0xdc,
	0x6b, 0x1b, 0x37, 0xf2, 0x85, 0x63, 0x38, 0x89, 0x13, 0x24, 0x61, 0x44, 0xd2, 0xde, 0x5c, 0x89,
	0xa2, 0x87, 0x92, 0xe2, 0x7b, 0x1f, 0xee, 0xde, 0xd1, 0xce, 0x50, 0x5a, 0x84, 0xe4, 0xae, 0x67,
	0x86, 0x76, 0x5c, 0x14, 0x7d, 0x28, 0xd0, 0xbc, 0x14, 0x2d, 0xfa, 0xda, 0xfe, 0x82, 0x02, 0x7d,
	0x28, 0xd0, 0xb7, 0xfe, 0x85, 0xb6, 0x40, 0x51, 0xf4, 0xa9, 0xe8, 0x6f, 0xe8, 0x5b, 0xd1, 0xe7,
	0x62, 0x3e, 0x96, 0x5c, 0x52, 0x92, 0x95, 0x0f, 0xf7, 0x69, 0x67, 0xce, 0x9c, 0x73, 0xe6, 0x9c,
	0x33, 0xe7, 0x6b, 0x66, 0x61, 0x7d, 0x20, 0xd9, 0xdd, 0x84, 0xc7, 0x32, 0x16, 0x77, 0x93, 0x28,
	0x61, 0x83, 0x68, 0xc4, 0xe8, 0xa6, 0x06, 0xa0, 0xca, 0x90, 0x1c, 0x0d, 0xc9, 0xe6, 0x40, 0xb2,
	0xf5, 0x2b, 0x31, 0x0f, 0xdf, 0xe3, 0x29, 0x62, 0x18, 0x0f, 0x87, 0xf1, 0xc8, 0x60, 0xad, 0x5f,
	0xc9, 0x72, 0x88, 0x07, 0x51, 0xf8, 0x92, 0x1e, 0xda, 0xa5, 0x8d, 0xcc, 0x92, 0x60, 0x42, 0x44,
	0xf1, 0x28, 0x18, 0x92, 0x11, 0x39, 0x62, 0xdc, 0x62, 0x5c, 0xcf, 0x62, 0x8c, 0x0f, 0x45, 0xc8,
	0xa3, 0x43, 0xc6, 0x53, 0x06, 0xde, 0x6f, 0x1d, 0xb8, 0xd0, 0x63, 0x72, 0x9c, 0xb4, 0x07, 0xf1,
	0x0b, 0x81, 0xd9, 0xb3, 0x31, 0x13, 0x12, 0x7d, 0x00, 0x8b, 0xdc, 0x0c, 0xc5, 0x9a, 0xb3, 0x91,
	0xbf, 0x55, 0xbd, 0xf7, 0xc6, 0xe6, 0x44, 0xd4, 0xcd, 0x46, 0x28, 0xa3, 0xe7, 0x44, 0xb2, 0x2c,
	0x09, 0x9e, 0x10, 0xa0, 0x8b, 0x50, 0x64, 0x49, 0x1c, 0x1e, 0xaf, 0xe5, 0x36, 0x9c, 0x5b, 0x05,
	0x6c, 0x26, 0xe8, 0x09, 0xd4, 0x9f, 0x8d, 0x63, 0x49, 0x82, 0x71, 0x42, 0x89, 0x64, 0x62, 0x2d,
	0xbf, 0xe1, 0xdc, 0xaa, 0xde, 0xfb, 0xcf, 0x0c, 0xdf, 0x7d, 0xbd, 0xd2, 0x9b, 0x08, 0xf9, 0x44,
	0xe1, 0xf7, 0x24, 0x91, 0x2c, 0xdd, 0xa4, 0xa6, 0x59, 0x18, 0x3c, 0xe1, 0x1d, 0x5a, 0xd1, 0xf7,
	0x5b, 0x3b, 0x24, 0x4c, 0x45, 0x7f, 0xf7, 0x84, 0xe8, 0x57, 0xb3, 0x5b, 0x28, 0x54, 0x25, 0xf7,
	0xd7, 0x14, 0xdb, 0x3b, 0x02, 0xa4, 0xf7, 0xe8, 0x6a, 0xbb, 0xff, 0xeb, 0xec, 0xe3, 0x7d, 0xdf,
	0x2a, 0xa3, 0x95, 0x4e, 0xf7, 0x39, 0x61, 0x34, 0xe7, 0xbb, 0x1a, 0xed, 0x8c, 0xdd, 0xbf, 0x72,
	0xc0, 0xcd, 0xba, 0x81, 0x18, 0x0f, 0x24, 0x7a, 0x08, 0x25, 0xae, 0x47, 0x7a, 0xdb, 0xa5, 0x7b,
	0x5e, 0x66, 0xdb, 0x79, 0xe4, 0x4d, 0xf3, 0xc1, 0x96, 0xc2, 0x7b, 0x00, 0x25, 0xcb, 0xa5, 0x0a,
	0xe5, 0xde, 0xfe, 0xd6, 0x56, 0xab, 0xd7, 0x73, 0x17, 0xd4, 0xa4, 0xdd, 0xf0, 0xb7, 0xf7, 0x71,
	0xcb, 0x75, 0x10, 0x82, 0xa5, 0xdd, 0xfd, 0xbd, 0x66, 0x63, 0xaf, 0xd5, 0x0c, 0x5a, 0xdd, 0xdd,
	0xad, 0xc7, 0x6e, 0xce, 0x1b, 0xc1, 0x05, 0x2b, 0xf7, 0x2e, 0x8f, 0x8e, 0xa2, 0xd1, 0xde, 0xcb,
	0x84, 0xa1, 0x0f, 0xa0, 0x20, 0x5f, 0x26, 0xcc, 0x8a, 0xf1, 0x1f, 0x19, 0x31, 0x4e, 0xe0, 0x6e,
	0x4e, 0x87, 0x58, 0x13, 0x79, 0xd7, 0x00, 0x32, 0xac, 0x4a, 0x90, 0x7b, 0xf4, 0xd4, 0x5d, 0xd0,
	0xdf, 0xff, 0x71, 0x1d, 0xef, 0xcf, 0x39, 0xb8, 0x78, 0xda, 0x79, 0xa1, 0xdb, 0x90, 0x17, 0x11,
	0xb5, 0x06, 0x5f, 0xcd, 0x6a, 0x3e, 0x31, 0xb5, 0xdf, 0xc4, 0x0a, 0x07, 0xad, 0x42, 0x39, 0x4a,
	0x02, 0x42, 0x29, 0xd7, 0x46, 0xad, 0xe0, 0x52, 0x94, 0x34, 0x28, 0xe5, 0xe8, 0x0a, 0x2c, 0xf2,
	0xf1, 0x80, 0x05, 0x11, 0x55, 0xee, 0x9e, 0xbf, 0x55, 0xc1, 0x65, 0x35, 0xf7, 0xa9, 0x40, 0x0f,
	0xa1, 0x4e, 0x5f, 0x8e, 0xc8, 0x30, 0x0a, 0x03, 0x05, 0x12, 0x6b, 0x05, 0xed, 0x46, 0x97, 0x32,
	0x1b, 0x59, 0x97, 0x1b, 0x0f, 0x18, 0xae, 0x59, 0x5c, 0x35, 0x11, 0x68, 0x0b, 0x96, 0xac, 0x33,
	0x05, 0xb1, 0xd6, 0x6c, 0xad, 0xa8, 0xa5, 0xbc, 0xf6, 0x2a, 0xc3, 0xe0, 0x3a, 0xcf, 0x82, 0xd0,
	0x47, 0xb0, 0x48, 0x92, 0x51, 0x40, 0x86, 0x87, 0x7c, 0xad, 0xa4, 0xc9, 0xdf, 0xcc, 0xba, 0xf0,
	0xd1, 0x11, 0x67, 0x47, 0x44, 0x32, 0xba, 0x43, 0xbe, 0x8c, 0x86, 0xe3, 0xe1, 0xa7, 0x91, 0xe4,
	0xca, 0xa7, 0xca, 0x24, 0x19, 0x35, 0x86, 0x87, 0x1c, 0x5d, 0x85, 0x4a, 0x94, 0x3c, 0x7f, 0x60,
	0xd4, 0x2e, 0x6f, 0x38, 0xb7, 0x6a, 0x78, 0x51, 0x01, 0x94, 0xe2, 0xde, 0x5f, 0x1c, 0xb8, 0xdc,
	0x64, 0xe4, 0x3b, 0xda, 0x35, 0x6b, 0xbe, 0xdc, 0xac, 0xf9, 0x4e, 0x9a, 0x20, 0xff, 0xcd, 0x4d,
	0x90, 0x39, 0xb7, 0xc2, 0xcc, 0xb9, 0xcd, 0xe8, 0x56, 0x9c, 0xd3, 0xed, 0x17, 0x0e, 0xd4, 0xd5,
	0x39, 0xec, 0xc4, 0xd4, 0x7a, 0xf8, 0x2a, 0x94, 0xad, 0x9c, 0x5a, 0xad, 0x0a, 0x2e, 0x19, 0x31,
	0xd1, 0xbb, 0x93, 0x00, 0xca, 0x69, 0xcf, 0xcd, 0x26, 0x89, 0x19, 0x16, 0xf3, 0xd1, 0xf3, 0xee,
	0xe9, 0xd1, 0xb3, 0x02, 0xcb, 0xdd, 0x06, 0xde, 0xf3, 0x1b, 0xdb, 0x41, 0x0a, 0x74, 0xb2, 0x21,
	0x95, 0xf3, 0x7e, 0xe5, 0xc0, 0xca, 0x9c, 0x3b, 0x6b, 0x36, 0x8f, 0x61, 0x45, 0x48, 0x22, 0xad,
	0xb7, 0x05, 0x66, 0x9b, 0x34, 0x77, 0xad, 0x9d, 0x25, 0x16, 0xbe, 0x60, 0x88, 0xb4, 0x0f, 0x1a,
	0x12, 0xf4, 0x19, 0x5c, 0xcc, 0x3a, 0xee, 0x84, 0x55, 0xee, 0x1c, 0x56, 0x28, 0xe3, 0xc2, 0x96,
	0x97, 0xf7, 0x33, 0x07, 0x2e, 0x9d, 0x70, 0x13, 0x2d, 0xef, 0xc7, 0x73, 0xa9, 0x27, 0x1b, 0xf3,
	0xa7, 0x52, 0xbc, 0xae, 0xfc, 0xf3, 0xb7, 0x1c, 0x54, 0x33, 0xf5, 0x01, 0xdd, 0x81, 0xe2, 0x90,
	0xc8, 0xf0, 0xd8, 0x3a, 0xec, 0xc5, 0x8c, 0x1c, 0x0a, 0x6d, 0x47, 0xad, 0x61, 0x83, 0xa2, 0xfc,
	0x95, 0x24, 0x49, 0x30, 0x22, 0x43, 0x66, 0x13, 0x41, 0x99, 0x24, 0x49, 0x87, 0x0c, 0x99, 0x5a,
	0x3a, 0x7c, 0x29, 0x99, 0x08, 0xf8, 0x97, 0xda, 0x53, 0x0b, 0xb8, 0xac, 0xe7, 0xf8, 0x4b, 0x74,
	0x13, 0x6a, 0x82, 0xf1, 0xe7, 0x51, 0xc8, 0x02, 0x9d, 0xe4, 0x8c, 0x2b, 0x56, 0x2d, 0x4c, 0x27,
	0xad, 0x55, 0x28, 0x0b, 0x1e, 0x06, 0x43, 0x12, 0x6a, 0x6f, 0xac, 0xe0, 0x92, 0xe0, 0xe1, 0x0e,
	0x09, 0xd5, 0x02, 0x15, 0x52, 0x2f, 0x94, 0xcc, 0x02, 0x15, 0x52, 0x2d, 0x3c, 0x80, 0xa2, 0x3a,
	0x3a, 0xa6, 0x23, 0x73, 0xe9, 0xde, 0xc6, 0x9c, 0xd8, 0x56, 0x3b, 0x3d, 0x36, 0xb5, 0xc2, 0xa0,
	0x7b, 0x31, 0x54, 0x26, 0x30, 0xe4, 0x42, 0xad, 0xbd, 0xbd, 0xfb, 0x79, 0xb0, 0x85, 0x5b, 0xca,
	0x46, 0xee, 0x02, 0x7a, 0x03, 0xae, 0x6a, 0x48, 0xea, 0x85, 0x5b, 0xdb, 0x8d, 0x5e, 0xcf, 0x6f,
	0xfb, 0x5b, 0x8d, 0x3d, 0x7f, 0xb7, 0xe3, 0x3a, 0xe8, 0x3a, 0x5c, 0xd1, 0x08, 0x6d, 0xbf, 0x73,
	0x72, 0x39, 0x37, 0xe1, 0xd8, 0x7a, 0xda, 0xf5, 0x71, 0xab, 0xe9, 0xe6, 0xbd, 0x1f, 0x40, 0xcd,
	0x08, 0x24, 0x92, 0x78, 0x24, 0x18, 0x7a, 0x30, 0x77, 0xf0, 0x37, 0x4e, 0x48, 0x6e, 0x10, 0x5f,
	0xd7, 0x79, 0xff, 0xd1, 0x01, 0x77, 0xbe, 0x29, 0xf8, 0x86, 0x39, 0x6a, 0x48, 0xc2, 0x6c, 0xf2,
	0x2f, 0x0f, 0x49, 0xa8, 0xb3, 0xc8, 0x65, 0x28, 0x0d, 0x45, 0x24, 0xa8, 0xc9, 0x4d, 0x15, 0x6c,
	0x67, 0xe8, 0x06, 0x54, 0x49, 0x12, 0x4c, 0xa8, 0xcc, 0x79, 0x57, 0x48, 0xb2, 0x63, 0xe9, 0x56,
	0xa1, 0x4c, 0xac, 0x17, 0xd9, 0xd3, 0x26, 0xc6, 0x89, 0xfe, 0x0d, 0x96, 0x12, 0x9a, 0x04, 0x42,
	0x12, 0x2e, 0x03, 0x19, 0x0d, 0x99, 0x3e, 0xf4, 0x02, 0xae, 0x25, 0x34, 0xe9, 0x29, 0xe0, 0x5e,
	0x34, 0x64, 0xde, 0x5f, 0x1d, 0xb8, 0x34, 0xd7, 0x0e, 0x98, 0xda, 0xff, 0x9a, 0xd4, 0x6a, 0x43,
	0xd5, 0x74, 0x23, 0xc6, 0x5d, 0xf3, 0xfa, 0x98, 0xde, 0x3a, 0x95, 0x5b, 0x66, 0xf3, 0x4d, 0x9d,
	0x80, 0xc1, 0x50, 0xaa, 0xb1, 0x77, 0x1f, 0x0a, 0xda, 0xb9, 0x97, 0xa1, 0x7a, 0xd0, 0xd8, 0xf6,
	0x9b, 0xc1, 0x93, 0xfd, 0xdd, 0xbd, 0x86, 0xbb, 0x80, 0x6a, 0xb0, 0xd8, 0xd9, 0xb5, 0x33, 0x07,
	0xd5, 0xa1, 0xb2, 0xd7, 0xc2, 0x3b, 0x7e, 0xa7, 0xb1, 0xa7, 0x12, 0x5c, 0x00, 0x37, 0xcf, 0xed,
	0x78, 0xd0, 0x43, 0x28, 0x4f, 0x1b, 0x26, 0x95, 0x96, 0x36, 0xce, 0x13, 0x0f, 0xa7, 0x04, 0x1e,
	0x87, 0xe5, 0x3d, 0x72, 0x38, 0x60, 0x0d, 0x21, 0xa2, 0xa3, 0xd1, 0x90, 0x8d, 0xe4, 0x4c, 0x5c,
	0x3b, 0xb3, 0x71, 0x7d, 0x1d, 0x60, 0x48, 0xa2, 0x51, 0x20, 0x15, 0x89, 0x6d, 0xa9, 0x2a, 0x0a,
	0xa2, 0x79, 0xa0, 0xb7, 0x60, 0x49, 0x84, 0x5c, 0x25, 0x07, 0x83, 0x61, 0xda, 0x80, 0x02, 0xae,
	0x5b, 0xa8, 0xc6, 0x12, 0xde, 0xff, 0xc1, 0x4a, 0x63, 0x30, 0x98, 0xdb, 0x56, 0xa0, 0x47, 0x70,
	0x41, 0x53, 0x05, 0x64, 0x0a, 0xb4, 0x0a, 0xad, 0x67, 0x14, 0x9a, 0xa3, 0xc3, 0xae, 0x9c, 0x63,
	0xe4, 0x7d, 0x00, 0x2b, 0x3d, 0xc6, 0x23, 0x32, 0x88, 0xbe, 0xc7, 0x28, 0x7e, 0x39, 0xee, 0x92,
	0xf0, 0x0b, 0x26, 0x91, 0x0b, 0xf9, 0xe4, 0x0b, 0x13, 0x68, 0x35, 0xac, 0x86, 0x08, 0x41, 0x21,
	0x1a, 0x8a, 0xc8, 0x1e, 0xb9, 0x1e, 0x7b, 0x9b, 0x70, 0xc1, 0xe0, 0x37, 0x79, 0x9c, 0xe8, 0xbd,
	0x7c, 0xed, 0x1f, 0x46, 0x34, 0xeb, 0x4f, 0x45, 0x5c, 0x96, 0x66, 0xc9, 0xfb, 0x89, 0x03, 0xa5,
	0x4e, 0x4c, 0x99, 0xdf, 0x44, 0x1f, 0x41, 0x6d, 0x14, 0x53, 0x85, 0x14, 0x64, 0xfa, 0xb7, 0x6c,
	0x8d, 0x36, 0x88, 0xf6, 0x63, 0x5c, 0x44, 0x51, 0xf8, 0x34, 0xcd, 0x7b, 0x96, 0x3e, 0x6d, 0xac,
	0xcc, 0xa2, 0x77, 0x07, 0x60, 0x4a, 0x82, 0x16, 0xa1, 0xe0, 0x77, 0x9f, 0xdf, 0x77, 0x17, 0xec,
	0xe8, 0x81, 0xeb, 0xa8, 0x51, 0xfb, 0x49, 0xb3, 0xe3, 0xe6, 0xbc, 0x3f, 0x39, 0x50, 0x69, 0x8b,
	0x61, 0xa0, 0x13, 0x1c, 0x7a, 0x27, 0x4d, 0x8c, 0x46, 0x96, 0xeb, 0xd9, 0xf4, 0x92, 0x22, 0xa9,
	0xd1, 0x4c, 0x56, 0xfc, 0xa9, 0x03, 0x8b, 0x29, 0x4c, 0x65, 0x91, 0x5e, 0xab, 0xd7, 0xf3, 0x77,
	0x3b, 0x41, 0x63, 0x6b, 0xcf, 0x3f, 0x68, 0xb9, 0x0b, 0xe8, 0x32, 0xa0, 0x14, 0x36, 0x71, 0xd6,
	0xa6, 0x5b, 0x40, 0x17, 0xc1, 0x4d, 0xe1, 0xb8, 0xb5, 0xdd, 0x6a, 0xf4, 0x5a, 0x4d, 0xb7, 0xa4,
	0x1c, 0x5c, 0xa7, 0x54, 0xbf, 0xf3, 0xc8, 0x2d, 0xab, 0x14, 0x95, 0x26, 0xd8, 0x45, 0x04, 0x50,
	0xb2, 0x4c, 0x2b, 0x0a, 0xcd, 0xef, 0xd8, 0x19, 0x28, 0x34, 0xcb, 0xc2, 0xad, 0x7a, 0xdb, 0x50,
	0xde, 0x4a, 0xda, 0x3d, 0x16, 0x51, 0x74, 0x09, 0x4a, 0xfd, 0x40, 0x30, 0x7b, 0x0e, 0x05, 0x5c,
	0xec, 0x6b, 0xf0, 0x9d, 0x59, 0xd3, 0x55, 0xef, 0x5d, 0x38, 0x61, 0xf5, 0x89, 0x35, 0xdf, 0x07,
	0x77, 0x77, 0x2c, 0x19, 0x7f, 0xcc, 0x08, 0xc5, 0x6c, 0x18, 0x3f, 0x27, 0x03, 0xf4, 0x16, 0x2c,
	0xc7, 0xc1, 0x31, 0x0d, 0x38, 0x1b, 0xc6, 0x01, 0x65, 0x22, 0xe4, 0x9a, 0x7f, 0x1d, 0xd7, 0xe2,
	0xc7, 0x1a, 0xa9, 0xa9, 0x60, 0xde, 0x0f, 0x1d, 0x80, 0x1e, 0xed, 0xb7, 0xa3, 0x81, 0x64, 0x5c,
	0xa0, 0xdb, 0x90, 0xeb, 0xa7, 0x09, 0xe6, 0xca, 0x5c, 0xe6, 0xd6, 0x04, 0x51, 0x22, 0x63, 0x8e,
	0x73, 0x7d, 0xaa, 0x9c, 0x4f, 0xca, 0x50, 0x0b, 0x57, 0xc3, 0x6a, 0xa8, 0x20, 0x22, 0x89, 0x74,
	0x42, 0xa9, 0x61, 0x35, 0x44, 0x4b, 0x90, 0xeb, 0x0f, 0x74, 0x82, 0xac, 0xe1, 0x5c, 0x7f, 0xa0,
	0x74, 0x15, 0xb4, 0xaf, 0x74, 0x2a, 0x6a, 0x59, 0x8a, 0x82, 0xf6, 0x7d, 0xea, 0xfd, 0xdc, 0x81,
	0xa5, 0xd9, 0x1d, 0xd0, 0xdb, 0xb3, 0x65, 0x7b, 0xf5, 0xb4, 0xb2, 0xdd, 0x61, 0x2f, 0xd2, 0xca,
	0xfd, 0x1e, 0x94, 0x54, 0x4f, 0x11, 0x8f, 0x6c, 0xa3, 0xb6, 0x71, 0xa6, 0xec, 0xfa, 0x72, 0x17,
	0x8f, 0xb0, 0xc5, 0xf7, 0x6e, 0x40, 0xc9, 0x40, 0xd4, 0xd1, 0x75, 0xd5, 0xd9, 0xef, 0x19, 0x3f,
	0x6c, 0xb6, 0x3a, 0xea, 0x7e, 0xf1, 0x4b, 0xc7, 0x14, 0xb8, 0x74, 0x47, 0x15, 0x39, 0x51, 0xf2,
	0xfc, 0x7e, 0x20, 0x78, 0x98, 0x26, 0x13, 0x35, 0xef, 0xf1, 0x70, 0xb2, 0x44, 0x85, 0x4c, 0x93,
	0xae, 0x9a, 0x37, 0x85, 0x6e, 0x31, 0x65, 0x98, 0x68, 0xa2, 0xbc, 0x56, 0xbd, 0x24, 0xc3, 0x44,
	0xd1, 0xd8, 0x05, 0x45, 0x52, 0x98, 0x2c, 0x58, 0x8a, 0x31, 0x35, 0x14, 0xc6, 0x58, 0xa5, 0x31,
	0x4d, 0x29, 0xd4, 0x82, 0xa2, 0x28, 0x4d, 0x16, 0x9a, 0x42, 0x7a, 0xbf, 0x71, 0x00, 0x6c, 0x0d,
	0x62, 0x42, 0x20, 0x0f, 0xea, 0xaa, 0x04, 0xa8, 0xc6, 0xe3, 0x39, 0x19, 0x8c, 0x99, 0xcd, 0x13,
	0xd5, 0x21, 0x09, 0x7b, 0x3c, 0x3c, 0x50, 0xa0, 0x14, 0x47, 0xf5, 0x20, 0x06, 0x27, 0x37, 0xc1,
	0x69, 0x0a, 0x69, 0x70, 0xde, 0x86, 0x95, 0x71, 0x92, 0x30, 0x1e, 0xcc, 0x72, 0x33, 0xc7, 0xec,
	0xea, 0xa5, 0x9d, 0x0c, 0xcb, 0x19, 0xf4, 0x29, 0xe3, 0xc2, 0x2c, 0x7a, 0xca, 0xdd, 0xfb, 0x51,
	0x0e, 0xea, 0x2d, 0x79, 0xac, 0x32, 0x94, 0x71, 0x42, 0x55, 0x5e, 0x99, 0x3c, 0x0e, 0xfa, 0xd1,
	0x40, 0xa6, 0xd9, 0xa9, 0x8e, 0x2b, 0x4c, 0x1e, 0xab, 0x75, 0x9f, 0x2a, 0x99, 0x27, 0xeb, 0x09,
	0x8f, 0x13, 0x2d, 0x73, 0x1d, 0x57, 0x2d, 0x46, 0x97, 0xc7, 0x09, 0xfa, 0xaf, 0x4c, 0xf9, 0x33,
	0x17, 0x8b, 0xec, 0xc5, 0x6c, 0x6a, 0xa4, 0x69, 0x55, 0x5c, 0x81, 0x62, 0x18, 0x48, 0x72, 0x64,
	0x4f, 0xa1, 0x10, 0xee, 0x91, 0x23, 0x05, 0x14, 0x1a, 0x68, 0x4e, 0xa0, 0x20, 0x14, 0xf0, 0x01,
	0x54, 0x95, 0x13, 0xf7, 0x4d, 0xc8, 0xd8, 0xbb, 0x57, 0x96, 0xfd, 0x34, 0x9e, 0x30, 0x88, 0x69,
	0x6c, 0x5d, 0x03, 0xa5, 0x04, 0xe3, 0x3a, 0x93, 0x96, 0x27, 0x5a, 0x19, 0x80, 0xf7, 0x63, 0x07,
	0xaa, 0x8d, 0x24, 0x19, 0xbc, 0xb4, 0xde, 0xf8, 0x09, 0xd4, 0x88, 0x9a, 0x06, 0xd6, 0xaf, 0x55,
	0xd9, 0x98, 0x4d, 0x77, 0x19, 0xec, 0xd4, 0xa9, 0xab, 0x64, 0x0a, 0xf3, 0x1e, 0x4e, 0x3c, 0x5b,
	0x79, 0x33, 0xde, 0xed, 0x1a, 0xbf, 0x6e, 0xef, 0xe2, 0xcf, 0x4d, 0x7e, 0xfd, 0x74, 0xbf, 0xdd,
	0x76, 0x73, 0x6a, 0xd4, 0xd9, 0xdd, 0xea, 0xba, 0x79, 0x8d, 0xb7, 0xdf, 0xdd, 0x76, 0x0b, 0xde,
	0xef, 0x1d, 0xa8, 0x61, 0x46, 0x23, 0xce, 0x42, 0xe9, 0x8f, 0xfa, 0x31, 0xfa, 0x0c, 0x6a, 0x9c,
	0x51, 0x65, 0xd0, 0x6c, 0x25, 0xb8, 0x35, 0x73, 0x5b, 0x9b, 0xa2, 0x4f, 0x26, 0xca, 0xb4, 0xa6,
	0x2a, 0x70, 0x46, 0x1b, 0xd4, 0x54, 0x85, 0x7f, 0x87, 0x65, 0xc5, 0x4b, 0x35, 0xc8, 0x8c, 0x67,
	0x5b, 0x94, 0x3a, 0x67, 0xb4, 0xa7, 0xa1, 0xfa, 0xa2, 0xf6, 0x08, 0xdc, 0x79, 0x3e, 0xa6, 0x40,
	0x1c, 0x4c, 0x4a, 0xc5, 0x81, 0x2a, 0x15, 0x65, 0xc8, 0xef, 0xe3, 0x6d, 0x37, 0xa7, 0x22, 0xb8,
	0xe7, 0x77, 0xf7, 0xb1, 0xef, 0xe6, 0xd5, 0x58, 0x21, 0x1e, 0x3c, 0x70, 0x0b, 0xde, 0xff, 0xc3,
	0xca, 0x24, 0x3f, 0x32, 0xbe, 0xc5, 0x19, 0xd1, 0x66, 0xb9, 0x04, 0xa5, 0x38, 0x90, 0x6c, 0xe2,
	0x63, 0xc5, 0x78, 0x8f, 0x99, 0xd6, 0x49, 0x47, 0x31, 0x99, 0xb6, 0x4e, 0x6a, 0xde, 0x30, 0x9d,
	0x5d, 0x12, 0x73, 0x19, 0x8c, 0xe2, 0x34, 0x8a, 0xd5, 0xb4, 0x13, 0x7b, 0xbf, 0x53, 0x05, 0xe6,
	0x05, 0xed, 0x12, 0x4e, 0x86, 0xaa, 0xa7, 0xa0, 0xea, 0x62, 0x1b, 0xf5, 0x49, 0xc8, 0x52, 0xff,
	0x55, 0x10, 0x5f, 0x01, 0xd0, 0x1b, 0x50, 0x1d, 0x31, 0x19, 0x44, 0x23, 0x21, 0xd5, 0xba, 0xd9,
	0x02, 0x46, 0x4c, 0xfa, 0x06, 0x82, 0x3e, 0x04, 0x65, 0x08, 0xad, 0x77, 0x10, 0x8d, 0xfa, 0xb1,
	0xf5, 0xe0, 0xd5, 0x33, 0x8c, 0x8d, 0x6b, 0x3c, 0x7b, 0x52, 0x9f, 0x40, 0x2d, 0x1e, 0x4b, 0x1e,
	0x1c, 0x33, 0x42, 0x83, 0xd0, 0xb4, 0xa7, 0xd5, 0x99, 0x36, 0xfc, 0x14, 0x5b, 0x60, 0x50, 0x34,
	0x0a, 0xb6, 0xc5, 0xbd, 0xdb, 0xb0, 0xd8, 0x1c, 0x27, 0x5f, 0x47, 0x17, 0xef, 0xef, 0x0e, 0xe4,
	0xbb, 0x4d, 0x1f, 0xbd, 0x09, 0x75, 0x95, 0x19, 0xa2, 0x91, 0x64, 0x3c, 0x83, 0x59, 0x13, 0x3c,
	0xf4, 0x53, 0x18, 0xda, 0x80, 0xda, 0x20, 0x0e, 0xc9, 0x20, 0xe8, 0x1b, 0xab, 0x9b, 0xb8, 0x05,
	0x0d, 0x6b, 0x6b, 0xd3, 0xdf, 0x84, 0xda, 0xc4, 0x34, 0xa3, 0x90, 0xd9, 0xbe, 0xbb, 0x9a, 0xda,
	0x66, 0x14, 0x32, 0xb4, 0x0e, 0x95, 0x31, 0x0b, 0xf4, 0xb5, 0x3f, 0x6d, 0xbd, 0xcb, 0x63, 0xe6,
	0x27, 0xea, 0x78, 0xd6, 0x60, 0x51, 0xf2, 0x80, 0x25, 0x69, 0x81, 0xa9, 0xe1, 0x92, 0xe4, 0xad,
	0xc4, 0xa7, 0xdf, 0x3a, 0x66, 0x2f, 0x41, 0x49, 0x75, 0x8e, 0x11, 0xd5, 0x01, 0x5b, 0xc1, 0x45,
	0x92, 0x24, 0x3e, 0xf5, 0xfe, 0x90, 0x83, 0x6a, 0x8f, 0xc9, 0x47, 0x3c, 0x1e, 0x27, 0xdd, 0x26,
	0x56, 0x68, 0x09, 0xe5, 0xd3, 0x6c, 0x55, 0x4c, 0x28, 0xf7, 0xa9, 0xca, 0x64, 0x82, 0x09, 0x11,
	0x28, 0x37, 0x1f, 0xc5, 0x5a, 0xdf, 0x22, 0xae, 0x28, 0xd0, 0x01, 0xe3, 0x9d, 0x18, 0xdd, 0x00,
	0x48, 0x38, 0x0b, 0x19, 0x65, 0xa9, 0xb2, 0x75, 0x9c, 0x81, 0xa0, 0x0d, 0xc8, 0x27, 0x34, 0xb2,
	0x27, 0xb8, 0x94, 0x7d, 0x59, 0x6a, 0xfa, 0x58, 0x2d, 0xa1, 0x8f, 0xa0, 0x1e, 0x07, 0xc7, 0xd3,
	0x22, 0x6f, 0x1f, 0x92, 0xae, 0x9e, 0x76, 0xda, 0xb6, 0x33, 0xc0, 0x10, 0x3f, 0x4e, 0xeb, 0xbf,
	0x6e, 0x3e, 0x88, 0x16, 0xdc, 0x94, 0x92, 0x62, 0x9f, 0x28, 0xc1, 0x2f, 0x41, 0x69, 0xcc, 0x79,
	0xaa, 0x76, 0x1d, 0x17, 0xc7, 0xdc, 0x82, 0x9f, 0x31, 0x0d, 0x5e, 0x34, 0xe0, 0x67, 0xcc, 0x82,
	0x0f, 0x0d, 0x93, 0x8a, 0x01, 0x1f, 0x6a, 0x26, 0xb7, 0xc0, 0xd5, 0xf7, 0x7c, 0x16, 0x24, 0x2a,
	0xdc, 0xf9, 0x78, 0xc0, 0xd6, 0x40, 0x5b, 0x71, 0xc9, 0xc0, 0xbb, 0x9c, 0x51, 0x3c, 0x1e, 0x30,
	0xef, 0x1f, 0xce, 0xd4, 0x9c, 0xed, 0x06, 0xce, 0x48, 0xe5, 0x64, 0xa5, 0x3a, 0xcf, 0x9c, 0xef,
	0xcf, 0xa5, 0x4c, 0x13, 0x36, 0x97, 0x4f, 0x4f, 0x99, 0x33, 0xb9, 0x12, 0x6d, 0xc2, 0x62, 0xff,
	0x05, 0x0d, 0x12, 0xc2, 0x87, 0xd6, 0xdc, 0x2b, 0xd9, 0x0e, 0xc2, 0x46, 0x36, 0x2e, 0xf7, 0xf5,
	0x68, 0xa8, 0xf0, 0xe9, 0x58, 0xa1, 0x93, 0xa1, 0x35, 0x79, 0x16, 0x3f, 0x8d, 0x1e, 0x5c, 0xa6,
	0x63, 0x13, 0x46, 0x53, 0x13, 0x95, 0x32, 0x26, 0xf2, 0x7e, 0x9d, 0x03, 0xe8, 0x99, 0x57, 0xff,
	0x1e, 0xd3, 0xdd, 0xfb, 0xa4, 0x11, 0xac, 0x60, 0x3d, 0x3e, 0x57, 0xe9, 0x4c, 0x9f, 0x98, 0x3f,
	0xa7, 0x4f, 0x44, 0x77, 0xd2, 0xde, 0xd9, 0x3d, 0xf9, 0x16, 0x92, 0xf6, 0xce, 0xb6, 0x65, 0x46,
	0xb7, 0x27, 0x6d, 0xa9, 0xb1, 0x07, 0xca, 0x20, 0xdb, 0xd6, 0x35, 0x6d, 0x55, 0xef, 0x03, 0x08,
	0x26, 0x83, 0x23, 0x1e, 0x24, 0xfa, 0xb9, 0x2d, 0x3f, 0x67, 0xf5, 0x4c, 0xa4, 0xe0, 0x45, 0xa1,
	0x26, 0x5d, 0xca, 0x33, 0x54, 0x7d, 0xc2, 0xd7, 0x4a, 0x67, 0x52, 0xb5, 0x1b, 0x29, 0x55, 0x9b,
	0x70, 0x6f, 0x11, 0x4a, 0xfb, 0x49, 0x1f, 0x33, 0x71, 0xef, 0xab, 0x0a, 0x54, 0xba, 0xe9, 0xef,
	0x18, 0xf4, 0x21, 0x2c, 0xf5, 0x98, 0xec, 0xed, 0xb4, 0xad, 0x39, 0x05, 0x9a, 0x89, 0xee, 0x89,
	0x8d, 0xd7, 0x2f, 0xcc, 0x3c, 0xbd, 0x2b, 0x4e, 0xde, 0x02, 0xea, 0xda, 0xc7, 0x73, 0xf3, 0x62,
	0xab, 0x5f, 0xa5, 0xd0, 0xf5, 0xf9, 0xc7, 0xf2, 0x99, 0x3f, 0x08, 0xeb, 0x57, 0x5f, 0xf1, 0x96,
	0xee, 0x2d, 0x20, 0x0c, 0xf5, 0x99, 0x67, 0x3c, 0x74, 0xde, 0xff, 0x85, 0xf5, 0x1b, 0x67, 0x23,
	0x58, 0x9e, 0x4f, 0x61, 0x79, 0xee, 0xe9, 0x0c, 0xdd, 0x7c, 0xd5, 0xb3, 0x9a, 0xe1, 0xbb, 0x71,
	0xde, 0xcb, 0x9b, 0xb7, 0x80, 0x1a, 0xb0, 0xf4, 0x88, 0x49, 0xa3, 0xe0, 0xbe, 0x20, 0x47, 0x0c,
	0xa5, 0x66, 0xd2, 0x3f, 0xb5, 0x36, 0x0f, 0xe2, 0x88, 0xae, 0xaf, 0xcf, 0x3d, 0x0d, 0x62, 0x16,
	0xc6, 0x9c, 0xea, 0x0b, 0xa5, 0xb7, 0x80, 0x3e, 0x06, 0xd0, 0xc5, 0x44, 0x73, 0x46, 0x97, 0x4f,
	0x7f, 0xaf, 0x5a, 0x5f, 0x3d, 0xe3, 0x35, 0xc8, 0x30, 0xd0, 0x19, 0xea, 0x5b, 0x33, 0x68, 0xc2,
	0xb2, 0x79, 0x0b, 0x48, 0x1f, 0xc0, 0xc4, 0xb7, 0xe1, 0xd2, 0x81, 0xe5, 0xe9, 0x6f, 0x1c, 0x63,
	0xe4, 0x6b, 0xf3, 0x47, 0x9d, 0xfd, 0xc5, 0x73, 0x9e, 0x23, 0x30, 0x58, 0x3f, 0xfb, 0xbd, 0x03,
	0x7d, 0xa3, 0x1f, 0x41, 0x5f, 0x47, 0xec, 0xc9, 0x53, 0xd8, 0x29, 0x62, 0x67, 0x7f, 0xb3, 0x9d,
	0x27, 0x76, 0x1b, 0x6a, 0x0d, 0x4a, 0x27, 0xdc, 0xd0, 0xab, 0xfe, 0xc1, 0xbd, 0x4a, 0x2e, 0x5f,
	0xf9, 0xec, 0x80, 0x49, 0xf6, 0x5a, 0x58, 0x19, 0x13, 0xf9, 0xdd, 0xb6, 0xff, 0xf4, 0x3b, 0xb1,
	0xfa, 0x6f, 0xb8, 0xfc, 0x88, 0xc9, 0xd3, 0x9e, 0x6c, 0x4e, 0xf1, 0xfb, 0x99, 0xc0, 0x3c, 0x49,
	0xf2, 0xe9, 0xd5, 0xff, 0xbd, 0xa2, 0x11, 0xee, 0x0e, 0x24, 0xbb, 0x1b, 0x0e, 0xe2, 0x31, 0xbd,
	0x7b, 0x14, 0xdb, 0x3f, 0xb6, 0x87, 0x25, 0xfd, 0x7d, 0xe7, 0x9f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x13, 0x2b, 0x6e, 0xb6, 0x45, 0x1e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PipelinedClient is the client API for Pipelined service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PipelinedClient interface {
	SetSMFSessions(ctx context.Context, in *SessionSet, opts ...grpc.CallOption) (*UpfRes, error)
	// Setup flows for subscribers (used on restarts)
	SetupPolicyFlows(ctx context.Context, in *SetupPolicyRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Activate flows for a subscriber based on predefined flow templates
	ActivateFlows(ctx context.Context, in *ActivateFlowsRequest, opts ...grpc.CallOption) (*ActivateFlowsResult, error)
	// Deactivate flows for a subscriber
	DeactivateFlows(ctx context.Context, in *DeactivateFlowsRequest, opts ...grpc.CallOption) (*DeactivateFlowsResult, error)
	// Get policy usage stats
	GetPolicyUsage(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*RuleRecordTable, error)
	// Add new dpi flow
	CreateFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Remove dpi flow
	RemoveFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Update flow stats
	UpdateFlowStats(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupQuotaFlows(ctx context.Context, in *SetupQuotaRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Synchronize subscribers quota check flows
	UpdateSubscriberQuotaState(ctx context.Context, in *UpdateSubscriberQuotaStateRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupUEMacFlows(ctx context.Context, in *SetupUEMacRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error)
	// Add a flow for a subscriber by matching the provided UE MAC address
	AddUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Delete a flow for a subscriber by matching the provided UE MAC address
	DeleteUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Update subscriber IPFIX flows
	UpdateIPFIXFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error)
	// Get the flow table assignment for all apps ordered by main table number
	// and name
	GetAllTableAssignments(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*AllTableAssignments, error)
}

type pipelinedClient struct {
	cc grpc.ClientConnInterface
}

func NewPipelinedClient(cc grpc.ClientConnInterface) PipelinedClient {
	return &pipelinedClient{cc}
}

func (c *pipelinedClient) SetSMFSessions(ctx context.Context, in *SessionSet, opts ...grpc.CallOption) (*UpfRes, error) {
	out := new(UpfRes)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetSMFSessions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupPolicyFlows(ctx context.Context, in *SetupPolicyRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupPolicyFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) ActivateFlows(ctx context.Context, in *ActivateFlowsRequest, opts ...grpc.CallOption) (*ActivateFlowsResult, error) {
	out := new(ActivateFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/ActivateFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) DeactivateFlows(ctx context.Context, in *DeactivateFlowsRequest, opts ...grpc.CallOption) (*DeactivateFlowsResult, error) {
	out := new(DeactivateFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/DeactivateFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) GetPolicyUsage(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*RuleRecordTable, error) {
	out := new(RuleRecordTable)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/GetPolicyUsage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) CreateFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/CreateFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) RemoveFlow(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/RemoveFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateFlowStats(ctx context.Context, in *FlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateFlowStats", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupQuotaFlows(ctx context.Context, in *SetupQuotaRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupQuotaFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateSubscriberQuotaState(ctx context.Context, in *UpdateSubscriberQuotaStateRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateSubscriberQuotaState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) SetupUEMacFlows(ctx context.Context, in *SetupUEMacRequest, opts ...grpc.CallOption) (*SetupFlowsResult, error) {
	out := new(SetupFlowsResult)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/SetupUEMacFlows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) AddUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/AddUEMacFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) DeleteUEMacFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/DeleteUEMacFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) UpdateIPFIXFlow(ctx context.Context, in *UEMacFlowRequest, opts ...grpc.CallOption) (*FlowResponse, error) {
	out := new(FlowResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/UpdateIPFIXFlow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pipelinedClient) GetAllTableAssignments(ctx context.Context, in *protos.Void, opts ...grpc.CallOption) (*AllTableAssignments, error) {
	out := new(AllTableAssignments)
	err := c.cc.Invoke(ctx, "/magma.lte.Pipelined/GetAllTableAssignments", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PipelinedServer is the server API for Pipelined service.
type PipelinedServer interface {
	SetSMFSessions(context.Context, *SessionSet) (*UpfRes, error)
	// Setup flows for subscribers (used on restarts)
	SetupPolicyFlows(context.Context, *SetupPolicyRequest) (*SetupFlowsResult, error)
	// Activate flows for a subscriber based on predefined flow templates
	ActivateFlows(context.Context, *ActivateFlowsRequest) (*ActivateFlowsResult, error)
	// Deactivate flows for a subscriber
	DeactivateFlows(context.Context, *DeactivateFlowsRequest) (*DeactivateFlowsResult, error)
	// Get policy usage stats
	GetPolicyUsage(context.Context, *protos.Void) (*RuleRecordTable, error)
	// Add new dpi flow
	CreateFlow(context.Context, *FlowRequest) (*FlowResponse, error)
	// Remove dpi flow
	RemoveFlow(context.Context, *FlowRequest) (*FlowResponse, error)
	// Update flow stats
	UpdateFlowStats(context.Context, *FlowRequest) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupQuotaFlows(context.Context, *SetupQuotaRequest) (*SetupFlowsResult, error)
	// Synchronize subscribers quota check flows
	UpdateSubscriberQuotaState(context.Context, *UpdateSubscriberQuotaStateRequest) (*FlowResponse, error)
	// Setup subscribers flows (used on restarts)
	SetupUEMacFlows(context.Context, *SetupUEMacRequest) (*SetupFlowsResult, error)
	// Add a flow for a subscriber by matching the provided UE MAC address
	AddUEMacFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Delete a flow for a subscriber by matching the provided UE MAC address
	DeleteUEMacFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Update subscriber IPFIX flows
	UpdateIPFIXFlow(context.Context, *UEMacFlowRequest) (*FlowResponse, error)
	// Get the flow table assignment for all apps ordered by main table number
	// and name
	GetAllTableAssignments(context.Context, *protos.Void) (*AllTableAssignments, error)
}

// UnimplementedPipelinedServer can be embedded to have forward compatible implementations.
type UnimplementedPipelinedServer struct {
}

func (*UnimplementedPipelinedServer) SetSMFSessions(ctx context.Context, req *SessionSet) (*UpfRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSMFSessions not implemented")
}
func (*UnimplementedPipelinedServer) SetupPolicyFlows(ctx context.Context, req *SetupPolicyRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupPolicyFlows not implemented")
}
func (*UnimplementedPipelinedServer) ActivateFlows(ctx context.Context, req *ActivateFlowsRequest) (*ActivateFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivateFlows not implemented")
}
func (*UnimplementedPipelinedServer) DeactivateFlows(ctx context.Context, req *DeactivateFlowsRequest) (*DeactivateFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeactivateFlows not implemented")
}
func (*UnimplementedPipelinedServer) GetPolicyUsage(ctx context.Context, req *protos.Void) (*RuleRecordTable, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicyUsage not implemented")
}
func (*UnimplementedPipelinedServer) CreateFlow(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateFlow not implemented")
}
func (*UnimplementedPipelinedServer) RemoveFlow(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveFlow not implemented")
}
func (*UnimplementedPipelinedServer) UpdateFlowStats(ctx context.Context, req *FlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFlowStats not implemented")
}
func (*UnimplementedPipelinedServer) SetupQuotaFlows(ctx context.Context, req *SetupQuotaRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupQuotaFlows not implemented")
}
func (*UnimplementedPipelinedServer) UpdateSubscriberQuotaState(ctx context.Context, req *UpdateSubscriberQuotaStateRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubscriberQuotaState not implemented")
}
func (*UnimplementedPipelinedServer) SetupUEMacFlows(ctx context.Context, req *SetupUEMacRequest) (*SetupFlowsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetupUEMacFlows not implemented")
}
func (*UnimplementedPipelinedServer) AddUEMacFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUEMacFlow not implemented")
}
func (*UnimplementedPipelinedServer) DeleteUEMacFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUEMacFlow not implemented")
}
func (*UnimplementedPipelinedServer) UpdateIPFIXFlow(ctx context.Context, req *UEMacFlowRequest) (*FlowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIPFIXFlow not implemented")
}
func (*UnimplementedPipelinedServer) GetAllTableAssignments(ctx context.Context, req *protos.Void) (*AllTableAssignments, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllTableAssignments not implemented")
}

func RegisterPipelinedServer(s *grpc.Server, srv PipelinedServer) {
	s.RegisterService(&_Pipelined_serviceDesc, srv)
}

func _Pipelined_SetSMFSessions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SessionSet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetSMFSessions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetSMFSessions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetSMFSessions(ctx, req.(*SessionSet))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupPolicyFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupPolicyFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupPolicyFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupPolicyFlows(ctx, req.(*SetupPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_ActivateFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivateFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).ActivateFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/ActivateFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).ActivateFlows(ctx, req.(*ActivateFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_DeactivateFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeactivateFlowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).DeactivateFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/DeactivateFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).DeactivateFlows(ctx, req.(*DeactivateFlowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_GetPolicyUsage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).GetPolicyUsage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/GetPolicyUsage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).GetPolicyUsage(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_CreateFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).CreateFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/CreateFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).CreateFlow(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_RemoveFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).RemoveFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/RemoveFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).RemoveFlow(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateFlowStats_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateFlowStats(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateFlowStats",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateFlowStats(ctx, req.(*FlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupQuotaFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupQuotaFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupQuotaFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupQuotaFlows(ctx, req.(*SetupQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateSubscriberQuotaState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSubscriberQuotaStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateSubscriberQuotaState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateSubscriberQuotaState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateSubscriberQuotaState(ctx, req.(*UpdateSubscriberQuotaStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_SetupUEMacFlows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetupUEMacRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).SetupUEMacFlows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/SetupUEMacFlows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).SetupUEMacFlows(ctx, req.(*SetupUEMacRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_AddUEMacFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).AddUEMacFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/AddUEMacFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).AddUEMacFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_DeleteUEMacFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).DeleteUEMacFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/DeleteUEMacFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).DeleteUEMacFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_UpdateIPFIXFlow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UEMacFlowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).UpdateIPFIXFlow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/UpdateIPFIXFlow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).UpdateIPFIXFlow(ctx, req.(*UEMacFlowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Pipelined_GetAllTableAssignments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PipelinedServer).GetAllTableAssignments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.Pipelined/GetAllTableAssignments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PipelinedServer).GetAllTableAssignments(ctx, req.(*protos.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pipelined_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.Pipelined",
	HandlerType: (*PipelinedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetSMFSessions",
			Handler:    _Pipelined_SetSMFSessions_Handler,
		},
		{
			MethodName: "SetupPolicyFlows",
			Handler:    _Pipelined_SetupPolicyFlows_Handler,
		},
		{
			MethodName: "ActivateFlows",
			Handler:    _Pipelined_ActivateFlows_Handler,
		},
		{
			MethodName: "DeactivateFlows",
			Handler:    _Pipelined_DeactivateFlows_Handler,
		},
		{
			MethodName: "GetPolicyUsage",
			Handler:    _Pipelined_GetPolicyUsage_Handler,
		},
		{
			MethodName: "CreateFlow",
			Handler:    _Pipelined_CreateFlow_Handler,
		},
		{
			MethodName: "RemoveFlow",
			Handler:    _Pipelined_RemoveFlow_Handler,
		},
		{
			MethodName: "UpdateFlowStats",
			Handler:    _Pipelined_UpdateFlowStats_Handler,
		},
		{
			MethodName: "SetupQuotaFlows",
			Handler:    _Pipelined_SetupQuotaFlows_Handler,
		},
		{
			MethodName: "UpdateSubscriberQuotaState",
			Handler:    _Pipelined_UpdateSubscriberQuotaState_Handler,
		},
		{
			MethodName: "SetupUEMacFlows",
			Handler:    _Pipelined_SetupUEMacFlows_Handler,
		},
		{
			MethodName: "AddUEMacFlow",
			Handler:    _Pipelined_AddUEMacFlow_Handler,
		},
		{
			MethodName: "DeleteUEMacFlow",
			Handler:    _Pipelined_DeleteUEMacFlow_Handler,
		},
		{
			MethodName: "UpdateIPFIXFlow",
			Handler:    _Pipelined_UpdateIPFIXFlow_Handler,
		},
		{
			MethodName: "GetAllTableAssignments",
			Handler:    _Pipelined_GetAllTableAssignments_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/pipelined.proto",
}
