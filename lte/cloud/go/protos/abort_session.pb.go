// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lte/protos/abort_session.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AbortSessionRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AbortSessionRequest) Reset()         { *m = AbortSessionRequest{} }
func (m *AbortSessionRequest) String() string { return proto.CompactTextString(m) }
func (*AbortSessionRequest) ProtoMessage()    {}
func (*AbortSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_80dacefcd8bf4976, []int{0}
}

func (m *AbortSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbortSessionRequest.Unmarshal(m, b)
}
func (m *AbortSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbortSessionRequest.Marshal(b, m, deterministic)
}
func (m *AbortSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbortSessionRequest.Merge(m, src)
}
func (m *AbortSessionRequest) XXX_Size() int {
	return xxx_messageInfo_AbortSessionRequest.Size(m)
}
func (m *AbortSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AbortSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AbortSessionRequest proto.InternalMessageInfo

func (m *AbortSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *AbortSessionRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

type AbortSessionResult struct {
	Code                 ResultCode `protobuf:"varint,1,opt,name=code,proto3,enum=magma.lte.ResultCode" json:"code,omitempty"`
	ErrorMessage         string     `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AbortSessionResult) Reset()         { *m = AbortSessionResult{} }
func (m *AbortSessionResult) String() string { return proto.CompactTextString(m) }
func (*AbortSessionResult) ProtoMessage()    {}
func (*AbortSessionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_80dacefcd8bf4976, []int{1}
}

func (m *AbortSessionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AbortSessionResult.Unmarshal(m, b)
}
func (m *AbortSessionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AbortSessionResult.Marshal(b, m, deterministic)
}
func (m *AbortSessionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AbortSessionResult.Merge(m, src)
}
func (m *AbortSessionResult) XXX_Size() int {
	return xxx_messageInfo_AbortSessionResult.Size(m)
}
func (m *AbortSessionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AbortSessionResult.DiscardUnknown(m)
}

var xxx_messageInfo_AbortSessionResult proto.InternalMessageInfo

func (m *AbortSessionResult) GetCode() ResultCode {
	if m != nil {
		return m.Code
	}
	return ResultCode_SESSION_REMOVED
}

func (m *AbortSessionResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func init() {
	proto.RegisterType((*AbortSessionRequest)(nil), "magma.lte.AbortSessionRequest")
	proto.RegisterType((*AbortSessionResult)(nil), "magma.lte.AbortSessionResult")
}

func init() { proto.RegisterFile("lte/protos/abort_session.proto", fileDescriptor_80dacefcd8bf4976) }

var fileDescriptor_80dacefcd8bf4976 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xad, 0x88, 0x98, 0xa1, 0x7a, 0x58, 0x29, 0xd4, 0x96, 0x96, 0x12, 0x2f, 0x7a, 0x49,
	0xa0, 0x3e, 0x81, 0x7a, 0xf2, 0xa0, 0x62, 0xbc, 0x79, 0x09, 0xd3, 0xee, 0x10, 0x0b, 0xd9, 0x4c,
	0x9d, 0xd9, 0xbc, 0xbf, 0x64, 0x93, 0x48, 0x14, 0x7b, 0x5a, 0xf8, 0xfe, 0x8f, 0xf9, 0x67, 0x07,
	0x96, 0xa5, 0xa7, 0x74, 0x2f, 0xec, 0x59, 0x53, 0xdc, 0xb0, 0xf8, 0x5c, 0x49, 0x75, 0xc7, 0x55,
	0x12, 0xa0, 0x89, 0x1c, 0x16, 0x0e, 0x93, 0xd2, 0xd3, 0x6c, 0x35, 0x50, 0x3b, 0x29, 0x77, 0x58,
	0x61, 0x41, 0xd2, 0xca, 0xf1, 0x1b, 0x5c, 0xde, 0x37, 0x33, 0xde, 0xdb, 0x34, 0xa3, 0xaf, 0x9a,
	0xd4, 0x9b, 0x05, 0x40, 0xef, 0xef, 0xec, 0x74, 0xb4, 0x1a, 0xdd, 0x44, 0x59, 0xd4, 0x91, 0x27,
	0x6b, 0xe6, 0x10, 0xd5, 0x4a, 0x92, 0x57, 0xe8, 0x68, 0x7a, 0x1c, 0xd2, 0xb3, 0x06, 0xbc, 0xa0,
	0xa3, 0xd8, 0x82, 0xf9, 0x3d, 0x52, 0xeb, 0xd2, 0x9b, 0x5b, 0x38, 0xd9, 0xb2, 0xa5, 0x30, 0xeb,
	0x62, 0x3d, 0x49, 0x7e, 0x96, 0x4c, 0x5a, 0xe1, 0x91, 0x2d, 0x65, 0x41, 0x31, 0xd7, 0x70, 0x4e,
	0x22, 0x2c, 0xb9, 0x23, 0x55, 0x2c, 0xfa, 0x86, 0x71, 0x80, 0xcf, 0x2d, 0x5b, 0x7f, 0xc2, 0xe4,
	0x4f, 0xcb, 0x9e, 0x2b, 0x4b, 0x62, 0x5e, 0x61, 0x3c, 0x0c, 0xcc, 0x72, 0x50, 0xf5, 0xcf, 0x57,
	0x67, 0x8b, 0x83, 0x79, 0xb3, 0x56, 0x7c, 0xf4, 0x30, 0xff, 0xb8, 0x0a, 0x46, 0xda, 0x1c, 0x73,
	0x5b, 0x72, 0x6d, 0xd3, 0x82, 0xbb, 0xab, 0x6e, 0x4e, 0xc3, 0x7b, 0xf7, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x7c, 0x76, 0xf1, 0xb1, 0x95, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AbortSessionResponderClient is the client API for AbortSessionResponder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AbortSessionResponderClient interface {
	AbortSession(ctx context.Context, in *AbortSessionRequest, opts ...grpc.CallOption) (*AbortSessionResult, error)
}

type abortSessionResponderClient struct {
	cc grpc.ClientConnInterface
}

func NewAbortSessionResponderClient(cc grpc.ClientConnInterface) AbortSessionResponderClient {
	return &abortSessionResponderClient{cc}
}

func (c *abortSessionResponderClient) AbortSession(ctx context.Context, in *AbortSessionRequest, opts ...grpc.CallOption) (*AbortSessionResult, error) {
	out := new(AbortSessionResult)
	err := c.cc.Invoke(ctx, "/magma.lte.AbortSessionResponder/AbortSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AbortSessionResponderServer is the server API for AbortSessionResponder service.
type AbortSessionResponderServer interface {
	AbortSession(context.Context, *AbortSessionRequest) (*AbortSessionResult, error)
}

// UnimplementedAbortSessionResponderServer can be embedded to have forward compatible implementations.
type UnimplementedAbortSessionResponderServer struct {
}

func (*UnimplementedAbortSessionResponderServer) AbortSession(ctx context.Context, req *AbortSessionRequest) (*AbortSessionResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AbortSession not implemented")
}

func RegisterAbortSessionResponderServer(s *grpc.Server, srv AbortSessionResponderServer) {
	s.RegisterService(&_AbortSessionResponder_serviceDesc, srv)
}

func _AbortSessionResponder_AbortSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AbortSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AbortSessionResponderServer).AbortSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.AbortSessionResponder/AbortSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AbortSessionResponderServer).AbortSession(ctx, req.(*AbortSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AbortSessionResponder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.AbortSessionResponder",
	HandlerType: (*AbortSessionResponderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AbortSession",
			Handler:    _AbortSessionResponder_AbortSession_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lte/protos/abort_session.proto",
}
