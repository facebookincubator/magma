// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nprobe_state.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetNProbeStateRequest struct {
	// network_id of the subscriber
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// task_id of the subscriber
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNProbeStateRequest) Reset()         { *m = GetNProbeStateRequest{} }
func (m *GetNProbeStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetNProbeStateRequest) ProtoMessage()    {}
func (*GetNProbeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{0}
}

func (m *GetNProbeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNProbeStateRequest.Unmarshal(m, b)
}
func (m *GetNProbeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNProbeStateRequest.Marshal(b, m, deterministic)
}
func (m *GetNProbeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNProbeStateRequest.Merge(m, src)
}
func (m *GetNProbeStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetNProbeStateRequest.Size(m)
}
func (m *GetNProbeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNProbeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNProbeStateRequest proto.InternalMessageInfo

func (m *GetNProbeStateRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *GetNProbeStateRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type GetNProbeStateResponse struct {
	// timestamp of last exported record for a subscriber
	LastExported int64 `protobuf:"varint,1,opt,name=last_exported,json=lastExported,proto3" json:"last_exported,omitempty"`
	// sequence number of next exported record for a subscriber
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNProbeStateResponse) Reset()         { *m = GetNProbeStateResponse{} }
func (m *GetNProbeStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetNProbeStateResponse) ProtoMessage()    {}
func (*GetNProbeStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{1}
}

func (m *GetNProbeStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNProbeStateResponse.Unmarshal(m, b)
}
func (m *GetNProbeStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNProbeStateResponse.Marshal(b, m, deterministic)
}
func (m *GetNProbeStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNProbeStateResponse.Merge(m, src)
}
func (m *GetNProbeStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetNProbeStateResponse.Size(m)
}
func (m *GetNProbeStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNProbeStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNProbeStateResponse proto.InternalMessageInfo

func (m *GetNProbeStateResponse) GetLastExported() int64 {
	if m != nil {
		return m.LastExported
	}
	return 0
}

func (m *GetNProbeStateResponse) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

type SetNProbeStateRequest struct {
	// network_id of the subscriber
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// task_id of the subscriber
	TaskId string `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// target_id of the subscriber
	TargetId string `protobuf:"bytes,3,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	// nprobe_state of the task
	NprobeState          *NProbeState `protobuf:"bytes,4,opt,name=nprobe_state,json=nprobeState,proto3" json:"nprobe_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SetNProbeStateRequest) Reset()         { *m = SetNProbeStateRequest{} }
func (m *SetNProbeStateRequest) String() string { return proto.CompactTextString(m) }
func (*SetNProbeStateRequest) ProtoMessage()    {}
func (*SetNProbeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{2}
}

func (m *SetNProbeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNProbeStateRequest.Unmarshal(m, b)
}
func (m *SetNProbeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNProbeStateRequest.Marshal(b, m, deterministic)
}
func (m *SetNProbeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNProbeStateRequest.Merge(m, src)
}
func (m *SetNProbeStateRequest) XXX_Size() int {
	return xxx_messageInfo_SetNProbeStateRequest.Size(m)
}
func (m *SetNProbeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNProbeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetNProbeStateRequest proto.InternalMessageInfo

func (m *SetNProbeStateRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *SetNProbeStateRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *SetNProbeStateRequest) GetTargetId() string {
	if m != nil {
		return m.TargetId
	}
	return ""
}

func (m *SetNProbeStateRequest) GetNprobeState() *NProbeState {
	if m != nil {
		return m.NprobeState
	}
	return nil
}

type SetNProbeStateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetNProbeStateResponse) Reset()         { *m = SetNProbeStateResponse{} }
func (m *SetNProbeStateResponse) String() string { return proto.CompactTextString(m) }
func (*SetNProbeStateResponse) ProtoMessage()    {}
func (*SetNProbeStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{3}
}

func (m *SetNProbeStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetNProbeStateResponse.Unmarshal(m, b)
}
func (m *SetNProbeStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetNProbeStateResponse.Marshal(b, m, deterministic)
}
func (m *SetNProbeStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetNProbeStateResponse.Merge(m, src)
}
func (m *SetNProbeStateResponse) XXX_Size() int {
	return xxx_messageInfo_SetNProbeStateResponse.Size(m)
}
func (m *SetNProbeStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetNProbeStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetNProbeStateResponse proto.InternalMessageInfo

type DeleteNProbeStateRequest struct {
	// network_id of the subscriber
	NetworkId string `protobuf:"bytes,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	// task_id of the nprobe state to delete
	TaskId               string   `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNProbeStateRequest) Reset()         { *m = DeleteNProbeStateRequest{} }
func (m *DeleteNProbeStateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteNProbeStateRequest) ProtoMessage()    {}
func (*DeleteNProbeStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{4}
}

func (m *DeleteNProbeStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNProbeStateRequest.Unmarshal(m, b)
}
func (m *DeleteNProbeStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNProbeStateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteNProbeStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNProbeStateRequest.Merge(m, src)
}
func (m *DeleteNProbeStateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteNProbeStateRequest.Size(m)
}
func (m *DeleteNProbeStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNProbeStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNProbeStateRequest proto.InternalMessageInfo

func (m *DeleteNProbeStateRequest) GetNetworkId() string {
	if m != nil {
		return m.NetworkId
	}
	return ""
}

func (m *DeleteNProbeStateRequest) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type DeleteNProbeStateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteNProbeStateResponse) Reset()         { *m = DeleteNProbeStateResponse{} }
func (m *DeleteNProbeStateResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteNProbeStateResponse) ProtoMessage()    {}
func (*DeleteNProbeStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{5}
}

func (m *DeleteNProbeStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteNProbeStateResponse.Unmarshal(m, b)
}
func (m *DeleteNProbeStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteNProbeStateResponse.Marshal(b, m, deterministic)
}
func (m *DeleteNProbeStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteNProbeStateResponse.Merge(m, src)
}
func (m *DeleteNProbeStateResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteNProbeStateResponse.Size(m)
}
func (m *DeleteNProbeStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteNProbeStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteNProbeStateResponse proto.InternalMessageInfo

type NProbeState struct {
	// timestamp of last exported record for a subscriber
	LastExported int64 `protobuf:"varint,1,opt,name=last_exported,json=lastExported,proto3" json:"last_exported,omitempty"`
	// sequence number of next exported record for a subscriber
	SequenceNumber       uint64   `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NProbeState) Reset()         { *m = NProbeState{} }
func (m *NProbeState) String() string { return proto.CompactTextString(m) }
func (*NProbeState) ProtoMessage()    {}
func (*NProbeState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b015ea5d083209ea, []int{6}
}

func (m *NProbeState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NProbeState.Unmarshal(m, b)
}
func (m *NProbeState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NProbeState.Marshal(b, m, deterministic)
}
func (m *NProbeState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NProbeState.Merge(m, src)
}
func (m *NProbeState) XXX_Size() int {
	return xxx_messageInfo_NProbeState.Size(m)
}
func (m *NProbeState) XXX_DiscardUnknown() {
	xxx_messageInfo_NProbeState.DiscardUnknown(m)
}

var xxx_messageInfo_NProbeState proto.InternalMessageInfo

func (m *NProbeState) GetLastExported() int64 {
	if m != nil {
		return m.LastExported
	}
	return 0
}

func (m *NProbeState) GetSequenceNumber() uint64 {
	if m != nil {
		return m.SequenceNumber
	}
	return 0
}

func init() {
	proto.RegisterType((*GetNProbeStateRequest)(nil), "magma.lte.nprobe.GetNProbeStateRequest")
	proto.RegisterType((*GetNProbeStateResponse)(nil), "magma.lte.nprobe.GetNProbeStateResponse")
	proto.RegisterType((*SetNProbeStateRequest)(nil), "magma.lte.nprobe.SetNProbeStateRequest")
	proto.RegisterType((*SetNProbeStateResponse)(nil), "magma.lte.nprobe.SetNProbeStateResponse")
	proto.RegisterType((*DeleteNProbeStateRequest)(nil), "magma.lte.nprobe.DeleteNProbeStateRequest")
	proto.RegisterType((*DeleteNProbeStateResponse)(nil), "magma.lte.nprobe.DeleteNProbeStateResponse")
	proto.RegisterType((*NProbeState)(nil), "magma.lte.nprobe.NProbeState")
}

func init() { proto.RegisterFile("nprobe_state.proto", fileDescriptor_b015ea5d083209ea) }

var fileDescriptor_b015ea5d083209ea = []byte{
	// 345 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4f, 0x4f, 0xfa, 0x40,
	0x10, 0xfd, 0x15, 0x08, 0x3f, 0x18, 0x10, 0x75, 0x13, 0xb0, 0x42, 0x48, 0x48, 0x3d, 0x40, 0x34,
	0xe9, 0x01, 0xbf, 0x80, 0x31, 0x1a, 0xc3, 0x05, 0x4d, 0xf7, 0xa6, 0x87, 0xa6, 0xd0, 0x91, 0x10,
	0xa1, 0x5b, 0x77, 0x07, 0xf5, 0x53, 0xf9, 0x61, 0xfc, 0x44, 0x66, 0xb7, 0x25, 0xa9, 0xfc, 0x09,
	0x1c, 0x38, 0x35, 0xf3, 0xde, 0xe4, 0xbd, 0xe9, 0x9b, 0x59, 0x60, 0x51, 0x2c, 0xc5, 0x08, 0x7d,
	0x45, 0x01, 0xa1, 0x1b, 0x4b, 0x41, 0x82, 0x9d, 0xcc, 0x83, 0xc9, 0x3c, 0x70, 0x67, 0x84, 0x6e,
	0xc2, 0x3a, 0x8f, 0x50, 0x7f, 0x40, 0x1a, 0x3e, 0xe9, 0x82, 0xeb, 0x4e, 0x0f, 0xdf, 0x17, 0xa8,
	0x88, 0xb5, 0x01, 0x22, 0xa4, 0x4f, 0x21, 0xdf, 0xfc, 0x69, 0x68, 0x5b, 0x1d, 0xab, 0x57, 0xf6,
	0xca, 0x29, 0x32, 0x08, 0xd9, 0x19, 0xfc, 0xa7, 0x40, 0x19, 0x2e, 0x67, 0xb8, 0xa2, 0x2e, 0x07,
	0xa1, 0xf3, 0x0a, 0x8d, 0x55, 0x41, 0x15, 0x8b, 0x48, 0x21, 0xbb, 0x80, 0xa3, 0x59, 0xa0, 0xc8,
	0xc7, 0xaf, 0x58, 0x48, 0xc2, 0x44, 0x34, 0xef, 0x55, 0x35, 0x78, 0x9f, 0x62, 0xac, 0x0b, 0xc7,
	0x4a, 0x4f, 0x10, 0x8d, 0xd1, 0x8f, 0x16, 0xf3, 0x11, 0x4a, 0xa3, 0x5f, 0xf0, 0x6a, 0x4b, 0x78,
	0x68, 0x50, 0xe7, 0xdb, 0x82, 0x3a, 0x3f, 0xe4, 0xe4, 0xac, 0x05, 0x65, 0x0a, 0xe4, 0x04, 0x49,
	0x53, 0x79, 0x43, 0x95, 0x12, 0x60, 0x10, 0xb2, 0x1b, 0xa8, 0x66, 0xf3, 0xb4, 0x0b, 0x1d, 0xab,
	0x57, 0xe9, 0xb7, 0xdd, 0xd5, 0x40, 0xdd, 0xec, 0x40, 0x95, 0x04, 0x33, 0x85, 0x63, 0x43, 0x83,
	0x6f, 0x0c, 0xc6, 0xf1, 0xc0, 0xbe, 0xc3, 0x19, 0x12, 0x1e, 0x70, 0x0d, 0x2d, 0x38, 0xdf, 0xa0,
	0x99, 0x1a, 0xbe, 0x40, 0x25, 0x03, 0x1f, 0x76, 0x31, 0xfd, 0x9f, 0x1c, 0xb0, 0x8c, 0x3a, 0x47,
	0xf9, 0x31, 0x1d, 0x23, 0x43, 0xa8, 0xfd, 0xbd, 0x0b, 0xd6, 0x5d, 0x0f, 0x6f, 0xe3, 0x29, 0x36,
	0x7b, 0xbb, 0x1b, 0xd3, 0x1f, 0xfb, 0xa7, 0x6d, 0xf8, 0x4e, 0x1b, 0xbe, 0xaf, 0x0d, 0xdf, 0x66,
	0x13, 0xc1, 0xe9, 0x5a, 0xbc, 0xec, 0x72, 0x5d, 0x60, 0xdb, 0x5e, 0x9b, 0x57, 0x7b, 0xf5, 0x2e,
	0xfd, 0x6e, 0x4b, 0xcf, 0x45, 0xf3, 0x82, 0xd5, 0x28, 0xf9, 0x5e, 0xff, 0x06, 0x00, 0x00, 0xff,
	0xff, 0x12, 0x3f, 0x91, 0xb3, 0xdf, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NProbeStateServiceClient is the client API for NProbeStateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NProbeStateServiceClient interface {
	// GetNProbeState returns a state for a specific targetID and networkID.
	GetNProbeState(ctx context.Context, in *GetNProbeStateRequest, opts ...grpc.CallOption) (*GetNProbeStateResponse, error)
	// SetNProbeState updates a state for a specific targetID and networkID.
	SetNProbeState(ctx context.Context, in *SetNProbeStateRequest, opts ...grpc.CallOption) (*SetNProbeStateResponse, error)
	// DeleteNProbeState removes a state for a specific targetID and networkID.
	DeleteNProbeState(ctx context.Context, in *DeleteNProbeStateRequest, opts ...grpc.CallOption) (*DeleteNProbeStateResponse, error)
}

type nProbeStateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewNProbeStateServiceClient(cc grpc.ClientConnInterface) NProbeStateServiceClient {
	return &nProbeStateServiceClient{cc}
}

func (c *nProbeStateServiceClient) GetNProbeState(ctx context.Context, in *GetNProbeStateRequest, opts ...grpc.CallOption) (*GetNProbeStateResponse, error) {
	out := new(GetNProbeStateResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.nprobe.NProbeStateService/GetNProbeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nProbeStateServiceClient) SetNProbeState(ctx context.Context, in *SetNProbeStateRequest, opts ...grpc.CallOption) (*SetNProbeStateResponse, error) {
	out := new(SetNProbeStateResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.nprobe.NProbeStateService/SetNProbeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nProbeStateServiceClient) DeleteNProbeState(ctx context.Context, in *DeleteNProbeStateRequest, opts ...grpc.CallOption) (*DeleteNProbeStateResponse, error) {
	out := new(DeleteNProbeStateResponse)
	err := c.cc.Invoke(ctx, "/magma.lte.nprobe.NProbeStateService/DeleteNProbeState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NProbeStateServiceServer is the server API for NProbeStateService service.
type NProbeStateServiceServer interface {
	// GetNProbeState returns a state for a specific targetID and networkID.
	GetNProbeState(context.Context, *GetNProbeStateRequest) (*GetNProbeStateResponse, error)
	// SetNProbeState updates a state for a specific targetID and networkID.
	SetNProbeState(context.Context, *SetNProbeStateRequest) (*SetNProbeStateResponse, error)
	// DeleteNProbeState removes a state for a specific targetID and networkID.
	DeleteNProbeState(context.Context, *DeleteNProbeStateRequest) (*DeleteNProbeStateResponse, error)
}

// UnimplementedNProbeStateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNProbeStateServiceServer struct {
}

func (*UnimplementedNProbeStateServiceServer) GetNProbeState(ctx context.Context, req *GetNProbeStateRequest) (*GetNProbeStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNProbeState not implemented")
}
func (*UnimplementedNProbeStateServiceServer) SetNProbeState(ctx context.Context, req *SetNProbeStateRequest) (*SetNProbeStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetNProbeState not implemented")
}
func (*UnimplementedNProbeStateServiceServer) DeleteNProbeState(ctx context.Context, req *DeleteNProbeStateRequest) (*DeleteNProbeStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteNProbeState not implemented")
}

func RegisterNProbeStateServiceServer(s *grpc.Server, srv NProbeStateServiceServer) {
	s.RegisterService(&_NProbeStateService_serviceDesc, srv)
}

func _NProbeStateService_GetNProbeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNProbeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NProbeStateServiceServer).GetNProbeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.nprobe.NProbeStateService/GetNProbeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NProbeStateServiceServer).GetNProbeState(ctx, req.(*GetNProbeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NProbeStateService_SetNProbeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetNProbeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NProbeStateServiceServer).SetNProbeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.nprobe.NProbeStateService/SetNProbeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NProbeStateServiceServer).SetNProbeState(ctx, req.(*SetNProbeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NProbeStateService_DeleteNProbeState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteNProbeStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NProbeStateServiceServer).DeleteNProbeState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.lte.nprobe.NProbeStateService/DeleteNProbeState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NProbeStateServiceServer).DeleteNProbeState(ctx, req.(*DeleteNProbeStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NProbeStateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.lte.nprobe.NProbeStateService",
	HandlerType: (*NProbeStateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNProbeState",
			Handler:    _NProbeStateService_GetNProbeState_Handler,
		},
		{
			MethodName: "SetNProbeState",
			Handler:    _NProbeStateService_SetNProbeState_Handler,
		},
		{
			MethodName: "DeleteNProbeState",
			Handler:    _NProbeStateService_DeleteNProbeState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nprobe_state.proto",
}
