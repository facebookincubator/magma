// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/service_registry.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServiceList struct {
	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceList) Reset()         { *m = ServiceList{} }
func (m *ServiceList) String() string { return proto.CompactTextString(m) }
func (*ServiceList) ProtoMessage()    {}
func (*ServiceList) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{0}
}

func (m *ServiceList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceList.Unmarshal(m, b)
}
func (m *ServiceList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceList.Marshal(b, m, deterministic)
}
func (m *ServiceList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceList.Merge(m, src)
}
func (m *ServiceList) XXX_Size() int {
	return xxx_messageInfo_ServiceList.Size(m)
}
func (m *ServiceList) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceList.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceList proto.InternalMessageInfo

func (m *ServiceList) GetServices() []string {
	if m != nil {
		return m.Services
	}
	return nil
}

type ServiceRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceRequest) Reset()         { *m = ServiceRequest{} }
func (m *ServiceRequest) String() string { return proto.CompactTextString(m) }
func (*ServiceRequest) ProtoMessage()    {}
func (*ServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{1}
}

func (m *ServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceRequest.Unmarshal(m, b)
}
func (m *ServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceRequest.Marshal(b, m, deterministic)
}
func (m *ServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceRequest.Merge(m, src)
}
func (m *ServiceRequest) XXX_Size() int {
	return xxx_messageInfo_ServiceRequest.Size(m)
}
func (m *ServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceRequest proto.InternalMessageInfo

func (m *ServiceRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type ServiceAddressResponse struct {
	Address              string   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceAddressResponse) Reset()         { *m = ServiceAddressResponse{} }
func (m *ServiceAddressResponse) String() string { return proto.CompactTextString(m) }
func (*ServiceAddressResponse) ProtoMessage()    {}
func (*ServiceAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{2}
}

func (m *ServiceAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAddressResponse.Unmarshal(m, b)
}
func (m *ServiceAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAddressResponse.Marshal(b, m, deterministic)
}
func (m *ServiceAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAddressResponse.Merge(m, src)
}
func (m *ServiceAddressResponse) XXX_Size() int {
	return xxx_messageInfo_ServiceAddressResponse.Size(m)
}
func (m *ServiceAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAddressResponse proto.InternalMessageInfo

func (m *ServiceAddressResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type FindServicesRequest struct {
	Label                string   `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindServicesRequest) Reset()         { *m = FindServicesRequest{} }
func (m *FindServicesRequest) String() string { return proto.CompactTextString(m) }
func (*FindServicesRequest) ProtoMessage()    {}
func (*FindServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{3}
}

func (m *FindServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindServicesRequest.Unmarshal(m, b)
}
func (m *FindServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindServicesRequest.Marshal(b, m, deterministic)
}
func (m *FindServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindServicesRequest.Merge(m, src)
}
func (m *FindServicesRequest) XXX_Size() int {
	return xxx_messageInfo_FindServicesRequest.Size(m)
}
func (m *FindServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindServicesRequest proto.InternalMessageInfo

func (m *FindServicesRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type GetAnnotationsRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Annotation           string   `protobuf:"bytes,2,opt,name=annotation,proto3" json:"annotation,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAnnotationsRequest) Reset()         { *m = GetAnnotationsRequest{} }
func (m *GetAnnotationsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAnnotationsRequest) ProtoMessage()    {}
func (*GetAnnotationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{4}
}

func (m *GetAnnotationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAnnotationsRequest.Unmarshal(m, b)
}
func (m *GetAnnotationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAnnotationsRequest.Marshal(b, m, deterministic)
}
func (m *GetAnnotationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAnnotationsRequest.Merge(m, src)
}
func (m *GetAnnotationsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAnnotationsRequest.Size(m)
}
func (m *GetAnnotationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAnnotationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAnnotationsRequest proto.InternalMessageInfo

func (m *GetAnnotationsRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *GetAnnotationsRequest) GetAnnotation() string {
	if m != nil {
		return m.Annotation
	}
	return ""
}

type AnnotationList struct {
	Annotations          []string `protobuf:"bytes,1,rep,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnnotationList) Reset()         { *m = AnnotationList{} }
func (m *AnnotationList) String() string { return proto.CompactTextString(m) }
func (*AnnotationList) ProtoMessage()    {}
func (*AnnotationList) Descriptor() ([]byte, []int) {
	return fileDescriptor_59363d5d975fb49f, []int{5}
}

func (m *AnnotationList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnnotationList.Unmarshal(m, b)
}
func (m *AnnotationList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnnotationList.Marshal(b, m, deterministic)
}
func (m *AnnotationList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnnotationList.Merge(m, src)
}
func (m *AnnotationList) XXX_Size() int {
	return xxx_messageInfo_AnnotationList.Size(m)
}
func (m *AnnotationList) XXX_DiscardUnknown() {
	xxx_messageInfo_AnnotationList.DiscardUnknown(m)
}

var xxx_messageInfo_AnnotationList proto.InternalMessageInfo

func (m *AnnotationList) GetAnnotations() []string {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterType((*ServiceList)(nil), "magma.orc8r.ServiceList")
	proto.RegisterType((*ServiceRequest)(nil), "magma.orc8r.ServiceRequest")
	proto.RegisterType((*ServiceAddressResponse)(nil), "magma.orc8r.ServiceAddressResponse")
	proto.RegisterType((*FindServicesRequest)(nil), "magma.orc8r.FindServicesRequest")
	proto.RegisterType((*GetAnnotationsRequest)(nil), "magma.orc8r.GetAnnotationsRequest")
	proto.RegisterType((*AnnotationList)(nil), "magma.orc8r.AnnotationList")
}

func init() {
	proto.RegisterFile("orc8r/protos/service_registry.proto", fileDescriptor_59363d5d975fb49f)
}

var fileDescriptor_59363d5d975fb49f = []byte{
	// 361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x4f, 0x4b, 0xfb, 0x30,
	0x18, 0xde, 0x7e, 0xe3, 0xa7, 0xee, 0x9d, 0x6c, 0x2c, 0x4e, 0xe9, 0x3a, 0x90, 0x92, 0x5d, 0xa6,
	0x42, 0x0b, 0xf3, 0xe2, 0xd1, 0x79, 0x70, 0x1e, 0x76, 0xb1, 0x03, 0x85, 0x5d, 0xa4, 0x5b, 0x5f,
	0x46, 0xa0, 0x6d, 0x66, 0x12, 0x05, 0x3f, 0x93, 0x5f, 0x52, 0xd6, 0x26, 0x5b, 0x23, 0x45, 0x2f,
	0x9e, 0xca, 0xfb, 0x3e, 0x7f, 0xd2, 0x3c, 0x0f, 0x81, 0x21, 0x17, 0xab, 0x1b, 0x11, 0x6c, 0x04,
	0x57, 0x5c, 0x06, 0x12, 0xc5, 0x3b, 0x5b, 0xe1, 0x8b, 0xc0, 0x35, 0x93, 0x4a, 0x7c, 0xf8, 0xf9,
	0x9e, 0xb4, 0xd2, 0x68, 0x9d, 0x46, 0x7e, 0x4e, 0x75, 0xfb, 0x96, 0x62, 0xc5, 0xd3, 0x94, 0x67,
	0x05, 0x8f, 0x5e, 0x40, 0x6b, 0x5e, 0x38, 0xcc, 0x98, 0x54, 0xc4, 0x85, 0x23, 0x6d, 0x28, 0x9d,
	0xba, 0xd7, 0x18, 0x35, 0xc3, 0xdd, 0x4c, 0x2f, 0xa1, 0xad, 0xa9, 0x21, 0xbe, 0xbe, 0xa1, 0x54,
	0xc4, 0x81, 0x43, 0x8d, 0x3a, 0x75, 0xaf, 0x3e, 0x6a, 0x86, 0x66, 0xa4, 0x63, 0x38, 0xd3, 0xdc,
	0x49, 0x1c, 0x0b, 0x94, 0x32, 0x44, 0xb9, 0xe1, 0x99, 0xc4, 0xad, 0x26, 0x2a, 0x56, 0x46, 0xa3,
	0x47, 0x7a, 0x05, 0x27, 0xf7, 0x2c, 0x8b, 0xb5, 0x4e, 0x9a, 0x43, 0x7a, 0xf0, 0x3f, 0x89, 0x96,
	0x98, 0x68, 0x7a, 0x31, 0xd0, 0x47, 0x38, 0x9d, 0xa2, 0x9a, 0x64, 0x19, 0x57, 0x91, 0x62, 0x3c,
	0x93, 0xbf, 0xfe, 0x13, 0x39, 0x07, 0x88, 0x76, 0x7c, 0xe7, 0x5f, 0x0e, 0x96, 0x36, 0x74, 0x0c,
	0xed, 0xbd, 0x5f, 0x9e, 0x86, 0x07, 0xad, 0x3d, 0x6e, 0x02, 0x29, 0xaf, 0xc6, 0x9f, 0x0d, 0xe8,
	0xec, 0x42, 0x29, 0x0a, 0x20, 0xb7, 0xd0, 0xd9, 0xaa, 0x27, 0x49, 0x62, 0xae, 0x42, 0xba, 0x7e,
	0xa9, 0x0e, 0xff, 0x89, 0xb3, 0xd8, 0x75, 0xac, 0x55, 0xa9, 0x03, 0x5a, 0x23, 0x33, 0x38, 0x2e,
	0x27, 0x41, 0x3c, 0x8b, 0x5b, 0x11, 0xd2, 0x8f, 0x6e, 0xcf, 0xd0, 0x9d, 0xa2, 0xb2, 0xeb, 0x20,
	0x83, 0x2a, 0x81, 0x71, 0x1b, 0x56, 0x81, 0xdf, 0x8a, 0xa4, 0x35, 0xb2, 0x80, 0xde, 0x14, 0xd5,
	0x83, 0x52, 0x9b, 0x2d, 0x05, 0xc5, 0x5f, 0x7a, 0xcf, 0xa1, 0x6d, 0xf7, 0x4b, 0xa8, 0x25, 0xac,
	0x2c, 0xdf, 0xb5, 0x4f, 0xb6, 0xdb, 0xa4, 0xb5, 0xbb, 0xc1, 0xa2, 0x9f, 0xe3, 0x41, 0xf1, 0x1e,
	0x12, 0xb6, 0x0c, 0xd6, 0x5c, 0x3f, 0x8b, 0xe5, 0x41, 0xfe, 0xbd, 0xfe, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0xb3, 0xa8, 0x0a, 0x32, 0x5f, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServiceRegistryClient is the client API for ServiceRegistry service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceRegistryClient interface {
	// ListAllServices returns the service name of all services in the registry.
	ListAllServices(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ServiceList, error)
	// FindServices returns the names of all services that have the passed label.
	FindServices(ctx context.Context, in *FindServicesRequest, opts ...grpc.CallOption) (*ServiceList, error)
	// GetServiceAddress returns the service address of a given service.
	GetServiceAddress(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceAddressResponse, error)
	// GetHttpServerAddress returns the address for a service's HTTP server.
	GetHttpServerAddress(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceAddressResponse, error)
	// GetAnnotations returns a list of values for the passed annotation
	// name.
	GetAnnotations(ctx context.Context, in *GetAnnotationsRequest, opts ...grpc.CallOption) (*AnnotationList, error)
}

type serviceRegistryClient struct {
	cc grpc.ClientConnInterface
}

func NewServiceRegistryClient(cc grpc.ClientConnInterface) ServiceRegistryClient {
	return &serviceRegistryClient{cc}
}

func (c *serviceRegistryClient) ListAllServices(ctx context.Context, in *Void, opts ...grpc.CallOption) (*ServiceList, error) {
	out := new(ServiceList)
	err := c.cc.Invoke(ctx, "/magma.orc8r.ServiceRegistry/ListAllServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceRegistryClient) FindServices(ctx context.Context, in *FindServicesRequest, opts ...grpc.CallOption) (*ServiceList, error) {
	out := new(ServiceList)
	err := c.cc.Invoke(ctx, "/magma.orc8r.ServiceRegistry/FindServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceRegistryClient) GetServiceAddress(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceAddressResponse, error) {
	out := new(ServiceAddressResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.ServiceRegistry/GetServiceAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceRegistryClient) GetHttpServerAddress(ctx context.Context, in *ServiceRequest, opts ...grpc.CallOption) (*ServiceAddressResponse, error) {
	out := new(ServiceAddressResponse)
	err := c.cc.Invoke(ctx, "/magma.orc8r.ServiceRegistry/GetHttpServerAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceRegistryClient) GetAnnotations(ctx context.Context, in *GetAnnotationsRequest, opts ...grpc.CallOption) (*AnnotationList, error) {
	out := new(AnnotationList)
	err := c.cc.Invoke(ctx, "/magma.orc8r.ServiceRegistry/GetAnnotations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceRegistryServer is the server API for ServiceRegistry service.
type ServiceRegistryServer interface {
	// ListAllServices returns the service name of all services in the registry.
	ListAllServices(context.Context, *Void) (*ServiceList, error)
	// FindServices returns the names of all services that have the passed label.
	FindServices(context.Context, *FindServicesRequest) (*ServiceList, error)
	// GetServiceAddress returns the service address of a given service.
	GetServiceAddress(context.Context, *ServiceRequest) (*ServiceAddressResponse, error)
	// GetHttpServerAddress returns the address for a service's HTTP server.
	GetHttpServerAddress(context.Context, *ServiceRequest) (*ServiceAddressResponse, error)
	// GetAnnotations returns a list of values for the passed annotation
	// name.
	GetAnnotations(context.Context, *GetAnnotationsRequest) (*AnnotationList, error)
}

// UnimplementedServiceRegistryServer can be embedded to have forward compatible implementations.
type UnimplementedServiceRegistryServer struct {
}

func (*UnimplementedServiceRegistryServer) ListAllServices(ctx context.Context, req *Void) (*ServiceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListAllServices not implemented")
}
func (*UnimplementedServiceRegistryServer) FindServices(ctx context.Context, req *FindServicesRequest) (*ServiceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindServices not implemented")
}
func (*UnimplementedServiceRegistryServer) GetServiceAddress(ctx context.Context, req *ServiceRequest) (*ServiceAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceAddress not implemented")
}
func (*UnimplementedServiceRegistryServer) GetHttpServerAddress(ctx context.Context, req *ServiceRequest) (*ServiceAddressResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHttpServerAddress not implemented")
}
func (*UnimplementedServiceRegistryServer) GetAnnotations(ctx context.Context, req *GetAnnotationsRequest) (*AnnotationList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnnotations not implemented")
}

func RegisterServiceRegistryServer(s *grpc.Server, srv ServiceRegistryServer) {
	s.RegisterService(&_ServiceRegistry_serviceDesc, srv)
}

func _ServiceRegistry_ListAllServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceRegistryServer).ListAllServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.ServiceRegistry/ListAllServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceRegistryServer).ListAllServices(ctx, req.(*Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceRegistry_FindServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceRegistryServer).FindServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.ServiceRegistry/FindServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceRegistryServer).FindServices(ctx, req.(*FindServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceRegistry_GetServiceAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceRegistryServer).GetServiceAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.ServiceRegistry/GetServiceAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceRegistryServer).GetServiceAddress(ctx, req.(*ServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceRegistry_GetHttpServerAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceRegistryServer).GetHttpServerAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.ServiceRegistry/GetHttpServerAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceRegistryServer).GetHttpServerAddress(ctx, req.(*ServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceRegistry_GetAnnotations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAnnotationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceRegistryServer).GetAnnotations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.ServiceRegistry/GetAnnotations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceRegistryServer).GetAnnotations(ctx, req.(*GetAnnotationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceRegistry_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.ServiceRegistry",
	HandlerType: (*ServiceRegistryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListAllServices",
			Handler:    _ServiceRegistry_ListAllServices_Handler,
		},
		{
			MethodName: "FindServices",
			Handler:    _ServiceRegistry_FindServices_Handler,
		},
		{
			MethodName: "GetServiceAddress",
			Handler:    _ServiceRegistry_GetServiceAddress_Handler,
		},
		{
			MethodName: "GetHttpServerAddress",
			Handler:    _ServiceRegistry_GetHttpServerAddress_Handler,
		},
		{
			MethodName: "GetAnnotations",
			Handler:    _ServiceRegistry_GetAnnotations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/protos/service_registry.proto",
}
