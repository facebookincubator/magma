---
# Copyright (c) 2016-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree. An additional grant
# of patent rights can be found in the PATENTS file in the same directory.

# Install nghttpx as control proxy
- name: Install nghttpx and its deps
  apt: pkg={{ item }} state=present update_cache=no
  with_items:
      - libssl-dev
      - libev-dev
      - libevent-dev
      - libjansson-dev
      - libjemalloc-dev
      - libc-ares-dev
      - magma-nghttpx=1.31.1-1
  when: preburn

- name: Copy nghttpx secure service unit file
  copy: src='nghttpx.service' dest='/etc/systemd/system/nghttpx@.service'
  when: full_provision

- name: Create nghttpx config directory
  file: path=/etc/nghttpx state=directory mode=0755
  when: full_provision

- name: Generating nghttpx config file
  template:
    src: "nghttpx_{{item}}.conf.j2"
    dest: /etc/nghttpx/nghttpx_{{item}}.conf
  with_items: "{{ nghttpx_units }}"
  when: full_provision

- name: Copy the header injection script
  copy: src='magma_headers.rb' dest='/etc/nghttpx/magma_headers.rb'
  when: full_provision

- name: Run logrotate hourly
  copy: src='/etc/cron.daily/logrotate' dest='/etc/cron.hourly/logrotate' remote_src=yes
  when: full_provision

- name: Copy the nghttpx truncation cronjob
  copy: src='nghttpx_truncate' dest='/etc/cron.d/nghttpx_truncate'
  when: full_provision

- name: Copy logrotate config file for nghttpx
  copy: src='logrotate_nghttpx.conf' dest='/etc/logrotate.d/nghttpx'
  when: full_provision

- name: Change permission of nghttpx.log to 0644 (-rw-r--r--)
  file: path='/var/log/nghttpx.log' state=touch mode=0644
  when: full_provision

- name: Stop the current running magma services
  when: full_provision and restart_controller
  systemd: name=magma@* state=stopped
  ignore_errors: yes

- name: Start the nghttpx service
  systemd: name=nghttpx@{{item}} state=restarted daemon_reload=yes enabled=yes
  with_items: "{{ nghttpx_units }}"
  when: full_provision

- name: Copy magma service unit file
  when: full_provision and restart_controller
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - {src: 'magma_logger.service', dest: '/etc/systemd/system/magma@logger.service'}

- name: Restart the magma services
  when: full_provision and restart_controller
  systemd: name=magma@{{ item }} state=restarted daemon_reload=yes enabled=yes
  with_items:
      - logger
