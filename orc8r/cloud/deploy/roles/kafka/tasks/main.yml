---
# Copyright (c) 2016-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree. An additional grant
# of patent rights can be found in the PATENTS file in the same directory.

- name: Add all the packages needed
  apt: pkg={{ item }} state=present update_cache=yes
  with_items:
      - default-jre

- name: Create archives directory
  file: path=/var/opt/magma/archives state=directory

- name: Download Kafka archive
  get_url:
    url: "http://www-us.apache.org/dist/kafka/{{ kafka_version }}/kafka_{{ scala_version }}-{{ kafka_version }}.tgz"
    dest: "/var/opt/magma/archives/kafka-{{ kafka_version }}.tgz"

- name: Create kafka installation directory
  file: path=/opt/kafka state=directory

- name: Create Kafka log directory
  file:
    path: '{{ kafka_log_dir }}'
    state: directory

- name: Extract Kafka archive
  unarchive:
    remote_src: yes
    src: "/var/opt/magma/archives/kafka-{{ kafka_version }}.tgz"
    dest: "/opt/kafka/"
    extra_opts:
      - --strip=1

- name: Template in and copy over configs
  template:
    src: '{{ item.src }}'
    dest: '/opt/kafka/config//{{ item.dst_name }}'
  with_items:
    - { src: 'kafka_server.{{ kafka_config_version }}.properties', dst_name: 'kafka_server.properties' }
    - { src: 'kafka_connect.{{ kafka_config_version }}.properties', dst_name: 'kafka_connect.properties' }
    - { src: 'magma-connector.json.j2', dst_name: 'magma-connector.json' }

- name: Download Debezium Kafka Connect plugin
  get_url:
    url: 'https://repo1.maven.org/maven2/io/debezium/debezium-connector-postgres/{{ debezium_version }}/debezium-connector-postgres-{{ debezium_version }}-plugin.tar.gz'
    dest: '/var/opt/magma/archives/debezium-{{ debezium_version }}.tar.gz'

- name: Create Kakfa plugin directory
  file: path=/opt/kafka/plugins state=directory

# Otherwise the old jars will remain in the plugin directory
- name: Remove old Debezium plugin directory
  file:
    state: absent
    path: '/opt/kafka/plugins/debezium-connector-postgres'

- name: Install Debezium Kafka Connect plugin
  unarchive:
    remote_src: yes
    src: '/var/opt/magma/archives/debezium-{{ debezium_version }}.tar.gz'
    dest: '/opt/kafka/plugins'

- name: Copy over service files
  copy:
    src: '{{ item.src }}'
    dest: '/etc/systemd/system/{{ item.dst_name }}'
  with_items:
    - { src: 'magma_kafka.service', dst_name: 'magma@kafka.service'}
    - { src: 'magma_kafka-connect.service', dst_name: 'magma@kafka_connect.service' }
    - { src: 'magma_metricsd.service', dst_name: 'magma@metricsd.service' }

- name: Restart services
  when: start_services
  systemd:
    name: '{{ item }}'
    state: restarted
    daemon_reload: yes
    enabled: yes
  with_items:
    - 'magma@kafka'
    - 'magma@kafka_connect'
    - 'magma@metricsd'

- name: Sleep for 10 seconds to allow Kafka Connect to start up
  pause:
    seconds: 10
  ignore_errors: yes
  when: start_services

- name: Read templated Debezium config
  slurp:
    src: '/opt/kafka/config/magma-connector.json'
  register: debezium_slurp
  when: start_services

- name: Check if Postgres connector has already been created
  uri:
    method: GET
    url: 'http://{{ connect_rest_endpoint }}/connectors'
    return_content: yes
  register: connectors_result
  when: start_services and start_connector

- name: Start Debezium Postgres connector
  uri:
    method: POST
    url: 'http://{{ connect_rest_endpoint }}/connectors'
    body: "{{ debezium_slurp['content'] | b64decode }}"
    body_format: json
    status_code: 201
    headers:
      Content-Type: 'application/json'
  when: start_services and start_connector and connectors_result.json|length == 0

# We don't want any of the following tasks to block provisioning a new cluster,
# so set ignore_errors

# There's no reason to keep all checkins - set to 1 week retention so we don't
# blow away all our disk space.
# Note that depending on the frequency of network creation, we depend on
# running this via a deploy once every few weeks/months to set configs on
# new topics
- name: Set retention for gateway status logs and materialized gateway topic to 1 week
  command: /opt/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --alter --topic "magma\.public\..*_gwstatus" --config retention.ms=604800000
  ignore_errors: yes

# Set to 1 month to facilitate debugging
- name: Set retention for materialized gateway topic to 1 month
  command: /opt/kafka/bin/kafka-topics.sh --zookeeper localhost:2181 --alter --topic magma.public.gatewaystates --config retention.ms=2592000000
  ignore_errors: yes
