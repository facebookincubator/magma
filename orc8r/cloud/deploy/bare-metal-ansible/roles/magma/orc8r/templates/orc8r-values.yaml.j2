################################################################################
# Copyright 2020 The Magma Authors.

# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################

imagePullSecrets:
  - name: artifactory

logging:
  enabled: false

secrets:
  create: false

secret:
  certs: {{ orc8r_certs_secret }}
  envdir: orc8r-envdir
  configs:
    orc8r: orc8r-configs

nginx:
  create: true
  podDisruptionBudget:
    enabled: true
  image:
    repository: {{ orc8r_image_repo }}/nginx
    tag: {{ orc8r_image_version }}
  replicas: 1
  service:
    enabled: true
    legacyEnabled: true
    extraAnnotations:
      bootstrapLagacy:
        external-dns.alpha.kubernetes.io/hostname: bootstrapper-controller.{{ orc8r_domain }}
      clientcertLegacy:
        external-dns.alpha.kubernetes.io/hostname: controller.{{ orc8r_domain }}
      proxy:
        external-dns.alpha.kubernetes.io/hostname: api.{{ orc8r_domain }}
    name: orc8r-bootstrap-nginx
    type: LoadBalancer
  spec:
    hostname: controller.{{ orc8r_domain }}
    resolver: coredns.kube-system.svc.{{ dns_domain }} valid=10s

controller:
  create: true
  podDisruptionBudget:
    enabled: true
  image:
    repository: {{ orc8r_image_repo }}/controller
    tag: {{ orc8r_image_version }}
  replicas: 1
  spec:
    database:
      driver: mysql
      sql_dialect: {{ orc8r_db_dialect }}
      db: {{ orc8r_db_name }}
      host: {{ orc8r_db_host }}
      port: {{ orc8r_db_port }}
      user: {{ orc8r_db_user }}
      pass: {{ orc8r_db_pass }}
  service:
    portEnd: 9121

nms:
  enabled: true
  imagePullSecrets:
    - name: artifactory
  secret:
    certs: {{ nms_certs_secret }}
  magmalte:
    create: true
    image:
      repository: {{ orc8r_image_repo }}/magmalte
      tag: {{ orc8r_image_version }}
    env:
      api_host: api.{{ orc8r_domain }}
      mysql_db: {{ orc8r_nms_db_name }}
      mysql_host: {{ orc8r_nms_db_host }}
      mysql_user: {{ orc8r_nms_db_user }}
      mysql_pass: {{ orc8r_nms_db_pass }}
      mysql_port: {{ orc8r_nms_db_port }}
      mysql_dialect: {{ orc8r_nms_db_dialect }}
      grafana_address: orc8r-user-grafana:3000
    manifests:
      deployment: true
      rbac: false
      secrets: true
      service: true

  nginx:
    create: true
    manifests:
      configmap: true
      deployment: true
      rbac: false
      secrets: true
      service: true
    deployment:
      spec:
        ssl_cert_name: controller.crt
        ssl_cert_key_name: controller.key
    service:
      annotations:
        external-dns.alpha.kubernetes.io/hostname: '*.nms.magma.local'
      type: LoadBalancer

metrics:
  imagePullSecrets:
    - name: artifactory

  alertmanager:
    create: true

  alertmanagerConfigurer:
    create: true
    image:
      repository: {{ orc8r_alertmanager_configurer_image_repo }}
      tag: {{ orc8r_alertmanager_configurer_image_tag }}
    alertmanagerURL: orc8r-alertmanager:9093

  metrics:
    volumes:
      prometheusData:
        volumeSpec:
          persistentVolumeClaim:
            claimName: promdata
      prometheusConfig:
        volumeSpec:
          persistentVolumeClaim:
            claimName: promcfg

  prometheus:
    create: true
    includeOrc8rAlerts: true

  prometheusCache:
    create: true
    image:
      repository: {{ orc8r_prometheus_cache_image_repo }}
      tag: {{ orc8r_prometheus_cache_image_tag }}
    limit: 500000

  prometheusConfigurer:
    create: true
    image:
      repository: {{ orc8r_prometheus_configurer_image_repo }}
      tag: {{ orc8r_prometheus_configurer_image_tag }}
    prometheusURL: orc8r-prometheus:9090

  grafana:
    create: false
  userGrafana:
    create: true
    image:
      repository: {{ orc8r_grafana_image_repo }}
      tag: {{ orc8r_grafana_image_tag }}
    volumes:
      datasources:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadatasources
      dashboardproviders:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanaproviders
      dashboards:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadashboards
      grafanaData:
        volumeSpec:
          persistentVolumeClaim:
            claimName: grafanadata

  thanos:
    enabled: false
