#!/bin/bash

# Copyright (c) 2016-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree. An additional grant
# of patent rights can be found in the PATENTS file in the same directory.

error_exit() {
    local message=$1
    echo "[FATAL] $message" 1>&2
    exit 1
}

# Install the awscli bundle (https://github.com/aws/aws-cli/issues/3330)
sudo apt-get remove -y awscli
if [ ! -f /usr/local/bin/aws ]; then
    rm -rf /tmp/awscli-bundle
    curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "/tmp/awscli-bundle.zip"
    unzip /tmp/awscli-bundle.zip -d /tmp
    sudo /usr/bin/python3 /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
fi

# Get the environment this instance is deploying into
# CodeDeploy may not have applied tags when we get here, so we just figure out what autoscaling group we're part of and get the tags that will eventually be applied.
INSTANCE_NAME=$(wget -q -O - http://169.254.169.254/latest/meta-data/instance-id)
ASGROUP=`aws autoscaling describe-auto-scaling-instances --instance-ids $INSTANCE_NAME --region eu-west-1 --output=text | cut -f 2`
DEPLOY_ENV=`aws autoscaling describe-tags --filters Name="auto-scaling-group",Values=$ASGROUP Name=Key,Values=environment --region eu-west-1 --output=text | cut -f6`
if [ $? != 0 ]; then
    error_exit "Couldn't get deployment environment."
fi

# Remove unused packages and temp folder
sudo apt autoremove --purge -y
sudo rm -rf /var/opt/magma/temp
sudo mkdir -p /var/opt/magma/temp
sudo mkdir -p /var/opt/magma/old

s3_copy() {
    # Copy dir from s3
    if ! sudo aws s3 cp "s3://magma-deployment/$1" "/var/opt/magma/temp/$2" --region eu-west-1 --recursive
    then
        error_exit "Couldn't pull $1 from s3"
    fi

    # Keep a copy of old dir, and use the new dir
    sudo mkdir -p "/var/opt/magma/$2"
    sudo cp -R "/var/opt/magma/$2" "/var/opt/magma/old/"
    sudo rm -rf "/var/opt/magma/$2"
    sudo mv "/var/opt/magma/temp/$2" "/var/opt/magma/"
}

s3_copy "environments/$DEPLOY_ENV" "envdir"
s3_copy "certs" "certs"
s3_copy "configs/$DEPLOY_ENV" "configs"

# Prepare for using envdir
sudo apt-get -y install daemontools

# Get HOST_NAME and add it to envdir
HOST_NAME=$(wget -q -O - http://169.254.169.254/latest/meta-data/public-hostname)
echo "$HOST_NAME" > /var/opt/magma/envdir/HOST_NAME
