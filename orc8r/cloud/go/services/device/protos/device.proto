// Copyright (c) 2018-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.
syntax = "proto3";

import "google/protobuf/any.proto";
import "orc8r/protos/common.proto";

package magma.orc8r.device;
option go_package = "protos";

message PhysicalEntity {
    // Globally unique identifier per type (MAC/SN)
    string deviceID = 1;
    // Used to deserialize info
    string type = 2;
    // NetworkID the device belongs to
    string networkID = 3;
    // Any other information (manufacturer, location, owner, etc)
    bytes info = 4;
}

message RegisterDevicesRequest {
    repeated PhysicalEntity entities = 1;
}

message DeviceID {
    string deviceID = 1;
    string type = 2;
}

message GetDeviceInfoRequest {
    repeated DeviceID deviceIDs = 1;
}

message GetDeviceInfoResponse {
    // A map of device IDs to corresponding PhysicalEntity structure
    map<string, PhysicalEntity> deviceMap = 1;
}

service Device {
    rpc RegisterDevices(RegisterDevicesRequest) returns (magma.orc8r.Void) {}
    rpc GetDeviceInfo(GetDeviceInfoRequest) returns (GetDeviceInfoResponse) {}
}

