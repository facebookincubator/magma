// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package storage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// OWN grants READ and WRITE
type ACL_Permission int32

const (
	ACL_NO_PERM ACL_Permission = 0
	ACL_READ    ACL_Permission = 1
	ACL_WRITE   ACL_Permission = 2
	ACL_OWN     ACL_Permission = 3
)

var ACL_Permission_name = map[int32]string{
	0: "NO_PERM",
	1: "READ",
	2: "WRITE",
	3: "OWN",
}
var ACL_Permission_value = map[string]int32{
	"NO_PERM": 0,
	"READ":    1,
	"WRITE":   2,
	"OWN":     3,
}

func (x ACL_Permission) String() string {
	return proto.EnumName(ACL_Permission_name, int32(x))
}
func (ACL_Permission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{6, 0}
}

type ACL_Wildcard int32

const (
	ACL_NO_WILDCARD  ACL_Wildcard = 0
	ACL_WILDCARD_ALL ACL_Wildcard = 1
)

var ACL_Wildcard_name = map[int32]string{
	0: "NO_WILDCARD",
	1: "WILDCARD_ALL",
}
var ACL_Wildcard_value = map[string]int32{
	"NO_WILDCARD":  0,
	"WILDCARD_ALL": 1,
}

func (x ACL_Wildcard) String() string {
	return proto.EnumName(ACL_Wildcard_name, int32(x))
}
func (ACL_Wildcard) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{6, 1}
}

// A network represents a tenant. Networks can be configured in a hierarchical
// manner - network-level configurations are assumed to apply across multiple
// entities within the network.
type Network struct {
	ID          string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// Configs maps between a type value and a serialized representation of the
	// configuration value. The type value will point to the Serde
	// implementation which can deserialize the associated value.
	Configs              map[string][]byte `protobuf:"bytes,20,rep,name=configs,proto3" json:"configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Version              uint64            `protobuf:"varint,30,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{0}
}
func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (dst *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(dst, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Network) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Network) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Network) GetConfigs() map[string][]byte {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (m *Network) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// NetworkLoadCriteria specifies how much of a network to load
type NetworkLoadCriteria struct {
	// Set LoadMetadata to true to load metadata fields (name, description)
	LoadMetadata         bool     `protobuf:"varint,1,opt,name=load_metadata,json=loadMetadata,proto3" json:"load_metadata,omitempty"`
	LoadConfigs          bool     `protobuf:"varint,2,opt,name=load_configs,json=loadConfigs,proto3" json:"load_configs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkLoadCriteria) Reset()         { *m = NetworkLoadCriteria{} }
func (m *NetworkLoadCriteria) String() string { return proto.CompactTextString(m) }
func (*NetworkLoadCriteria) ProtoMessage()    {}
func (*NetworkLoadCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{1}
}
func (m *NetworkLoadCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkLoadCriteria.Unmarshal(m, b)
}
func (m *NetworkLoadCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkLoadCriteria.Marshal(b, m, deterministic)
}
func (dst *NetworkLoadCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkLoadCriteria.Merge(dst, src)
}
func (m *NetworkLoadCriteria) XXX_Size() int {
	return xxx_messageInfo_NetworkLoadCriteria.Size(m)
}
func (m *NetworkLoadCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkLoadCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkLoadCriteria proto.InternalMessageInfo

func (m *NetworkLoadCriteria) GetLoadMetadata() bool {
	if m != nil {
		return m.LoadMetadata
	}
	return false
}

func (m *NetworkLoadCriteria) GetLoadConfigs() bool {
	if m != nil {
		return m.LoadConfigs
	}
	return false
}

type NetworkLoadResult struct {
	Networks             []*Network `protobuf:"bytes,1,rep,name=networks,proto3" json:"networks,omitempty"`
	NetworkIDsNotFound   []string   `protobuf:"bytes,2,rep,name=networkIDs_not_found,json=networkIDsNotFound,proto3" json:"networkIDs_not_found,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *NetworkLoadResult) Reset()         { *m = NetworkLoadResult{} }
func (m *NetworkLoadResult) String() string { return proto.CompactTextString(m) }
func (*NetworkLoadResult) ProtoMessage()    {}
func (*NetworkLoadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{2}
}
func (m *NetworkLoadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkLoadResult.Unmarshal(m, b)
}
func (m *NetworkLoadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkLoadResult.Marshal(b, m, deterministic)
}
func (dst *NetworkLoadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkLoadResult.Merge(dst, src)
}
func (m *NetworkLoadResult) XXX_Size() int {
	return xxx_messageInfo_NetworkLoadResult.Size(m)
}
func (m *NetworkLoadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkLoadResult.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkLoadResult proto.InternalMessageInfo

func (m *NetworkLoadResult) GetNetworks() []*Network {
	if m != nil {
		return m.Networks
	}
	return nil
}

func (m *NetworkLoadResult) GetNetworkIDsNotFound() []string {
	if m != nil {
		return m.NetworkIDsNotFound
	}
	return nil
}

// NetworkUpdateCriteria specifies how to update a network
type NetworkUpdateCriteria struct {
	// ID of the network to update
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// Set DeleteNetwork to true to delete the network
	DeleteNetwork bool `protobuf:"varint,10,opt,name=delete_network,json=deleteNetwork,proto3" json:"delete_network,omitempty"`
	// Set NewName or NewDescription to nil to indicate that no update is
	// desired. To clear the value of name or description, set these fields to
	// a wrapper to an empty string.
	NewName        *wrappers.StringValue `protobuf:"bytes,20,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	NewDescription *wrappers.StringValue `protobuf:"bytes,21,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	// New config values to add or existing ones to update
	ConfigsToAddOrUpdate map[string][]byte `protobuf:"bytes,30,rep,name=configs_to_add_or_update,json=configsToAddOrUpdate,proto3" json:"configs_to_add_or_update,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Config values to delete
	ConfigsToDelete      []string `protobuf:"bytes,31,rep,name=configs_to_delete,json=configsToDelete,proto3" json:"configs_to_delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkUpdateCriteria) Reset()         { *m = NetworkUpdateCriteria{} }
func (m *NetworkUpdateCriteria) String() string { return proto.CompactTextString(m) }
func (*NetworkUpdateCriteria) ProtoMessage()    {}
func (*NetworkUpdateCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{3}
}
func (m *NetworkUpdateCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkUpdateCriteria.Unmarshal(m, b)
}
func (m *NetworkUpdateCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkUpdateCriteria.Marshal(b, m, deterministic)
}
func (dst *NetworkUpdateCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkUpdateCriteria.Merge(dst, src)
}
func (m *NetworkUpdateCriteria) XXX_Size() int {
	return xxx_messageInfo_NetworkUpdateCriteria.Size(m)
}
func (m *NetworkUpdateCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkUpdateCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkUpdateCriteria proto.InternalMessageInfo

func (m *NetworkUpdateCriteria) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *NetworkUpdateCriteria) GetDeleteNetwork() bool {
	if m != nil {
		return m.DeleteNetwork
	}
	return false
}

func (m *NetworkUpdateCriteria) GetNewName() *wrappers.StringValue {
	if m != nil {
		return m.NewName
	}
	return nil
}

func (m *NetworkUpdateCriteria) GetNewDescription() *wrappers.StringValue {
	if m != nil {
		return m.NewDescription
	}
	return nil
}

func (m *NetworkUpdateCriteria) GetConfigsToAddOrUpdate() map[string][]byte {
	if m != nil {
		return m.ConfigsToAddOrUpdate
	}
	return nil
}

func (m *NetworkUpdateCriteria) GetConfigsToDelete() []string {
	if m != nil {
		return m.ConfigsToDelete
	}
	return nil
}

type EntityID struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key                  string   `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityID) Reset()         { *m = EntityID{} }
func (m *EntityID) String() string { return proto.CompactTextString(m) }
func (*EntityID) ProtoMessage()    {}
func (*EntityID) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{4}
}
func (m *EntityID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityID.Unmarshal(m, b)
}
func (m *EntityID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityID.Marshal(b, m, deterministic)
}
func (dst *EntityID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityID.Merge(dst, src)
}
func (m *EntityID) XXX_Size() int {
	return xxx_messageInfo_EntityID.Size(m)
}
func (m *EntityID) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityID.DiscardUnknown(m)
}

var xxx_messageInfo_EntityID proto.InternalMessageInfo

func (m *EntityID) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EntityID) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

// NetworkEntity is the storage representation of a logical component of a
// network. Networks are partitioned into DAGs of entities.
type NetworkEntity struct {
	NetworkID string `protobuf:"bytes,1,opt,name=networkID,proto3" json:"networkID,omitempty"`
	// (Type, Key) forms a unique identifier for the network entity within its
	// network.
	Type        string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Key         string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Name        string `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,11,opt,name=description,proto3" json:"description,omitempty"`
	// PhysicalID will be non-empty if the entity corresponds to a physical
	// asset.
	PhysicalID string `protobuf:"bytes,20,opt,name=physicalID,proto3" json:"physicalID,omitempty"`
	// Serialized view of the entity's configuration. The value of the Type
	// field will determine the Serde implementation for this value.
	Config []byte `protobuf:"bytes,30,opt,name=config,proto3" json:"config,omitempty"`
	// GraphID is a mostly-internal field to designate the DAG that this
	// network entity belongs to. This field is system-generated and will be
	// ignored if set during entity creation.
	GraphID string `protobuf:"bytes,40,opt,name=graphID,proto3" json:"graphID,omitempty"`
	// Associations are the directed edges originating from this entity.
	Associations []*EntityID `protobuf:"bytes,50,rep,name=associations,proto3" json:"associations,omitempty"`
	// ParentAssociations are the directed edges ending at this entity.
	// This is a read-only field and will be ignored if set during entity
	// creation.
	ParentAssociations []*EntityID `protobuf:"bytes,51,rep,name=parent_associations,json=parentAssociations,proto3" json:"parent_associations,omitempty"`
	// Permissions defines the access control for this entity.
	Permissions          []*ACL   `protobuf:"bytes,60,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Version              uint64   `protobuf:"varint,70,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkEntity) Reset()         { *m = NetworkEntity{} }
func (m *NetworkEntity) String() string { return proto.CompactTextString(m) }
func (*NetworkEntity) ProtoMessage()    {}
func (*NetworkEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{5}
}
func (m *NetworkEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkEntity.Unmarshal(m, b)
}
func (m *NetworkEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkEntity.Marshal(b, m, deterministic)
}
func (dst *NetworkEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkEntity.Merge(dst, src)
}
func (m *NetworkEntity) XXX_Size() int {
	return xxx_messageInfo_NetworkEntity.Size(m)
}
func (m *NetworkEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkEntity.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkEntity proto.InternalMessageInfo

func (m *NetworkEntity) GetNetworkID() string {
	if m != nil {
		return m.NetworkID
	}
	return ""
}

func (m *NetworkEntity) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *NetworkEntity) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *NetworkEntity) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *NetworkEntity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *NetworkEntity) GetPhysicalID() string {
	if m != nil {
		return m.PhysicalID
	}
	return ""
}

func (m *NetworkEntity) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *NetworkEntity) GetGraphID() string {
	if m != nil {
		return m.GraphID
	}
	return ""
}

func (m *NetworkEntity) GetAssociations() []*EntityID {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *NetworkEntity) GetParentAssociations() []*EntityID {
	if m != nil {
		return m.ParentAssociations
	}
	return nil
}

func (m *NetworkEntity) GetPermissions() []*ACL {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *NetworkEntity) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// ACL (Access Control List) defines a specific permission for an entity on
// access to other entities.
type ACL struct {
	// A unique system-generated identifier for this ACL.
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	// An ACL can apply to one or more networks.
	//
	// Types that are valid to be assigned to Scope:
	//	*ACL_ScopeNetworkIDs
	//	*ACL_ScopeWildcard
	Scope      isACL_Scope    `protobuf_oneof:"scope"`
	Permission ACL_Permission `protobuf:"varint,20,opt,name=permission,proto3,enum=magma.orc8r.configurator.storage.ACL_Permission" json:"permission,omitempty"`
	// An ACL can define access permissions to a specific type of entity, or
	// all entities.
	//
	// Types that are valid to be assigned to Type:
	//	*ACL_EntityType
	//	*ACL_TypeWildcard
	Type isACL_Type `protobuf_oneof:"type"`
	// An ACL can optionally define access permissions to specific entity IDs
	// If empty, the ACL will apply to all entities of the specified type.
	IDFilter             []string `protobuf:"bytes,40,rep,name=IDFilter,proto3" json:"IDFilter,omitempty"`
	Version              uint64   `protobuf:"varint,50,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ACL) Reset()         { *m = ACL{} }
func (m *ACL) String() string { return proto.CompactTextString(m) }
func (*ACL) ProtoMessage()    {}
func (*ACL) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{6}
}
func (m *ACL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACL.Unmarshal(m, b)
}
func (m *ACL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACL.Marshal(b, m, deterministic)
}
func (dst *ACL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACL.Merge(dst, src)
}
func (m *ACL) XXX_Size() int {
	return xxx_messageInfo_ACL.Size(m)
}
func (m *ACL) XXX_DiscardUnknown() {
	xxx_messageInfo_ACL.DiscardUnknown(m)
}

var xxx_messageInfo_ACL proto.InternalMessageInfo

func (m *ACL) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

type isACL_Scope interface {
	isACL_Scope()
}

type ACL_ScopeNetworkIDs struct {
	ScopeNetworkIDs *ACL_NetworkIDs `protobuf:"bytes,10,opt,name=scope_networkIDs,json=scopeNetworkIDs,proto3,oneof"`
}

type ACL_ScopeWildcard struct {
	ScopeWildcard ACL_Wildcard `protobuf:"varint,11,opt,name=scope_wildcard,json=scopeWildcard,proto3,enum=magma.orc8r.configurator.storage.ACL_Wildcard,oneof"`
}

func (*ACL_ScopeNetworkIDs) isACL_Scope() {}

func (*ACL_ScopeWildcard) isACL_Scope() {}

func (m *ACL) GetScope() isACL_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *ACL) GetScopeNetworkIDs() *ACL_NetworkIDs {
	if x, ok := m.GetScope().(*ACL_ScopeNetworkIDs); ok {
		return x.ScopeNetworkIDs
	}
	return nil
}

func (m *ACL) GetScopeWildcard() ACL_Wildcard {
	if x, ok := m.GetScope().(*ACL_ScopeWildcard); ok {
		return x.ScopeWildcard
	}
	return ACL_NO_WILDCARD
}

func (m *ACL) GetPermission() ACL_Permission {
	if m != nil {
		return m.Permission
	}
	return ACL_NO_PERM
}

type isACL_Type interface {
	isACL_Type()
}

type ACL_EntityType struct {
	EntityType string `protobuf:"bytes,30,opt,name=entity_type,json=entityType,proto3,oneof"`
}

type ACL_TypeWildcard struct {
	TypeWildcard ACL_Wildcard `protobuf:"varint,31,opt,name=type_wildcard,json=typeWildcard,proto3,enum=magma.orc8r.configurator.storage.ACL_Wildcard,oneof"`
}

func (*ACL_EntityType) isACL_Type() {}

func (*ACL_TypeWildcard) isACL_Type() {}

func (m *ACL) GetType() isACL_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *ACL) GetEntityType() string {
	if x, ok := m.GetType().(*ACL_EntityType); ok {
		return x.EntityType
	}
	return ""
}

func (m *ACL) GetTypeWildcard() ACL_Wildcard {
	if x, ok := m.GetType().(*ACL_TypeWildcard); ok {
		return x.TypeWildcard
	}
	return ACL_NO_WILDCARD
}

func (m *ACL) GetIDFilter() []string {
	if m != nil {
		return m.IDFilter
	}
	return nil
}

func (m *ACL) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ACL) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ACL_OneofMarshaler, _ACL_OneofUnmarshaler, _ACL_OneofSizer, []interface{}{
		(*ACL_ScopeNetworkIDs)(nil),
		(*ACL_ScopeWildcard)(nil),
		(*ACL_EntityType)(nil),
		(*ACL_TypeWildcard)(nil),
	}
}

func _ACL_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ACL)
	// scope
	switch x := m.Scope.(type) {
	case *ACL_ScopeNetworkIDs:
		b.EncodeVarint(10<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ScopeNetworkIDs); err != nil {
			return err
		}
	case *ACL_ScopeWildcard:
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ScopeWildcard))
	case nil:
	default:
		return fmt.Errorf("ACL.Scope has unexpected type %T", x)
	}
	// type
	switch x := m.Type.(type) {
	case *ACL_EntityType:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.EntityType)
	case *ACL_TypeWildcard:
		b.EncodeVarint(31<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.TypeWildcard))
	case nil:
	default:
		return fmt.Errorf("ACL.Type has unexpected type %T", x)
	}
	return nil
}

func _ACL_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ACL)
	switch tag {
	case 10: // scope.scope_networkIDs
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ACL_NetworkIDs)
		err := b.DecodeMessage(msg)
		m.Scope = &ACL_ScopeNetworkIDs{msg}
		return true, err
	case 11: // scope.scope_wildcard
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Scope = &ACL_ScopeWildcard{ACL_Wildcard(x)}
		return true, err
	case 30: // type.entity_type
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &ACL_EntityType{x}
		return true, err
	case 31: // type.type_wildcard
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &ACL_TypeWildcard{ACL_Wildcard(x)}
		return true, err
	default:
		return false, nil
	}
}

func _ACL_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ACL)
	// scope
	switch x := m.Scope.(type) {
	case *ACL_ScopeNetworkIDs:
		s := proto.Size(x.ScopeNetworkIDs)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ACL_ScopeWildcard:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ScopeWildcard))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// type
	switch x := m.Type.(type) {
	case *ACL_EntityType:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.EntityType)))
		n += len(x.EntityType)
	case *ACL_TypeWildcard:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.TypeWildcard))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ACL_NetworkIDs struct {
	IDs                  []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ACL_NetworkIDs) Reset()         { *m = ACL_NetworkIDs{} }
func (m *ACL_NetworkIDs) String() string { return proto.CompactTextString(m) }
func (*ACL_NetworkIDs) ProtoMessage()    {}
func (*ACL_NetworkIDs) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{6, 0}
}
func (m *ACL_NetworkIDs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ACL_NetworkIDs.Unmarshal(m, b)
}
func (m *ACL_NetworkIDs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ACL_NetworkIDs.Marshal(b, m, deterministic)
}
func (dst *ACL_NetworkIDs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ACL_NetworkIDs.Merge(dst, src)
}
func (m *ACL_NetworkIDs) XXX_Size() int {
	return xxx_messageInfo_ACL_NetworkIDs.Size(m)
}
func (m *ACL_NetworkIDs) XXX_DiscardUnknown() {
	xxx_messageInfo_ACL_NetworkIDs.DiscardUnknown(m)
}

var xxx_messageInfo_ACL_NetworkIDs proto.InternalMessageInfo

func (m *ACL_NetworkIDs) GetIDs() []string {
	if m != nil {
		return m.IDs
	}
	return nil
}

// EntityLoadFilter specifies which entities to load from storage
type EntityLoadFilter struct {
	// If TypeFilter is provided, the query will return all entities matching
	// the given type.
	TypeFilter *wrappers.StringValue `protobuf:"bytes,1,opt,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	// If KeyFilter is provided, the query will return all entities matching the
	// given ID.
	KeyFilter *wrappers.StringValue `protobuf:"bytes,2,opt,name=key_filter,json=keyFilter,proto3" json:"key_filter,omitempty"`
	// If IDs is provided, the query will return all entities matching the
	// provided TypeAndKeys. TypeFilter and KeyFilter are ignored if IDs is
	// provided.
	IDs []*EntityID `protobuf:"bytes,3,rep,name=IDs,proto3" json:"IDs,omitempty"`
	// Internal-only
	GraphID *wrappers.StringValue `protobuf:"bytes,4,opt,name=graphID,proto3" json:"graphID,omitempty"`
	// If PhysicalID is provided, the query will return all entities matching
	// the provided ID. All other fields are ignored if this is set.
	PhysicalID           *wrappers.StringValue `protobuf:"bytes,5,opt,name=physicalID,proto3" json:"physicalID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *EntityLoadFilter) Reset()         { *m = EntityLoadFilter{} }
func (m *EntityLoadFilter) String() string { return proto.CompactTextString(m) }
func (*EntityLoadFilter) ProtoMessage()    {}
func (*EntityLoadFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{7}
}
func (m *EntityLoadFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityLoadFilter.Unmarshal(m, b)
}
func (m *EntityLoadFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityLoadFilter.Marshal(b, m, deterministic)
}
func (dst *EntityLoadFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityLoadFilter.Merge(dst, src)
}
func (m *EntityLoadFilter) XXX_Size() int {
	return xxx_messageInfo_EntityLoadFilter.Size(m)
}
func (m *EntityLoadFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityLoadFilter.DiscardUnknown(m)
}

var xxx_messageInfo_EntityLoadFilter proto.InternalMessageInfo

func (m *EntityLoadFilter) GetTypeFilter() *wrappers.StringValue {
	if m != nil {
		return m.TypeFilter
	}
	return nil
}

func (m *EntityLoadFilter) GetKeyFilter() *wrappers.StringValue {
	if m != nil {
		return m.KeyFilter
	}
	return nil
}

func (m *EntityLoadFilter) GetIDs() []*EntityID {
	if m != nil {
		return m.IDs
	}
	return nil
}

func (m *EntityLoadFilter) GetGraphID() *wrappers.StringValue {
	if m != nil {
		return m.GraphID
	}
	return nil
}

func (m *EntityLoadFilter) GetPhysicalID() *wrappers.StringValue {
	if m != nil {
		return m.PhysicalID
	}
	return nil
}

// EntityLoadCriteria specifies how much of an entity to load
type EntityLoadCriteria struct {
	// Set LoadMetadata to true to load the metadata fields (name, description)
	LoadMetadata         bool     `protobuf:"varint,1,opt,name=load_metadata,json=loadMetadata,proto3" json:"load_metadata,omitempty"`
	LoadConfig           bool     `protobuf:"varint,2,opt,name=load_config,json=loadConfig,proto3" json:"load_config,omitempty"`
	LoadAssocsToThis     bool     `protobuf:"varint,3,opt,name=load_assocs_to_this,json=loadAssocsToThis,proto3" json:"load_assocs_to_this,omitempty"`
	LoadAssocsFromThis   bool     `protobuf:"varint,4,opt,name=load_assocs_from_this,json=loadAssocsFromThis,proto3" json:"load_assocs_from_this,omitempty"`
	LoadPermissions      bool     `protobuf:"varint,5,opt,name=load_permissions,json=loadPermissions,proto3" json:"load_permissions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityLoadCriteria) Reset()         { *m = EntityLoadCriteria{} }
func (m *EntityLoadCriteria) String() string { return proto.CompactTextString(m) }
func (*EntityLoadCriteria) ProtoMessage()    {}
func (*EntityLoadCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{8}
}
func (m *EntityLoadCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityLoadCriteria.Unmarshal(m, b)
}
func (m *EntityLoadCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityLoadCriteria.Marshal(b, m, deterministic)
}
func (dst *EntityLoadCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityLoadCriteria.Merge(dst, src)
}
func (m *EntityLoadCriteria) XXX_Size() int {
	return xxx_messageInfo_EntityLoadCriteria.Size(m)
}
func (m *EntityLoadCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityLoadCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_EntityLoadCriteria proto.InternalMessageInfo

func (m *EntityLoadCriteria) GetLoadMetadata() bool {
	if m != nil {
		return m.LoadMetadata
	}
	return false
}

func (m *EntityLoadCriteria) GetLoadConfig() bool {
	if m != nil {
		return m.LoadConfig
	}
	return false
}

func (m *EntityLoadCriteria) GetLoadAssocsToThis() bool {
	if m != nil {
		return m.LoadAssocsToThis
	}
	return false
}

func (m *EntityLoadCriteria) GetLoadAssocsFromThis() bool {
	if m != nil {
		return m.LoadAssocsFromThis
	}
	return false
}

func (m *EntityLoadCriteria) GetLoadPermissions() bool {
	if m != nil {
		return m.LoadPermissions
	}
	return false
}

type EntityLoadResult struct {
	Entities             []*NetworkEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	EntitiesNotFound     []*EntityID      `protobuf:"bytes,2,rep,name=entities_not_found,json=entitiesNotFound,proto3" json:"entities_not_found,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EntityLoadResult) Reset()         { *m = EntityLoadResult{} }
func (m *EntityLoadResult) String() string { return proto.CompactTextString(m) }
func (*EntityLoadResult) ProtoMessage()    {}
func (*EntityLoadResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{9}
}
func (m *EntityLoadResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityLoadResult.Unmarshal(m, b)
}
func (m *EntityLoadResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityLoadResult.Marshal(b, m, deterministic)
}
func (dst *EntityLoadResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityLoadResult.Merge(dst, src)
}
func (m *EntityLoadResult) XXX_Size() int {
	return xxx_messageInfo_EntityLoadResult.Size(m)
}
func (m *EntityLoadResult) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityLoadResult.DiscardUnknown(m)
}

var xxx_messageInfo_EntityLoadResult proto.InternalMessageInfo

func (m *EntityLoadResult) GetEntities() []*NetworkEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityLoadResult) GetEntitiesNotFound() []*EntityID {
	if m != nil {
		return m.EntitiesNotFound
	}
	return nil
}

// EntityUpdateCriteria specifies a patch operation on a network entity.
type EntityUpdateCriteria struct {
	// (Type, Key) of the entity to update
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Key  string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Set DeleteEntity to true to mark the entity for deletion
	DeleteEntity   bool                  `protobuf:"varint,10,opt,name=delete_entity,json=deleteEntity,proto3" json:"delete_entity,omitempty"`
	NewName        *wrappers.StringValue `protobuf:"bytes,20,opt,name=new_name,json=newName,proto3" json:"new_name,omitempty"`
	NewDescription *wrappers.StringValue `protobuf:"bytes,21,opt,name=new_description,json=newDescription,proto3" json:"new_description,omitempty"`
	NewPhysicalID  *wrappers.StringValue `protobuf:"bytes,22,opt,name=new_physicalID,json=newPhysicalID,proto3" json:"new_physicalID,omitempty"`
	// A nil value here indicates no update.
	NewConfig            *wrappers.BytesValue `protobuf:"bytes,23,opt,name=new_config,json=newConfig,proto3" json:"new_config,omitempty"`
	AssociationsToSet    []*EntityID          `protobuf:"bytes,30,rep,name=associations_to_set,json=associationsToSet,proto3" json:"associations_to_set,omitempty"`
	AssociationsToAdd    []*EntityID          `protobuf:"bytes,31,rep,name=associations_to_add,json=associationsToAdd,proto3" json:"associations_to_add,omitempty"`
	AssociationsToDelete []*EntityID          `protobuf:"bytes,32,rep,name=associations_to_delete,json=associationsToDelete,proto3" json:"associations_to_delete,omitempty"`
	// New ACLs to add. ACL IDs are ignored and generated by the system.
	PermissionsToCreate  []*ACL   `protobuf:"bytes,40,rep,name=permissions_to_create,json=permissionsToCreate,proto3" json:"permissions_to_create,omitempty"`
	PermissionsToUpdate  []*ACL   `protobuf:"bytes,41,rep,name=permissions_to_update,json=permissionsToUpdate,proto3" json:"permissions_to_update,omitempty"`
	PermissionsToDelete  []string `protobuf:"bytes,42,rep,name=permissions_to_delete,json=permissionsToDelete,proto3" json:"permissions_to_delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EntityUpdateCriteria) Reset()         { *m = EntityUpdateCriteria{} }
func (m *EntityUpdateCriteria) String() string { return proto.CompactTextString(m) }
func (*EntityUpdateCriteria) ProtoMessage()    {}
func (*EntityUpdateCriteria) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{10}
}
func (m *EntityUpdateCriteria) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityUpdateCriteria.Unmarshal(m, b)
}
func (m *EntityUpdateCriteria) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityUpdateCriteria.Marshal(b, m, deterministic)
}
func (dst *EntityUpdateCriteria) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityUpdateCriteria.Merge(dst, src)
}
func (m *EntityUpdateCriteria) XXX_Size() int {
	return xxx_messageInfo_EntityUpdateCriteria.Size(m)
}
func (m *EntityUpdateCriteria) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityUpdateCriteria.DiscardUnknown(m)
}

var xxx_messageInfo_EntityUpdateCriteria proto.InternalMessageInfo

func (m *EntityUpdateCriteria) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EntityUpdateCriteria) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EntityUpdateCriteria) GetDeleteEntity() bool {
	if m != nil {
		return m.DeleteEntity
	}
	return false
}

func (m *EntityUpdateCriteria) GetNewName() *wrappers.StringValue {
	if m != nil {
		return m.NewName
	}
	return nil
}

func (m *EntityUpdateCriteria) GetNewDescription() *wrappers.StringValue {
	if m != nil {
		return m.NewDescription
	}
	return nil
}

func (m *EntityUpdateCriteria) GetNewPhysicalID() *wrappers.StringValue {
	if m != nil {
		return m.NewPhysicalID
	}
	return nil
}

func (m *EntityUpdateCriteria) GetNewConfig() *wrappers.BytesValue {
	if m != nil {
		return m.NewConfig
	}
	return nil
}

func (m *EntityUpdateCriteria) GetAssociationsToSet() []*EntityID {
	if m != nil {
		return m.AssociationsToSet
	}
	return nil
}

func (m *EntityUpdateCriteria) GetAssociationsToAdd() []*EntityID {
	if m != nil {
		return m.AssociationsToAdd
	}
	return nil
}

func (m *EntityUpdateCriteria) GetAssociationsToDelete() []*EntityID {
	if m != nil {
		return m.AssociationsToDelete
	}
	return nil
}

func (m *EntityUpdateCriteria) GetPermissionsToCreate() []*ACL {
	if m != nil {
		return m.PermissionsToCreate
	}
	return nil
}

func (m *EntityUpdateCriteria) GetPermissionsToUpdate() []*ACL {
	if m != nil {
		return m.PermissionsToUpdate
	}
	return nil
}

func (m *EntityUpdateCriteria) GetPermissionsToDelete() []string {
	if m != nil {
		return m.PermissionsToDelete
	}
	return nil
}

// EntityGraph represents a DAG of associated network entities.
type EntityGraph struct {
	// All nodes in the graph
	Entities []*NetworkEntity `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	// All nodes in the graph which don't have any edges terminating at them.
	RootEntities []*EntityID `protobuf:"bytes,2,rep,name=root_entities,json=rootEntities,proto3" json:"root_entities,omitempty"`
	// All edges in the graph.
	Edges                []*GraphEdge `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EntityGraph) Reset()         { *m = EntityGraph{} }
func (m *EntityGraph) String() string { return proto.CompactTextString(m) }
func (*EntityGraph) ProtoMessage()    {}
func (*EntityGraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{11}
}
func (m *EntityGraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntityGraph.Unmarshal(m, b)
}
func (m *EntityGraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntityGraph.Marshal(b, m, deterministic)
}
func (dst *EntityGraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntityGraph.Merge(dst, src)
}
func (m *EntityGraph) XXX_Size() int {
	return xxx_messageInfo_EntityGraph.Size(m)
}
func (m *EntityGraph) XXX_DiscardUnknown() {
	xxx_messageInfo_EntityGraph.DiscardUnknown(m)
}

var xxx_messageInfo_EntityGraph proto.InternalMessageInfo

func (m *EntityGraph) GetEntities() []*NetworkEntity {
	if m != nil {
		return m.Entities
	}
	return nil
}

func (m *EntityGraph) GetRootEntities() []*EntityID {
	if m != nil {
		return m.RootEntities
	}
	return nil
}

func (m *EntityGraph) GetEdges() []*GraphEdge {
	if m != nil {
		return m.Edges
	}
	return nil
}

// GraphEdge represents a directed edge within a graph
type GraphEdge struct {
	To                   *EntityID `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 *EntityID `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GraphEdge) Reset()         { *m = GraphEdge{} }
func (m *GraphEdge) String() string { return proto.CompactTextString(m) }
func (*GraphEdge) ProtoMessage()    {}
func (*GraphEdge) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_41bf444bffa015c1, []int{12}
}
func (m *GraphEdge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GraphEdge.Unmarshal(m, b)
}
func (m *GraphEdge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GraphEdge.Marshal(b, m, deterministic)
}
func (dst *GraphEdge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GraphEdge.Merge(dst, src)
}
func (m *GraphEdge) XXX_Size() int {
	return xxx_messageInfo_GraphEdge.Size(m)
}
func (m *GraphEdge) XXX_DiscardUnknown() {
	xxx_messageInfo_GraphEdge.DiscardUnknown(m)
}

var xxx_messageInfo_GraphEdge proto.InternalMessageInfo

func (m *GraphEdge) GetTo() *EntityID {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *GraphEdge) GetFrom() *EntityID {
	if m != nil {
		return m.From
	}
	return nil
}

func init() {
	proto.RegisterType((*Network)(nil), "magma.orc8r.configurator.storage.Network")
	proto.RegisterMapType((map[string][]byte)(nil), "magma.orc8r.configurator.storage.Network.ConfigsEntry")
	proto.RegisterType((*NetworkLoadCriteria)(nil), "magma.orc8r.configurator.storage.NetworkLoadCriteria")
	proto.RegisterType((*NetworkLoadResult)(nil), "magma.orc8r.configurator.storage.NetworkLoadResult")
	proto.RegisterType((*NetworkUpdateCriteria)(nil), "magma.orc8r.configurator.storage.NetworkUpdateCriteria")
	proto.RegisterMapType((map[string][]byte)(nil), "magma.orc8r.configurator.storage.NetworkUpdateCriteria.ConfigsToAddOrUpdateEntry")
	proto.RegisterType((*EntityID)(nil), "magma.orc8r.configurator.storage.EntityID")
	proto.RegisterType((*NetworkEntity)(nil), "magma.orc8r.configurator.storage.NetworkEntity")
	proto.RegisterType((*ACL)(nil), "magma.orc8r.configurator.storage.ACL")
	proto.RegisterType((*ACL_NetworkIDs)(nil), "magma.orc8r.configurator.storage.ACL.NetworkIDs")
	proto.RegisterType((*EntityLoadFilter)(nil), "magma.orc8r.configurator.storage.EntityLoadFilter")
	proto.RegisterType((*EntityLoadCriteria)(nil), "magma.orc8r.configurator.storage.EntityLoadCriteria")
	proto.RegisterType((*EntityLoadResult)(nil), "magma.orc8r.configurator.storage.EntityLoadResult")
	proto.RegisterType((*EntityUpdateCriteria)(nil), "magma.orc8r.configurator.storage.EntityUpdateCriteria")
	proto.RegisterType((*EntityGraph)(nil), "magma.orc8r.configurator.storage.EntityGraph")
	proto.RegisterType((*GraphEdge)(nil), "magma.orc8r.configurator.storage.GraphEdge")
	proto.RegisterEnum("magma.orc8r.configurator.storage.ACL_Permission", ACL_Permission_name, ACL_Permission_value)
	proto.RegisterEnum("magma.orc8r.configurator.storage.ACL_Wildcard", ACL_Wildcard_name, ACL_Wildcard_value)
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_storage_41bf444bffa015c1) }

var fileDescriptor_storage_41bf444bffa015c1 = []byte{
	// 1361 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x56, 0x6d, 0x6f, 0x1a, 0xc7,
	0x16, 0xf6, 0x02, 0x36, 0x70, 0x00, 0x9b, 0x8c, 0x71, 0xee, 0x5e, 0xdf, 0xc8, 0x21, 0x5c, 0x45,
	0x22, 0xb9, 0x0a, 0xc9, 0x25, 0x52, 0x12, 0xb9, 0x69, 0x25, 0x0c, 0x38, 0x41, 0x75, 0xb0, 0x3b,
	0x21, 0x75, 0x9b, 0x2a, 0xda, 0x6e, 0xd8, 0x31, 0x5e, 0x19, 0x76, 0xd0, 0xec, 0x38, 0x88, 0x5f,
	0x50, 0x55, 0xea, 0x1f, 0xea, 0xd7, 0xfe, 0x81, 0xfe, 0x8b, 0xb6, 0x52, 0xa5, 0x7e, 0xed, 0xd7,
	0x6a, 0x5e, 0xf6, 0x05, 0x3b, 0x95, 0x97, 0xb4, 0x52, 0xbf, 0xed, 0x9c, 0x99, 0xe7, 0xd9, 0x39,
	0xe7, 0x3c, 0x73, 0xce, 0x81, 0x92, 0xcf, 0x29, 0xb3, 0x47, 0xa4, 0x31, 0x65, 0x94, 0x53, 0x54,
	0x9d, 0xd8, 0xa3, 0x89, 0xdd, 0xa0, 0x6c, 0xf8, 0x84, 0x35, 0x86, 0xd4, 0x3b, 0x71, 0x47, 0xe7,
	0xcc, 0xe6, 0x94, 0x35, 0xf4, 0xb9, 0xed, 0x9d, 0x11, 0xa5, 0xa3, 0x31, 0xb9, 0x2f, 0xcf, 0xbf,
	0x3d, 0x3f, 0xb9, 0x3f, 0x63, 0xf6, 0x74, 0x4a, 0x98, 0xaf, 0x18, 0x6a, 0xbf, 0x1b, 0x90, 0xed,
	0x13, 0x3e, 0xa3, 0xec, 0x0c, 0xad, 0x43, 0xaa, 0xd7, 0x31, 0x8d, 0xaa, 0x51, 0xcf, 0xe3, 0x54,
	0xaf, 0x83, 0x10, 0x64, 0x3c, 0x7b, 0x42, 0x4c, 0x90, 0x16, 0xf9, 0x8d, 0xaa, 0x50, 0x70, 0x88,
	0x3f, 0x64, 0xee, 0x94, 0xbb, 0xd4, 0x33, 0x0b, 0x72, 0x2b, 0x6e, 0x42, 0x47, 0x90, 0x55, 0x37,
	0xf1, 0xcd, 0x4a, 0x35, 0x5d, 0x2f, 0x34, 0x1f, 0x35, 0xae, 0xba, 0x65, 0x43, 0xdf, 0xa0, 0xd1,
	0x56, 0xc0, 0xae, 0xc7, 0xd9, 0x1c, 0x07, 0x34, 0xc8, 0x84, 0xec, 0x3b, 0xc2, 0x7c, 0xf1, 0xbf,
	0x9d, 0xaa, 0x51, 0xcf, 0xe0, 0x60, 0xb9, 0xbd, 0x0b, 0xc5, 0x38, 0x04, 0x95, 0x21, 0x7d, 0x46,
	0xe6, 0xda, 0x05, 0xf1, 0x89, 0x2a, 0xb0, 0xfa, 0xce, 0x1e, 0x9f, 0x13, 0x33, 0x55, 0x35, 0xea,
	0x45, 0xac, 0x16, 0xbb, 0xa9, 0x27, 0x46, 0xed, 0x0d, 0x6c, 0xea, 0xdf, 0x1e, 0x50, 0xdb, 0x69,
	0x33, 0x97, 0x13, 0xe6, 0xda, 0xe8, 0xbf, 0x50, 0x1a, 0x53, 0xdb, 0xb1, 0x26, 0x84, 0xdb, 0x8e,
	0xcd, 0x6d, 0x49, 0x96, 0xc3, 0x45, 0x61, 0x7c, 0xa1, 0x6d, 0xe8, 0x16, 0xc8, 0xb5, 0x15, 0x38,
	0x9a, 0x92, 0x67, 0x0a, 0xc2, 0xa6, 0xef, 0x53, 0xfb, 0xce, 0x80, 0x6b, 0x31, 0x7e, 0x4c, 0xfc,
	0xf3, 0x31, 0x47, 0x5d, 0xc8, 0x79, 0xca, 0xe8, 0x9b, 0x86, 0x8c, 0xce, 0x9d, 0xc4, 0xd1, 0xc1,
	0x21, 0x14, 0x3d, 0x80, 0x8a, 0xfe, 0xee, 0x75, 0x7c, 0xcb, 0xa3, 0xdc, 0x3a, 0xa1, 0xe7, 0x9e,
	0x63, 0xa6, 0xaa, 0xe9, 0x7a, 0x1e, 0xa3, 0x68, 0xaf, 0x4f, 0xf9, 0xbe, 0xd8, 0xa9, 0xfd, 0x98,
	0x86, 0x2d, 0xcd, 0xf3, 0x6a, 0xea, 0xd8, 0x9c, 0x84, 0x0e, 0x5f, 0xcc, 0xfa, 0x6d, 0x58, 0x77,
	0xc8, 0x98, 0x70, 0x62, 0x69, 0x1a, 0x99, 0xff, 0x1c, 0x2e, 0x29, 0x6b, 0x20, 0x96, 0xc7, 0xc2,
	0x93, 0x99, 0x25, 0x05, 0x52, 0xa9, 0x1a, 0xf5, 0x42, 0xf3, 0x46, 0x43, 0x69, 0xad, 0x11, 0x68,
	0xad, 0xf1, 0x92, 0x33, 0xd7, 0x1b, 0x7d, 0x2e, 0x42, 0x8e, 0xb3, 0x1e, 0x99, 0xf5, 0x85, 0x82,
	0xba, 0xb0, 0x21, 0x80, 0x71, 0x15, 0x6d, 0x25, 0xc0, 0xaf, 0x7b, 0x64, 0xd6, 0x89, 0xc9, 0xec,
	0x5b, 0x03, 0x4c, 0x1d, 0x7e, 0x8b, 0x53, 0xcb, 0x76, 0x1c, 0x8b, 0x32, 0xeb, 0x5c, 0xfa, 0x66,
	0xee, 0xc8, 0xd0, 0x7e, 0x96, 0x38, 0xb4, 0x8b, 0x21, 0x09, 0x64, 0x38, 0xa0, 0x2d, 0xc7, 0x39,
	0x64, 0x6a, 0x53, 0x69, 0xb2, 0x32, 0x7c, 0xcf, 0x16, 0xba, 0x0b, 0xd7, 0x62, 0x57, 0x51, 0x71,
	0x32, 0x6f, 0xca, 0x5c, 0x6c, 0x84, 0x80, 0x8e, 0x34, 0x6f, 0x3f, 0x83, 0x7f, 0xff, 0x29, 0xfd,
	0x52, 0xfa, 0x7d, 0x00, 0xb9, 0xae, 0xc7, 0x5d, 0x3e, 0x57, 0x2f, 0x95, 0xcf, 0xa7, 0x44, 0x03,
	0xe5, 0x77, 0xc0, 0x95, 0x0a, 0xb9, 0x6a, 0xbf, 0xa6, 0xa1, 0xa4, 0x1d, 0x56, 0x48, 0x74, 0x03,
	0xf2, 0xa1, 0x56, 0x34, 0x38, 0x32, 0x84, 0xac, 0xa9, 0xcb, 0xac, 0xe9, 0xe8, 0x86, 0x1f, 0x56,
	0x25, 0x76, 0x00, 0xa6, 0xa7, 0x73, 0xdf, 0x1d, 0xda, 0xe3, 0x5e, 0x47, 0x0a, 0x28, 0x8f, 0x63,
	0x16, 0x74, 0x1d, 0xd6, 0x54, 0xe4, 0xe4, 0x93, 0x2f, 0x62, 0xbd, 0x12, 0xb5, 0x60, 0xc4, 0xec,
	0xe9, 0x69, 0xaf, 0x63, 0xd6, 0x25, 0x28, 0x58, 0xa2, 0x3e, 0x14, 0x6d, 0xdf, 0xa7, 0x43, 0xd7,
	0x16, 0x3f, 0xf0, 0xcd, 0xa6, 0xd4, 0xc0, 0xdd, 0xab, 0x35, 0x10, 0x44, 0x11, 0x2f, 0xe0, 0xd1,
	0x57, 0xb0, 0x39, 0xb5, 0x19, 0xf1, 0xb8, 0xb5, 0x40, 0xfb, 0x70, 0x69, 0x5a, 0xa4, 0x68, 0x5a,
	0x71, 0xf2, 0x67, 0x50, 0x98, 0x12, 0x36, 0x71, 0x7d, 0x5f, 0x92, 0x3e, 0x95, 0xa4, 0xb7, 0xaf,
	0x26, 0x6d, 0xb5, 0x0f, 0x70, 0x1c, 0x19, 0xaf, 0x8d, 0xfb, 0x0b, 0xb5, 0xb1, 0xf6, 0x4b, 0x06,
	0xd2, 0xad, 0xf6, 0xc1, 0xa5, 0xf7, 0xfd, 0x06, 0xca, 0xfe, 0x90, 0x4e, 0xc3, 0xe7, 0xdd, 0xeb,
	0xf8, 0x32, 0x77, 0x85, 0xe6, 0x83, 0x44, 0xff, 0x0f, 0xde, 0x4c, 0xaf, 0xe3, 0x3f, 0x5f, 0xc1,
	0x1b, 0x92, 0x2b, 0x32, 0xa1, 0x63, 0x58, 0x57, 0xf4, 0x33, 0x77, 0xec, 0x0c, 0x6d, 0xe6, 0xc8,
	0xec, 0xaf, 0x37, 0x1b, 0xc9, 0xc8, 0x8f, 0x35, 0xea, 0xf9, 0x0a, 0x2e, 0x49, 0x9e, 0xc0, 0x80,
	0x8e, 0x00, 0x22, 0xc7, 0xa5, 0x62, 0xd6, 0x93, 0xde, 0xf8, 0x28, 0xc4, 0xe1, 0x18, 0x07, 0xba,
	0x05, 0x05, 0x22, 0x93, 0x64, 0x49, 0x99, 0x0b, 0xa1, 0xe5, 0x9f, 0x1b, 0x18, 0x94, 0x71, 0x20,
	0xe4, 0xfe, 0x0a, 0x4a, 0x62, 0x2f, 0x72, 0xe6, 0xe6, 0x07, 0x39, 0x63, 0xe0, 0xa2, 0xa0, 0x09,
	0x7d, 0xd9, 0x86, 0x5c, 0xaf, 0xb3, 0xef, 0x8e, 0x39, 0x61, 0x66, 0x5d, 0xd6, 0x89, 0x70, 0x1d,
	0xcf, 0x68, 0x73, 0xb1, 0xdb, 0xed, 0x00, 0xc4, 0x02, 0x5d, 0x86, 0xb4, 0x48, 0x9d, 0x21, 0xe1,
	0xe2, 0xb3, 0xf6, 0x18, 0x20, 0xf2, 0x14, 0x15, 0x20, 0xdb, 0x3f, 0xb4, 0x8e, 0xba, 0xf8, 0x45,
	0x79, 0x05, 0xe5, 0x20, 0x83, 0xbb, 0xad, 0x4e, 0xd9, 0x40, 0x79, 0x58, 0x3d, 0xc6, 0xbd, 0x41,
	0xb7, 0x9c, 0x42, 0x59, 0x48, 0x1f, 0x1e, 0xf7, 0xcb, 0xe9, 0xda, 0x3d, 0xc8, 0x85, 0x57, 0xdb,
	0x80, 0x42, 0xff, 0xd0, 0x3a, 0xee, 0x1d, 0x74, 0xda, 0x2d, 0xdc, 0x29, 0xaf, 0xa0, 0x32, 0x14,
	0x83, 0x95, 0xd5, 0x3a, 0x38, 0x28, 0x1b, 0x7b, 0x59, 0x58, 0x95, 0xa9, 0xd9, 0x5b, 0x53, 0x05,
	0xa2, 0xf6, 0x43, 0x0a, 0xca, 0x4a, 0xee, 0xa2, 0xd5, 0x69, 0x3f, 0x3e, 0x86, 0x82, 0x0c, 0xdd,
	0x89, 0x72, 0xd3, 0x48, 0x50, 0xe3, 0x41, 0x00, 0x34, 0xfc, 0x23, 0x80, 0x33, 0x32, 0x0f, 0xd0,
	0xa9, 0x04, 0xe8, 0xfc, 0x19, 0x99, 0x6b, 0xf0, 0x53, 0x15, 0x9b, 0xf4, 0xd2, 0x6f, 0x55, 0xc0,
	0xd0, 0xa3, 0xa8, 0xc6, 0x64, 0x92, 0x74, 0xb6, 0xa0, 0x02, 0x3d, 0x5d, 0xa8, 0x69, 0xab, 0x49,
	0x1c, 0x8e, 0xce, 0xd7, 0x7e, 0x36, 0x00, 0x45, 0x41, 0x5c, 0x6e, 0x1e, 0xb9, 0x09, 0x85, 0xd8,
	0x3c, 0xa2, 0xc7, 0x11, 0x88, 0xc6, 0x11, 0x74, 0x0f, 0x36, 0xe5, 0x01, 0x59, 0xca, 0x64, 0x97,
	0xe2, 0xa7, 0xae, 0x2f, 0xcb, 0x78, 0x0e, 0x97, 0xc5, 0x96, 0x2c, 0x4f, 0xfe, 0x80, 0x0e, 0x4e,
	0x5d, 0x1f, 0xfd, 0x1f, 0xb6, 0xe2, 0xc7, 0x4f, 0x18, 0x9d, 0x28, 0x40, 0x46, 0x02, 0x50, 0x04,
	0xd8, 0x67, 0x74, 0x22, 0x21, 0x77, 0x40, 0xd2, 0x58, 0xf1, 0xb2, 0xb6, 0x2a, 0x4f, 0x6f, 0x08,
	0x7b, 0x24, 0x4c, 0xbf, 0xf6, 0xbd, 0x11, 0x97, 0x8b, 0x9e, 0x8c, 0x3e, 0x85, 0x9c, 0x7c, 0x77,
	0x2e, 0x09, 0x26, 0xa3, 0xfb, 0x89, 0xdb, 0xb7, 0x22, 0xc3, 0x21, 0x01, 0xfa, 0x02, 0x50, 0xf0,
	0x7d, 0x61, 0x3a, 0x5a, 0x4e, 0x0e, 0xe5, 0x80, 0x25, 0x9c, 0xa3, 0x7e, 0x5a, 0x83, 0x8a, 0xda,
	0xbe, 0x30, 0x46, 0x25, 0x6a, 0xc1, 0x22, 0x9b, 0x7a, 0xb8, 0x52, 0x45, 0x46, 0xcf, 0x56, 0x45,
	0x65, 0xd4, 0x5d, 0xf9, 0x9f, 0x1e, 0xad, 0xda, 0x20, 0x2c, 0x56, 0x4c, 0xcb, 0xd7, 0x13, 0xb0,
	0x94, 0x3c, 0x32, 0x3b, 0x8a, 0x1a, 0xf8, 0x2e, 0x80, 0x20, 0xd1, 0x8a, 0xfc, 0x97, 0x24, 0xf8,
	0xcf, 0x25, 0x82, 0xbd, 0x39, 0x27, 0xbe, 0x7e, 0xbe, 0x1e, 0x99, 0x69, 0xb5, 0xbe, 0x86, 0xcd,
	0x78, 0xcf, 0x15, 0x72, 0xf5, 0x09, 0xd7, 0x53, 0xdd, 0x32, 0xf9, 0xbb, 0x16, 0xa7, 0x19, 0xd0,
	0x97, 0x84, 0xbf, 0x8f, 0xdb, 0x76, 0x1c, 0x39, 0xad, 0xfd, 0x25, 0xee, 0x96, 0xe3, 0xa0, 0xaf,
	0xe1, 0xfa, 0x45, 0x6e, 0x3d, 0x0c, 0x56, 0x97, 0xa6, 0xaf, 0x2c, 0xd2, 0xab, 0xe9, 0x11, 0x7d,
	0x09, 0x5b, 0xb1, 0x07, 0x26, 0x7e, 0x30, 0x64, 0x44, 0x4c, 0xbc, 0xf5, 0x65, 0x26, 0x88, 0xcd,
	0x18, 0xc7, 0x80, 0xb6, 0x25, 0xc3, 0x7b, 0xa8, 0xf5, 0x30, 0x7d, 0xe7, 0xc3, 0xa9, 0xf5, 0x7c,
	0xdc, 0xbc, 0x44, 0xad, 0xc3, 0x72, 0x57, 0x36, 0xaf, 0x45, 0x8c, 0xf2, 0xb4, 0xf6, 0x9b, 0x01,
	0x05, 0x15, 0x8c, 0x67, 0xa2, 0xbc, 0xfe, 0xbd, 0xf5, 0xe1, 0x10, 0x4a, 0x8c, 0x52, 0x6e, 0x85,
	0x8c, 0xcb, 0x97, 0x86, 0xa2, 0x20, 0xe8, 0x06, 0x84, 0x2d, 0x58, 0x25, 0xce, 0x88, 0x04, 0x2d,
	0xe7, 0x7f, 0x57, 0x13, 0x49, 0xaf, 0xba, 0xce, 0x88, 0x60, 0x85, 0xac, 0x7d, 0x63, 0x40, 0x3e,
	0x34, 0xa2, 0x5d, 0x48, 0x71, 0xaa, 0x9b, 0xe6, 0x32, 0xd7, 0x4a, 0x71, 0x8a, 0x3e, 0x81, 0x8c,
	0xa8, 0xd8, 0xba, 0x69, 0x2e, 0x83, 0x96, 0xb8, 0xbd, 0xfc, 0xeb, 0xac, 0xde, 0x79, 0xbb, 0x26,
	0x5f, 0xea, 0xc3, 0x3f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x4f, 0x53, 0x0d, 0x71, 0x78, 0x10, 0x00,
	0x00,
}
