// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import config "github.com/prometheus/alertmanager/config"
import mock "github.com/stretchr/testify/mock"
import receivers "magma/orc8r/cloud/go/services/metricsd/prometheus/alerting/receivers"

// AlertmanagerClient is an autogenerated mock type for the AlertmanagerClient type
type AlertmanagerClient struct {
	mock.Mock
}

// CreateReceiver provides a mock function with given fields: rec, networkID
func (_m *AlertmanagerClient) CreateReceiver(rec receivers.Receiver, networkID string) error {
	ret := _m.Called(rec, networkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(receivers.Receiver, string) error); ok {
		r0 = rf(rec, networkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteReceiver provides a mock function with given fields: receiverName, networkID
func (_m *AlertmanagerClient) DeleteReceiver(receiverName string, networkID string) error {
	ret := _m.Called(receiverName, networkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string) error); ok {
		r0 = rf(receiverName, networkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetReceivers provides a mock function with given fields: networkID
func (_m *AlertmanagerClient) GetReceivers(networkID string) ([]receivers.Receiver, error) {
	ret := _m.Called(networkID)

	var r0 []receivers.Receiver
	if rf, ok := ret.Get(0).(func(string) []receivers.Receiver); ok {
		r0 = rf(networkID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]receivers.Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(networkID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetRoute provides a mock function with given fields: networkID
func (_m *AlertmanagerClient) GetRoute(networkID string) (*config.Route, error) {
	ret := _m.Called(networkID)

	var r0 *config.Route
	if rf, ok := ret.Get(0).(func(string) *config.Route); ok {
		r0 = rf(networkID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*config.Route)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(networkID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ModifyNetworkRoute provides a mock function with given fields: route, networkID
func (_m *AlertmanagerClient) ModifyNetworkRoute(route *config.Route, networkID string) error {
	ret := _m.Called(route, networkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(*config.Route, string) error); ok {
		r0 = rf(route, networkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateReceiver provides a mock function with given fields: newRec, networkID
func (_m *AlertmanagerClient) UpdateReceiver(newRec *receivers.Receiver, networkID string) error {
	ret := _m.Called(newRec, networkID)

	var r0 error
	if rf, ok := ret.Get(0).(func(*receivers.Receiver, string) error); ok {
		r0 = rf(newRec, networkID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
