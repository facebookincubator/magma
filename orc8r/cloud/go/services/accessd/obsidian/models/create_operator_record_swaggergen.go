// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateOperatorRecord Operator Create Request
// swagger:model create_operator_record
type CreateOperatorRecord struct {

	// csr
	// Required: true
	Csr *CsrType `json:"csr"`

	// entities
	Entities ACLType `json:"entities,omitempty"`

	// operator
	// Required: true
	Operator OperatorID `json:"operator"`
}

// Validate validates this create operator record
func (m *CreateOperatorRecord) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCsr(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEntities(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOperator(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CreateOperatorRecord) validateCsr(formats strfmt.Registry) error {

	if err := validate.Required("csr", "body", m.Csr); err != nil {
		return err
	}

	if m.Csr != nil {
		if err := m.Csr.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("csr")
			}
			return err
		}
	}

	return nil
}

func (m *CreateOperatorRecord) validateEntities(formats strfmt.Registry) error {

	if swag.IsZero(m.Entities) { // not required
		return nil
	}

	if err := m.Entities.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("entities")
		}
		return err
	}

	return nil
}

func (m *CreateOperatorRecord) validateOperator(formats strfmt.Registry) error {

	if err := m.Operator.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("operator")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CreateOperatorRecord) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CreateOperatorRecord) UnmarshalBinary(b []byte) error {
	var res CreateOperatorRecord
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
