// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	google_golang_orggrpc "google.golang.org/grpc"

	grpc "github.com/facebookincubator/prometheus-edge-hub/grpc"

	mock "github.com/stretchr/testify/mock"
)

// EdgeHubClient is an autogenerated mock type for the EdgeHubClient type
type EdgeHubClient struct {
	mock.Mock
}

// Collect provides a mock function with given fields: ctx, in, opts
func (_m *EdgeHubClient) Collect(ctx context.Context, in *grpc.MetricFamilies, opts ...google_golang_orggrpc.CallOption) (*grpc.Void, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *grpc.Void
	if rf, ok := ret.Get(0).(func(context.Context, *grpc.MetricFamilies, ...google_golang_orggrpc.CallOption) *grpc.Void); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*grpc.Void)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *grpc.MetricFamilies, ...google_golang_orggrpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
