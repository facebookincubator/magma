// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/metricsd.proto

package protos // import "magma/orc8r/cloud/go/protos"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _go "github.com/prometheus/client_model/go"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// For each metric name tracked, we use an enum
type MetricName int32

const (
	// Prometheus metrics
	MetricName_process_start_time_seconds    MetricName = 0
	MetricName_process_virtual_memory_bytes  MetricName = 1
	MetricName_process_resident_memory_bytes MetricName = 2
	MetricName_process_cpu_seconds_total     MetricName = 3
	MetricName_process_open_fds              MetricName = 4
	MetricName_process_max_fds               MetricName = 5
	// subscriberdb metrics
	MetricName_s6a_auth_success               MetricName = 6
	MetricName_s6a_auth_failure               MetricName = 7
	MetricName_s6a_location_update            MetricName = 8
	MetricName_diameter_capabilities_exchange MetricName = 9
	MetricName_diameter_watchdog              MetricName = 10
	MetricName_diameter_disconnect            MetricName = 11
	// More prometheus metrics
	MetricName_python_info MetricName = 50
	// Metricsd metrics
	MetricName_service_metrics_collected MetricName = 60
	MetricName_process_uptime_seconds    MetricName = 61
	// mobilityd metrics
	MetricName_ip_address_allocated  MetricName = 100
	MetricName_ip_address_released   MetricName = 101
	MetricName_ip_already_allocated  MetricName = 102
	MetricName_ip_allocation_failure MetricName = 103
	// enodebd metrics
	MetricName_enodeb_mgmt_connected                               MetricName = 200
	MetricName_enodeb_opstate_enabled                              MetricName = 201
	MetricName_enodeb_rf_tx_enabled                                MetricName = 202
	MetricName_enodeb_gps_connected                                MetricName = 203
	MetricName_enodeb_ptp_connected                                MetricName = 204
	MetricName_enodeb_mme_connected                                MetricName = 205
	MetricName_rrc_estab_attempts                                  MetricName = 206
	MetricName_rrc_estab_successes                                 MetricName = 207
	MetricName_pdcp_user_plane_bytes_ul                            MetricName = 208
	MetricName_pdcp_user_plane_bytes_dl                            MetricName = 209
	MetricName_rrc_reestab_attempts                                MetricName = 210
	MetricName_rrc_reestab_attempts_reconf_fail                    MetricName = 211
	MetricName_rrc_reestab_attempts_ho_fail                        MetricName = 212
	MetricName_rrc_reestab_attempts_other                          MetricName = 213
	MetricName_rrc_reestab_successes                               MetricName = 214
	MetricName_erab_estab_attempts                                 MetricName = 215
	MetricName_erab_estab_successes                                MetricName = 216
	MetricName_erab_estab_failures                                 MetricName = 217
	MetricName_erab_release_requests                               MetricName = 218
	MetricName_erab_release_requests_user_inactivity               MetricName = 219
	MetricName_erab_release_requests_normal                        MetricName = 220
	MetricName_erab_release_requests_radio_resources_not_available MetricName = 221
	MetricName_erab_release_requests_reduce_load                   MetricName = 222
	MetricName_erab_release_requests_fail_in_radio_proc            MetricName = 223
	MetricName_erab_release_requests_eutran_reas                   MetricName = 224
	MetricName_erab_release_requests_radio_radio_conn_lost         MetricName = 225
	MetricName_erab_release_requests_oam_intervention              MetricName = 226
	MetricName_enodeb_mgmt_configured                              MetricName = 227
	MetricName_enodeb_reboot_timer_active                          MetricName = 228
	MetricName_enodeb_reboots                                      MetricName = 229
	// Magmad metrics
	MetricName_magmad_ping_rtt_ms          MetricName = 300
	MetricName_cpu_percent                 MetricName = 301
	MetricName_swap_memory_percent         MetricName = 302
	MetricName_virtual_memory_percent      MetricName = 303
	MetricName_disk_percent                MetricName = 304
	MetricName_bytes_sent                  MetricName = 305
	MetricName_bytes_received              MetricName = 306
	MetricName_temperature                 MetricName = 307
	MetricName_checkin_status              MetricName = 308
	MetricName_streamer_responses          MetricName = 309
	MetricName_mem_total                   MetricName = 310
	MetricName_mem_available               MetricName = 311
	MetricName_mem_used                    MetricName = 312
	MetricName_mem_free                    MetricName = 313
	MetricName_bootstrap_exception         MetricName = 314
	MetricName_upgrader2_time_taken        MetricName = 315
	MetricName_upgrader2_error             MetricName = 316
	MetricName_upgrader2_prepared          MetricName = 317
	MetricName_upgrader2_downloaded        MetricName = 318
	MetricName_upgrader2_canary            MetricName = 319
	MetricName_upgrader2_stable            MetricName = 320
	MetricName_upgrader2_idle              MetricName = 321
	MetricName_unexpected_service_restarts MetricName = 322
	MetricName_unattended_upgrade_status   MetricName = 323
	// Pipelined metrics
	MetricName_dp_send_msg_error                   MetricName = 350
	MetricName_arp_default_gw_mac_error            MetricName = 351
	MetricName_openflow_error_msg                  MetricName = 352
	MetricName_unknown_pkt_direction               MetricName = 353
	MetricName_network_iface_status                MetricName = 354
	MetricName_enforcement_rule_install_fail       MetricName = 355
	MetricName_enforcement_stats_rule_install_fail MetricName = 356
	// /////////////////////////////
	// GATEWAY FAILURES & ALERTS //
	// /////////////////////////////
	MetricName_mme_restarted     MetricName = 400
	MetricName_s1_reset_from_enb MetricName = 401
	// SCTP
	MetricName_sctp_reset    MetricName = 410
	MetricName_sctp_shutdown MetricName = 411
	// s6a
	MetricName_s6a_subscriberdb_connection_failure  MetricName = 420
	MetricName_s6a_auth_info_response_timer_expired MetricName = 421
	// UE attach, Serivce Request
	MetricName_duplicate_attach_request                    MetricName = 430
	MetricName_initial_context_setup_failure_received      MetricName = 431
	MetricName_initial_context_setup_request_timer_expired MetricName = 432
	MetricName_nas_attach_accept_timer_expired             MetricName = 433
	MetricName_nas_auth_rsp_timer_expired                  MetricName = 434
	MetricName_nas_security_mode_command_timer_expired     MetricName = 435
	MetricName_security_mode_reject_received               MetricName = 436
	MetricName_authentication_failure                      MetricName = 437
	MetricName_mme_spgw_create_session_req                 MetricName = 438
	MetricName_mme_spgw_create_session_rsp                 MetricName = 439
	MetricName_mme_spgw_delete_session_req                 MetricName = 440
	MetricName_mme_spgw_delete_session_rsp                 MetricName = 441
	// UE S1AP context
	MetricName_ue_context_release_request               MetricName = 450
	MetricName_ue_context_release_command_timer_expired MetricName = 451
	// Detach
	MetricName_implicit_detach_timer_expired MetricName = 452
	// eNB SCTP shutdown context clean up time
	MetricName_enb_sctp_shutdown_ue_clean_up_timer_expired MetricName = 453
	// Other errors
	MetricName_s1ap_error_ind_received              MetricName = 480
	MetricName_gtpu_error_ind_received              MetricName = 481
	MetricName_nas_non_delivery_indication_received MetricName = 482
	MetricName_emm_status_received                  MetricName = 483
	MetricName_emm_status_sent                      MetricName = 484
	// //////////////////////
	// GATEWAY PROCEDURES //
	// //////////////////////
	MetricName_mme_new_association MetricName = 500
	MetricName_ue_attach           MetricName = 501
	MetricName_service_request     MetricName = 502
	MetricName_ue_detach           MetricName = 503
	// deregister_ue,implicit_detach,
	// ue_initiated
	MetricName_spgw_create_session  MetricName = 504
	MetricName_spgw_delete_session  MetricName = 505
	MetricName_ue_pdn_connection    MetricName = 506
	MetricName_tracking_area_update MetricName = 507
	MetricName_s1_setup             MetricName = 508
	// Generic service metrics
	MetricName_service_errors MetricName = 550
)

var MetricName_name = map[int32]string{
	0:   "process_start_time_seconds",
	1:   "process_virtual_memory_bytes",
	2:   "process_resident_memory_bytes",
	3:   "process_cpu_seconds_total",
	4:   "process_open_fds",
	5:   "process_max_fds",
	6:   "s6a_auth_success",
	7:   "s6a_auth_failure",
	8:   "s6a_location_update",
	9:   "diameter_capabilities_exchange",
	10:  "diameter_watchdog",
	11:  "diameter_disconnect",
	50:  "python_info",
	60:  "service_metrics_collected",
	61:  "process_uptime_seconds",
	100: "ip_address_allocated",
	101: "ip_address_released",
	102: "ip_already_allocated",
	103: "ip_allocation_failure",
	200: "enodeb_mgmt_connected",
	201: "enodeb_opstate_enabled",
	202: "enodeb_rf_tx_enabled",
	203: "enodeb_gps_connected",
	204: "enodeb_ptp_connected",
	205: "enodeb_mme_connected",
	206: "rrc_estab_attempts",
	207: "rrc_estab_successes",
	208: "pdcp_user_plane_bytes_ul",
	209: "pdcp_user_plane_bytes_dl",
	210: "rrc_reestab_attempts",
	211: "rrc_reestab_attempts_reconf_fail",
	212: "rrc_reestab_attempts_ho_fail",
	213: "rrc_reestab_attempts_other",
	214: "rrc_reestab_successes",
	215: "erab_estab_attempts",
	216: "erab_estab_successes",
	217: "erab_estab_failures",
	218: "erab_release_requests",
	219: "erab_release_requests_user_inactivity",
	220: "erab_release_requests_normal",
	221: "erab_release_requests_radio_resources_not_available",
	222: "erab_release_requests_reduce_load",
	223: "erab_release_requests_fail_in_radio_proc",
	224: "erab_release_requests_eutran_reas",
	225: "erab_release_requests_radio_radio_conn_lost",
	226: "erab_release_requests_oam_intervention",
	227: "enodeb_mgmt_configured",
	228: "enodeb_reboot_timer_active",
	229: "enodeb_reboots",
	300: "magmad_ping_rtt_ms",
	301: "cpu_percent",
	302: "swap_memory_percent",
	303: "virtual_memory_percent",
	304: "disk_percent",
	305: "bytes_sent",
	306: "bytes_received",
	307: "temperature",
	308: "checkin_status",
	309: "streamer_responses",
	310: "mem_total",
	311: "mem_available",
	312: "mem_used",
	313: "mem_free",
	314: "bootstrap_exception",
	315: "upgrader2_time_taken",
	316: "upgrader2_error",
	317: "upgrader2_prepared",
	318: "upgrader2_downloaded",
	319: "upgrader2_canary",
	320: "upgrader2_stable",
	321: "upgrader2_idle",
	322: "unexpected_service_restarts",
	323: "unattended_upgrade_status",
	350: "dp_send_msg_error",
	351: "arp_default_gw_mac_error",
	352: "openflow_error_msg",
	353: "unknown_pkt_direction",
	354: "network_iface_status",
	355: "enforcement_rule_install_fail",
	356: "enforcement_stats_rule_install_fail",
	400: "mme_restarted",
	401: "s1_reset_from_enb",
	410: "sctp_reset",
	411: "sctp_shutdown",
	420: "s6a_subscriberdb_connection_failure",
	421: "s6a_auth_info_response_timer_expired",
	430: "duplicate_attach_request",
	431: "initial_context_setup_failure_received",
	432: "initial_context_setup_request_timer_expired",
	433: "nas_attach_accept_timer_expired",
	434: "nas_auth_rsp_timer_expired",
	435: "nas_security_mode_command_timer_expired",
	436: "security_mode_reject_received",
	437: "authentication_failure",
	438: "mme_spgw_create_session_req",
	439: "mme_spgw_create_session_rsp",
	440: "mme_spgw_delete_session_req",
	441: "mme_spgw_delete_session_rsp",
	450: "ue_context_release_request",
	451: "ue_context_release_command_timer_expired",
	452: "implicit_detach_timer_expired",
	453: "enb_sctp_shutdown_ue_clean_up_timer_expired",
	480: "s1ap_error_ind_received",
	481: "gtpu_error_ind_received",
	482: "nas_non_delivery_indication_received",
	483: "emm_status_received",
	484: "emm_status_sent",
	500: "mme_new_association",
	501: "ue_attach",
	502: "service_request",
	503: "ue_detach",
	504: "spgw_create_session",
	505: "spgw_delete_session",
	506: "ue_pdn_connection",
	507: "tracking_area_update",
	508: "s1_setup",
	550: "service_errors",
}
var MetricName_value = map[string]int32{
	"process_start_time_seconds":                          0,
	"process_virtual_memory_bytes":                        1,
	"process_resident_memory_bytes":                       2,
	"process_cpu_seconds_total":                           3,
	"process_open_fds":                                    4,
	"process_max_fds":                                     5,
	"s6a_auth_success":                                    6,
	"s6a_auth_failure":                                    7,
	"s6a_location_update":                                 8,
	"diameter_capabilities_exchange":                      9,
	"diameter_watchdog":                                   10,
	"diameter_disconnect":                                 11,
	"python_info":                                         50,
	"service_metrics_collected":                           60,
	"process_uptime_seconds":                              61,
	"ip_address_allocated":                                100,
	"ip_address_released":                                 101,
	"ip_already_allocated":                                102,
	"ip_allocation_failure":                               103,
	"enodeb_mgmt_connected":                               200,
	"enodeb_opstate_enabled":                              201,
	"enodeb_rf_tx_enabled":                                202,
	"enodeb_gps_connected":                                203,
	"enodeb_ptp_connected":                                204,
	"enodeb_mme_connected":                                205,
	"rrc_estab_attempts":                                  206,
	"rrc_estab_successes":                                 207,
	"pdcp_user_plane_bytes_ul":                            208,
	"pdcp_user_plane_bytes_dl":                            209,
	"rrc_reestab_attempts":                                210,
	"rrc_reestab_attempts_reconf_fail":                    211,
	"rrc_reestab_attempts_ho_fail":                        212,
	"rrc_reestab_attempts_other":                          213,
	"rrc_reestab_successes":                               214,
	"erab_estab_attempts":                                 215,
	"erab_estab_successes":                                216,
	"erab_estab_failures":                                 217,
	"erab_release_requests":                               218,
	"erab_release_requests_user_inactivity":               219,
	"erab_release_requests_normal":                        220,
	"erab_release_requests_radio_resources_not_available": 221,
	"erab_release_requests_reduce_load":                   222,
	"erab_release_requests_fail_in_radio_proc":            223,
	"erab_release_requests_eutran_reas":                   224,
	"erab_release_requests_radio_radio_conn_lost":         225,
	"erab_release_requests_oam_intervention":              226,
	"enodeb_mgmt_configured":                              227,
	"enodeb_reboot_timer_active":                          228,
	"enodeb_reboots":                                      229,
	"magmad_ping_rtt_ms":                                  300,
	"cpu_percent":                                         301,
	"swap_memory_percent":                                 302,
	"virtual_memory_percent":                              303,
	"disk_percent":                                        304,
	"bytes_sent":                                          305,
	"bytes_received":                                      306,
	"temperature":                                         307,
	"checkin_status":                                      308,
	"streamer_responses":                                  309,
	"mem_total":                                           310,
	"mem_available":                                       311,
	"mem_used":                                            312,
	"mem_free":                                            313,
	"bootstrap_exception":                                 314,
	"upgrader2_time_taken":                                315,
	"upgrader2_error":                                     316,
	"upgrader2_prepared":                                  317,
	"upgrader2_downloaded":                                318,
	"upgrader2_canary":                                    319,
	"upgrader2_stable":                                    320,
	"upgrader2_idle":                                      321,
	"unexpected_service_restarts":                         322,
	"unattended_upgrade_status":                           323,
	"dp_send_msg_error":                                   350,
	"arp_default_gw_mac_error":                            351,
	"openflow_error_msg":                                  352,
	"unknown_pkt_direction":                               353,
	"network_iface_status":                                354,
	"enforcement_rule_install_fail":                       355,
	"enforcement_stats_rule_install_fail":                 356,
	"mme_restarted":                                       400,
	"s1_reset_from_enb":                                   401,
	"sctp_reset":                                          410,
	"sctp_shutdown":                                       411,
	"s6a_subscriberdb_connection_failure":                 420,
	"s6a_auth_info_response_timer_expired":                421,
	"duplicate_attach_request":                            430,
	"initial_context_setup_failure_received":              431,
	"initial_context_setup_request_timer_expired":         432,
	"nas_attach_accept_timer_expired":                     433,
	"nas_auth_rsp_timer_expired":                          434,
	"nas_security_mode_command_timer_expired":             435,
	"security_mode_reject_received":                       436,
	"authentication_failure":                              437,
	"mme_spgw_create_session_req":                         438,
	"mme_spgw_create_session_rsp":                         439,
	"mme_spgw_delete_session_req":                         440,
	"mme_spgw_delete_session_rsp":                         441,
	"ue_context_release_request":                          450,
	"ue_context_release_command_timer_expired":            451,
	"implicit_detach_timer_expired":                       452,
	"enb_sctp_shutdown_ue_clean_up_timer_expired":         453,
	"s1ap_error_ind_received":                             480,
	"gtpu_error_ind_received":                             481,
	"nas_non_delivery_indication_received":                482,
	"emm_status_received":                                 483,
	"emm_status_sent":                                     484,
	"mme_new_association":                                 500,
	"ue_attach":                                           501,
	"service_request":                                     502,
	"ue_detach":                                           503,
	"spgw_create_session":                                 504,
	"spgw_delete_session":                                 505,
	"ue_pdn_connection":                                   506,
	"tracking_area_update":                                507,
	"s1_setup":                                            508,
	"service_errors":                                      550,
}

func (x MetricName) String() string {
	return proto.EnumName(MetricName_name, int32(x))
}
func (MetricName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metricsd_597f8749d0c67303, []int{0}
}

// Possible labels, used as metric_name{label_name=label_value}
type MetricLabelName int32

const (
	MetricLabelName_result         MetricLabelName = 0
	MetricLabelName_cause          MetricLabelName = 1
	MetricLabelName_tau_type       MetricLabelName = 2
	MetricLabelName_pdn_type       MetricLabelName = 3
	MetricLabelName_action         MetricLabelName = 4
	MetricLabelName_host           MetricLabelName = 5
	MetricLabelName_metric         MetricLabelName = 6
	MetricLabelName_patchlevel     MetricLabelName = 7
	MetricLabelName_minor          MetricLabelName = 8
	MetricLabelName_major          MetricLabelName = 9
	MetricLabelName_version        MetricLabelName = 10
	MetricLabelName_implementation MetricLabelName = 11
	MetricLabelName_sensor         MetricLabelName = 12
	MetricLabelName_error_code     MetricLabelName = 13
	MetricLabelName_error_type     MetricLabelName = 14
	MetricLabelName_iface_name     MetricLabelName = 15
	MetricLabelName_service_name   MetricLabelName = 16
	MetricLabelName_rule_id        MetricLabelName = 17
	MetricLabelName_imsi           MetricLabelName = 18
)

var MetricLabelName_name = map[int32]string{
	0:  "result",
	1:  "cause",
	2:  "tau_type",
	3:  "pdn_type",
	4:  "action",
	5:  "host",
	6:  "metric",
	7:  "patchlevel",
	8:  "minor",
	9:  "major",
	10: "version",
	11: "implementation",
	12: "sensor",
	13: "error_code",
	14: "error_type",
	15: "iface_name",
	16: "service_name",
	17: "rule_id",
	18: "imsi",
}
var MetricLabelName_value = map[string]int32{
	"result":         0,
	"cause":          1,
	"tau_type":       2,
	"pdn_type":       3,
	"action":         4,
	"host":           5,
	"metric":         6,
	"patchlevel":     7,
	"minor":          8,
	"major":          9,
	"version":        10,
	"implementation": 11,
	"sensor":         12,
	"error_code":     13,
	"error_type":     14,
	"iface_name":     15,
	"service_name":   16,
	"rule_id":        17,
	"imsi":           18,
}

func (x MetricLabelName) String() string {
	return proto.EnumName(MetricLabelName_name, int32(x))
}
func (MetricLabelName) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metricsd_597f8749d0c67303, []int{1}
}

type MetricsContainer struct {
	GatewayId string `protobuf:"bytes,1,opt,name=gatewayId,proto3" json:"gatewayId,omitempty"`
	// TODO: we should strip this out of metricsd (or duplicate it ourselves)
	// Prometheus 2 no longer supports protobuf client model
	Family               []*_go.MetricFamily `protobuf:"bytes,2,rep,name=family,proto3" json:"family,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *MetricsContainer) Reset()         { *m = MetricsContainer{} }
func (m *MetricsContainer) String() string { return proto.CompactTextString(m) }
func (*MetricsContainer) ProtoMessage()    {}
func (*MetricsContainer) Descriptor() ([]byte, []int) {
	return fileDescriptor_metricsd_597f8749d0c67303, []int{0}
}
func (m *MetricsContainer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsContainer.Unmarshal(m, b)
}
func (m *MetricsContainer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsContainer.Marshal(b, m, deterministic)
}
func (dst *MetricsContainer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsContainer.Merge(dst, src)
}
func (m *MetricsContainer) XXX_Size() int {
	return xxx_messageInfo_MetricsContainer.Size(m)
}
func (m *MetricsContainer) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsContainer.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsContainer proto.InternalMessageInfo

func (m *MetricsContainer) GetGatewayId() string {
	if m != nil {
		return m.GatewayId
	}
	return ""
}

func (m *MetricsContainer) GetFamily() []*_go.MetricFamily {
	if m != nil {
		return m.Family
	}
	return nil
}

func init() {
	proto.RegisterType((*MetricsContainer)(nil), "magma.orc8r.MetricsContainer")
	proto.RegisterEnum("magma.orc8r.MetricName", MetricName_name, MetricName_value)
	proto.RegisterEnum("magma.orc8r.MetricLabelName", MetricLabelName_name, MetricLabelName_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetricsControllerClient is the client API for MetricsController service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricsControllerClient interface {
	// Report a collection of metrics from a service
	Collect(ctx context.Context, in *MetricsContainer, opts ...grpc.CallOption) (*Void, error)
}

type metricsControllerClient struct {
	cc *grpc.ClientConn
}

func NewMetricsControllerClient(cc *grpc.ClientConn) MetricsControllerClient {
	return &metricsControllerClient{cc}
}

func (c *metricsControllerClient) Collect(ctx context.Context, in *MetricsContainer, opts ...grpc.CallOption) (*Void, error) {
	out := new(Void)
	err := c.cc.Invoke(ctx, "/magma.orc8r.MetricsController/Collect", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MetricsControllerServer is the server API for MetricsController service.
type MetricsControllerServer interface {
	// Report a collection of metrics from a service
	Collect(context.Context, *MetricsContainer) (*Void, error)
}

func RegisterMetricsControllerServer(s *grpc.Server, srv MetricsControllerServer) {
	s.RegisterService(&_MetricsController_serviceDesc, srv)
}

func _MetricsController_Collect_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetricsContainer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MetricsControllerServer).Collect(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.orc8r.MetricsController/Collect",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MetricsControllerServer).Collect(ctx, req.(*MetricsContainer))
	}
	return interceptor(ctx, in, info, handler)
}

var _MetricsController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.orc8r.MetricsController",
	HandlerType: (*MetricsControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Collect",
			Handler:    _MetricsController_Collect_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "orc8r/protos/metricsd.proto",
}

func init() {
	proto.RegisterFile("orc8r/protos/metricsd.proto", fileDescriptor_metricsd_597f8749d0c67303)
}

var fileDescriptor_metricsd_597f8749d0c67303 = []byte{
	// 1899 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x57, 0x49, 0x93, 0x5d, 0x37,
	0x15, 0xf6, 0xbb, 0xd7, 0x53, 0xab, 0x6d, 0xf7, 0x69, 0x79, 0x6a, 0xb7, 0xdd, 0x8e, 0x63, 0x92,
	0x60, 0x1c, 0x68, 0x63, 0xa7, 0x8a, 0x4a, 0x51, 0x64, 0x43, 0xaa, 0xa8, 0xa2, 0x0a, 0x58, 0x78,
	0xc1, 0x82, 0x8d, 0x4a, 0x4f, 0x3a, 0xef, 0xb5, 0xd2, 0xf7, 0x4a, 0x8a, 0xa4, 0xdb, 0xc3, 0xbf,
	0x00, 0x96, 0xb0, 0x05, 0x56, 0x90, 0x79, 0x64, 0x26, 0x81, 0x2a, 0xe6, 0x39, 0xcc, 0x24, 0x9e,
	0xf8, 0x07, 0xcc, 0xb0, 0xa0, 0x8e, 0xee, 0xbb, 0x6f, 0xaa, 0x87, 0x37, 0xdd, 0xef, 0x9e, 0xef,
	0xd3, 0x91, 0xce, 0x2c, 0xb1, 0xf3, 0x2e, 0xa8, 0xc7, 0xc3, 0x35, 0x1f, 0x5c, 0x72, 0xf1, 0x5a,
	0x8d, 0x29, 0x18, 0x15, 0xf5, 0x66, 0xfe, 0xe6, 0xcb, 0xb5, 0x1c, 0xd6, 0x72, 0x33, 0x53, 0xd6,
	0xcf, 0xcd, 0x30, 0x95, 0xab, 0x6b, 0x67, 0x5b, 0xde, 0xfa, 0xf1, 0xd1, 0xba, 0xf6, 0xf3, 0x72,
	0xc5, 0xe0, 0xe3, 0xad, 0xe0, 0x49, 0x67, 0x93, 0x34, 0x16, 0x03, 0xbf, 0xc0, 0x96, 0x86, 0x32,
	0xe1, 0xae, 0xdc, 0xff, 0xa8, 0x5e, 0xeb, 0x5d, 0xea, 0x5d, 0x59, 0xba, 0x39, 0x11, 0xf0, 0x0f,
	0xb2, 0xc3, 0x03, 0x59, 0x9b, 0x6a, 0x7f, 0xad, 0xb8, 0x54, 0x5e, 0x59, 0xbe, 0x71, 0x79, 0xd3,
	0x38, 0x52, 0x56, 0x63, 0xda, 0xc2, 0x26, 0x6e, 0xaa, 0xca, 0xa0, 0x4d, 0x9b, 0xad, 0xd6, 0x8f,
	0x64, 0xe6, 0xcd, 0xd1, 0x8a, 0xab, 0x6f, 0xad, 0x33, 0xd6, 0x02, 0x9f, 0x90, 0x35, 0xf2, 0x8b,
	0x6c, 0xdd, 0x07, 0xa7, 0x30, 0x46, 0x11, 0x93, 0x0c, 0x49, 0x24, 0x53, 0xa3, 0x88, 0xa8, 0x9c,
	0xd5, 0x11, 0x0e, 0xf0, 0x4b, 0xec, 0x42, 0x87, 0xef, 0x98, 0x90, 0x1a, 0x59, 0x89, 0x1a, 0x6b,
	0x17, 0xf6, 0x45, 0x7f, 0x3f, 0x61, 0x84, 0x1e, 0x7f, 0x90, 0x6d, 0x74, 0x8c, 0x80, 0xd1, 0x68,
	0xb4, 0x69, 0x96, 0x52, 0xf0, 0x0d, 0x76, 0xae, 0xa3, 0x28, 0xdf, 0x74, 0xda, 0x45, 0x72, 0x49,
	0x56, 0x50, 0xf2, 0x53, 0x0c, 0x3a, 0xd8, 0x79, 0xb4, 0x62, 0xa0, 0x23, 0x1c, 0xe4, 0x27, 0xd9,
	0x4a, 0x27, 0xad, 0xe5, 0x5e, 0x16, 0x1e, 0x22, 0x6a, 0xfc, 0x80, 0x14, 0xb2, 0x49, 0x5b, 0x22,
	0x36, 0x8a, 0x50, 0x38, 0x3c, 0x23, 0x1d, 0x48, 0x53, 0x35, 0x01, 0xe1, 0x08, 0x3f, 0xcb, 0x4e,
	0x92, 0xb4, 0x72, 0x4a, 0x26, 0xe3, 0xac, 0x68, 0xbc, 0x96, 0x09, 0xe1, 0x28, 0xbf, 0xcc, 0x2e,
	0x6a, 0x23, 0x6b, 0x4c, 0x18, 0x84, 0x92, 0x5e, 0xf6, 0x4d, 0x65, 0x92, 0xc1, 0x28, 0x70, 0x4f,
	0x6d, 0x49, 0x3b, 0x44, 0x58, 0xe2, 0xa7, 0xd9, 0xea, 0x98, 0xb3, 0x2b, 0x93, 0xda, 0xd2, 0x6e,
	0x08, 0x8c, 0x74, 0x8e, 0xc5, 0xda, 0x44, 0xe5, 0xac, 0x45, 0x95, 0x60, 0x99, 0xaf, 0xb0, 0x65,
	0xbf, 0x9f, 0xb6, 0x9c, 0x15, 0xc6, 0x0e, 0x1c, 0xdc, 0x20, 0x9b, 0x23, 0x86, 0x1d, 0xa3, 0x50,
	0x8c, 0xc2, 0x2d, 0x94, 0xab, 0x2a, 0x54, 0x09, 0x35, 0x7c, 0x88, 0xaf, 0xb3, 0x33, 0x9d, 0x75,
	0x8d, 0x9f, 0xf1, 0xf9, 0x13, 0x7c, 0x8d, 0x9d, 0x32, 0x5e, 0x48, 0xad, 0x03, 0xc1, 0xb2, 0xca,
	0x16, 0xa0, 0x06, 0x4d, 0xdb, 0x4f, 0x21, 0x01, 0x2b, 0x94, 0x11, 0x35, 0x60, 0xb7, 0xa4, 0x0a,
	0x28, 0xf5, 0xfe, 0xd4, 0x92, 0x01, 0x3f, 0xc7, 0x4e, 0x67, 0x64, 0xec, 0x86, 0xce, 0x41, 0x43,
	0xbe, 0xce, 0x4e, 0xa3, 0x75, 0x1a, 0xfb, 0xa2, 0x1e, 0xd6, 0x49, 0x8c, 0x8c, 0x41, 0x0d, 0xdf,
	0xef, 0xf1, 0xf3, 0xec, 0xcc, 0x08, 0x73, 0x3e, 0x26, 0x99, 0x50, 0xa0, 0x95, 0xfd, 0x0a, 0x35,
	0xfc, 0xa0, 0xc7, 0xcf, 0xb1, 0x53, 0x23, 0x30, 0x0c, 0x44, 0xda, 0x1b, 0x43, 0x3f, 0x9c, 0x86,
	0x86, 0x3e, 0x4e, 0xa9, 0xfc, 0xd1, 0x34, 0xe4, 0x93, 0x9f, 0x82, 0x7e, 0x3c, 0x0d, 0xd5, 0x35,
	0x4e, 0x41, 0x3f, 0xe9, 0xf1, 0xb3, 0x8c, 0x87, 0xa0, 0x04, 0xc6, 0x24, 0xfb, 0x42, 0xa6, 0x84,
	0xb5, 0x4f, 0x11, 0x7e, 0xda, 0xe3, 0x6b, 0xec, 0xe4, 0x04, 0x18, 0xe5, 0x02, 0x46, 0xf8, 0x59,
	0x8f, 0x6f, 0xb0, 0x35, 0xaf, 0x95, 0x17, 0x4d, 0xc4, 0x20, 0x7c, 0x25, 0x2d, 0xb6, 0x99, 0x28,
	0x9a, 0x0a, 0x7e, 0x7e, 0x1f, 0x58, 0x57, 0xf0, 0x8b, 0x7c, 0x16, 0xd2, 0x1b, 0x70, 0x6e, 0xcb,
	0x5f, 0xf6, 0xf8, 0xc3, 0xec, 0xd2, 0x22, 0x48, 0x04, 0x0a, 0xdd, 0x20, 0x7b, 0x16, 0x7e, 0x45,
	0x15, 0x71, 0x61, 0x21, 0x6d, 0xcb, 0xb5, 0x94, 0x5f, 0xf7, 0xf8, 0x03, 0x6c, 0x7d, 0x21, 0xc5,
	0xa5, 0x2d, 0x0c, 0xf0, 0x56, 0x8f, 0x62, 0x33, 0x4d, 0x98, 0xd8, 0xf7, 0x9b, 0x6c, 0x39, 0x06,
	0xd9, 0x9f, 0xf7, 0xc9, 0x6f, 0x5b, 0x3f, 0x4e, 0x90, 0xc9, 0xa2, 0xdf, 0xcd, 0x2f, 0x1a, 0x25,
	0x41, 0x84, 0xdf, 0xe7, 0xad, 0x32, 0x32, 0x4a, 0x27, 0x11, 0xf0, 0xe9, 0x06, 0x63, 0x8a, 0xf0,
	0x87, 0x1e, 0xbf, 0xca, 0x1e, 0x5e, 0x88, 0xb5, 0xce, 0x33, 0x56, 0xaa, 0x64, 0x76, 0x4c, 0xda,
	0x87, 0x3f, 0x66, 0xb3, 0x17, 0x73, 0xad, 0x0b, 0xb5, 0xac, 0xe0, 0x4f, 0x3d, 0xfe, 0x38, 0x7b,
	0x6c, 0x31, 0x25, 0x48, 0x6d, 0x1c, 0xf5, 0x0f, 0xd7, 0x04, 0x85, 0xb4, 0x24, 0x09, 0xb9, 0x23,
	0x4d, 0x45, 0x89, 0x05, 0x7f, 0xee, 0xf1, 0x47, 0xd8, 0x83, 0xff, 0x67, 0x25, 0xea, 0x46, 0xa1,
	0xa8, 0x9c, 0xd4, 0xf0, 0x76, 0x8f, 0xbf, 0x8f, 0x5d, 0x59, 0xcc, 0x23, 0x8b, 0x85, 0xb1, 0xa3,
	0x9d, 0xa8, 0xf6, 0xe0, 0x9d, 0xfb, 0xa8, 0xc5, 0x26, 0x05, 0x69, 0x45, 0x40, 0x19, 0xe1, 0x56,
	0x8f, 0xbf, 0x9f, 0x3d, 0x7a, 0xdf, 0x83, 0xe7, 0xbf, 0x94, 0xb7, 0xa2, 0x72, 0x31, 0xc1, 0xed,
	0x1e, 0x7f, 0x94, 0x3d, 0xb2, 0x78, 0x85, 0x93, 0xb5, 0x30, 0x36, 0x61, 0xd8, 0x41, 0x4b, 0x05,
	0x09, 0x77, 0xa6, 0xab, 0xad, 0xab, 0xc4, 0x81, 0x19, 0x36, 0x01, 0x35, 0xdc, 0xcd, 0xb9, 0xd2,
	0x55, 0x1b, 0xf6, 0x9d, 0x6b, 0x5b, 0x74, 0x10, 0xd9, 0xf5, 0x08, 0xf7, 0x7a, 0xfc, 0x24, 0x3b,
	0x31, 0x43, 0x88, 0xf0, 0x97, 0x5c, 0x37, 0x79, 0x1c, 0x69, 0xe1, 0x8d, 0x1d, 0x8a, 0x90, 0x92,
	0xa8, 0x23, 0x7c, 0xb9, 0xe0, 0xc0, 0x96, 0xa9, 0x09, 0x7b, 0x0c, 0x0a, 0x6d, 0x82, 0xaf, 0x14,
	0x94, 0x1a, 0x71, 0x57, 0xfa, 0xae, 0x6b, 0x77, 0xc8, 0x33, 0x05, 0x9d, 0x6b, 0xae, 0xeb, 0x77,
	0xe0, 0xb3, 0x05, 0x5f, 0x65, 0xc7, 0xb4, 0x89, 0xdb, 0x63, 0xd1, 0x73, 0x05, 0x5f, 0x61, 0xac,
	0x2d, 0xa5, 0x48, 0x82, 0xe7, 0x0b, 0x3a, 0x5a, 0x2b, 0x08, 0xa8, 0xd0, 0xec, 0xa0, 0x86, 0x17,
	0xf2, 0x09, 0x28, 0x65, 0x31, 0xc8, 0x44, 0x8d, 0xe8, 0xc5, 0x4c, 0x53, 0x5b, 0xa8, 0xb6, 0x8d,
	0xa5, 0x29, 0x94, 0x9a, 0x08, 0x2f, 0x15, 0x64, 0x41, 0x4c, 0x01, 0x25, 0x19, 0x1b, 0x30, 0x7a,
	0x67, 0x29, 0x95, 0x5f, 0x2e, 0xf8, 0x09, 0xb6, 0x54, 0x63, 0x3d, 0x1a, 0x1f, 0xaf, 0x14, 0x9c,
	0xb3, 0xe3, 0xf4, 0x3d, 0xc9, 0x97, 0x57, 0x0b, 0x7e, 0x9c, 0x1d, 0x25, 0x59, 0x43, 0xed, 0xf1,
	0xb5, 0xf1, 0xe7, 0x20, 0x20, 0xc2, 0xeb, 0xd9, 0xe2, 0xec, 0xa8, 0x14, 0xa4, 0xa7, 0xae, 0x8f,
	0x3e, 0x47, 0xe2, 0xab, 0x05, 0x55, 0x50, 0xe3, 0x87, 0x41, 0x6a, 0x0c, 0x37, 0xda, 0x59, 0x98,
	0xe4, 0x36, 0x5a, 0xf8, 0x5a, 0xc1, 0x4f, 0xb1, 0x95, 0x09, 0x84, 0x21, 0xb8, 0x00, 0x5f, 0xcf,
	0xa7, 0x9c, 0x48, 0x7d, 0x40, 0x2f, 0x29, 0x6c, 0xdf, 0x98, 0xd3, 0xa4, 0xdd, 0xae, 0xa5, 0x14,
	0x45, 0x0d, 0xdf, 0x2c, 0xf8, 0x69, 0x06, 0x13, 0x48, 0x49, 0x2b, 0xc3, 0x3e, 0x7c, 0x6b, 0x4e,
	0x4c, 0x65, 0x5a, 0x21, 0x7c, 0x3b, 0x3b, 0x67, 0x22, 0x36, 0xba, 0x42, 0xf8, 0x4e, 0xc1, 0x2f,
	0xb1, 0xf3, 0x8d, 0xc5, 0x3d, 0x9f, 0xfb, 0xa4, 0xe8, 0x26, 0x4d, 0xc0, 0x3c, 0xc4, 0x23, 0xbc,
	0x51, 0xf0, 0x8b, 0xec, 0x5c, 0x63, 0xa9, 0x39, 0x58, 0x8d, 0x5a, 0x8c, 0x34, 0x74, 0xee, 0x7d,
	0xb3, 0xe0, 0x67, 0xd8, 0xaa, 0xf6, 0x14, 0x28, 0x2d, 0xea, 0x38, 0x1c, 0x19, 0xf4, 0x36, 0x0d,
	0xeb, 0x35, 0x19, 0xbc, 0xd0, 0x38, 0x90, 0x4d, 0x95, 0xc4, 0x70, 0x57, 0xd4, 0x52, 0x8d, 0xe0,
	0x77, 0xb2, 0xbd, 0x34, 0xa4, 0x07, 0x95, 0xdb, 0x6d, 0x85, 0xb4, 0x1a, 0x6e, 0x15, 0xd4, 0x46,
	0x1a, 0xbb, 0x6d, 0xdd, 0xae, 0x15, 0x7e, 0x3b, 0x09, 0x6d, 0x02, 0xaa, 0xec, 0xd5, 0xdb, 0xd9,
	0x17, 0x16, 0xd3, 0xae, 0x0b, 0xdb, 0xc2, 0x0c, 0xa4, 0x1a, 0x1f, 0xe3, 0x4e, 0xc1, 0x2f, 0xb3,
	0x0d, 0xb4, 0x03, 0x17, 0x14, 0xd6, 0x74, 0x73, 0x08, 0x4d, 0x85, 0xc2, 0xd8, 0x98, 0x64, 0x55,
	0xb5, 0xdd, 0xf2, 0x6e, 0xc1, 0xaf, 0xb0, 0x77, 0x4d, 0x73, 0x68, 0x71, 0x5c, 0xc0, 0xbc, 0xd7,
	0xa6, 0x42, 0x3d, 0xf6, 0x03, 0x6a, 0xf8, 0x74, 0x49, 0x86, 0xc6, 0xeb, 0x24, 0xc2, 0x24, 0x06,
	0xc1, 0xd5, 0x02, 0x6d, 0x1f, 0x3e, 0x53, 0x52, 0xb2, 0x46, 0x95, 0x7c, 0x8b, 0xc0, 0xe7, 0x4a,
	0x5a, 0x9c, 0x05, 0x71, 0xab, 0x49, 0x14, 0x30, 0xf8, 0x7c, 0x49, 0x5b, 0xd3, 0x25, 0x22, 0x36,
	0xfd, 0xa8, 0x82, 0xe9, 0x63, 0xd0, 0xfd, 0x6e, 0x3e, 0x4d, 0x0f, 0xd3, 0x2f, 0x94, 0xfc, 0x3d,
	0xec, 0xa1, 0xf1, 0x25, 0x84, 0xee, 0x00, 0xe3, 0x9c, 0x1d, 0xd5, 0x2b, 0xee, 0x79, 0x43, 0xa9,
	0xf1, 0xc5, 0x92, 0x5c, 0xac, 0x1b, 0x5f, 0x19, 0x9a, 0xd1, 0xd4, 0xbf, 0xa5, 0xda, 0xea, 0xfa,
	0x03, 0x3c, 0x53, 0x52, 0xeb, 0x30, 0xd6, 0x24, 0x23, 0x2b, 0xda, 0x2a, 0xe1, 0x5e, 0x12, 0x11,
	0x53, 0xe3, 0xbb, 0xdd, 0x26, 0xc5, 0xf4, 0x6c, 0x49, 0x9d, 0x69, 0x31, 0x79, 0xa4, 0x70, 0x6e,
	0xf7, 0xe7, 0x4a, 0xfe, 0x10, 0x7b, 0xc0, 0xca, 0xd8, 0xed, 0x2b, 0x15, 0x65, 0xff, 0x1c, 0xeb,
	0xf9, 0x92, 0xba, 0x4e, 0x66, 0x91, 0x39, 0x21, 0xfa, 0x39, 0xc2, 0x0b, 0x25, 0x7f, 0x2f, 0x7b,
	0x37, 0x11, 0x22, 0xaa, 0x26, 0x98, 0xb4, 0x2f, 0x6a, 0xa7, 0x69, 0x74, 0xd7, 0xb5, 0xb4, 0x7a,
	0x8e, 0xfd, 0x62, 0x49, 0x61, 0x9e, 0x65, 0x06, 0x7c, 0x0a, 0x55, 0x9a, 0x98, 0xf2, 0x52, 0x49,
	0xdd, 0x86, 0xb6, 0xa3, 0xb6, 0x38, 0x77, 0x57, 0x79, 0xb9, 0xa4, 0x84, 0xa7, 0xc8, 0x46, 0x3f,
	0xdc, 0x15, 0x2a, 0x20, 0x79, 0x2e, 0x62, 0x8c, 0xc4, 0x0a, 0xf8, 0x34, 0xbc, 0x72, 0x7f, 0x46,
	0xf4, 0xf0, 0xea, 0x2c, 0x43, 0x63, 0x85, 0x73, 0x3a, 0x5e, 0xbb, 0x3f, 0x23, 0x7a, 0x78, 0x3d,
	0xfb, 0xa5, 0xc1, 0xb1, 0xab, 0xe7, 0xba, 0x3b, 0xbc, 0x51, 0xd2, 0x04, 0x5a, 0x40, 0x58, 0xec,
	0x98, 0x37, 0xb3, 0x63, 0x4c, 0x4d, 0xb9, 0x60, 0x92, 0xd0, 0x98, 0x43, 0x32, 0xcb, 0xf9, 0x6e,
	0x8e, 0x31, 0xda, 0xbe, 0x98, 0x49, 0x4e, 0x41, 0x9b, 0x54, 0x28, 0xe9, 0x5e, 0x3b, 0xb7, 0xe2,
	0x7b, 0x25, 0xbf, 0xc0, 0xce, 0xc6, 0xeb, 0xd4, 0xdb, 0x72, 0x85, 0x1a, 0xab, 0x27, 0x8e, 0xbe,
	0x95, 0xd1, 0x61, 0xf2, 0xcd, 0x22, 0xf4, 0x76, 0x4e, 0x64, 0x0a, 0xac, 0x75, 0x96, 0x5c, 0x60,
	0x76, 0x30, 0xec, 0x13, 0xa7, 0x8b, 0xc9, 0x98, 0x7a, 0xa7, 0xcc, 0x97, 0x8a, 0xba, 0x1e, 0x55,
	0xf3, 0x04, 0xb9, 0x4b, 0x77, 0xfa, 0x95, 0x29, 0x24, 0x8f, 0x83, 0x7b, 0x99, 0x4f, 0xee, 0xb5,
	0xb8, 0x2b, 0x64, 0x8c, 0x4e, 0x99, 0xac, 0x12, 0xfe, 0x5a, 0x52, 0x4f, 0x6f, 0xba, 0x5a, 0x80,
	0xbf, 0xe5, 0xf5, 0x93, 0xa6, 0xd6, 0xfa, 0xf6, 0xef, 0x1d, 0xab, 0x75, 0x13, 0xfc, 0x23, 0xeb,
	0x5b, 0x10, 0x6e, 0xf8, 0xe7, 0x04, 0x99, 0x0d, 0x22, 0xfc, 0x2b, 0xb7, 0x83, 0x06, 0x85, 0xd7,
	0x76, 0xaa, 0x8e, 0xe1, 0xdf, 0x25, 0xf5, 0xa8, 0x14, 0x24, 0xcd, 0xa0, 0xa1, 0x90, 0x01, 0x65,
	0xf7, 0x5e, 0xf8, 0x4f, 0x49, 0xd3, 0x23, 0x5e, 0x6f, 0xcb, 0x0a, 0xfe, 0x5b, 0x52, 0x43, 0xee,
	0xce, 0x96, 0x3d, 0x18, 0xe1, 0x4b, 0x07, 0xaf, 0x7e, 0xb6, 0x60, 0x2b, 0xed, 0xbb, 0xea, 0x63,
	0xb2, 0x8f, 0x55, 0x7e, 0x5c, 0x31, 0x76, 0x38, 0x60, 0x6c, 0xaa, 0x04, 0x07, 0xf8, 0x12, 0x3b,
	0xa4, 0x64, 0x13, 0x11, 0x7a, 0xfc, 0x18, 0x3b, 0x9a, 0x64, 0x23, 0xd2, 0xbe, 0x47, 0x28, 0xe8,
	0x8b, 0x0e, 0x93, 0xbf, 0x4a, 0x5a, 0x22, 0xdb, 0x23, 0x1d, 0xe4, 0x47, 0xd9, 0xc1, 0x2d, 0xba,
	0x4d, 0x1c, 0x22, 0x69, 0xfb, 0x88, 0x80, 0xc3, 0xfc, 0x04, 0x63, 0x9e, 0x1e, 0x24, 0x15, 0xee,
	0x60, 0x05, 0x47, 0x48, 0x71, 0x6d, 0xac, 0x0b, 0x70, 0x34, 0xff, 0x94, 0x4f, 0xb9, 0x00, 0x4b,
	0x7c, 0x99, 0x1d, 0xd9, 0xc1, 0x90, 0x6d, 0x66, 0x9c, 0xb3, 0x13, 0x94, 0x63, 0xb9, 0x7b, 0xb6,
	0x1e, 0x5f, 0x26, 0x95, 0x11, 0x6d, 0x74, 0x01, 0x8e, 0x91, 0xca, 0x36, 0x15, 0x94, 0xd3, 0x08,
	0xc7, 0x27, 0xdf, 0xf9, 0x50, 0x27, 0xe8, 0xbb, 0x6d, 0xdb, 0x56, 0xd6, 0x08, 0x2b, 0x1c, 0xd8,
	0xb1, 0xce, 0x01, 0x59, 0x02, 0xb4, 0x5d, 0xdb, 0x8f, 0x35, 0xac, 0xd2, 0xb9, 0x4d, 0x1d, 0x0d,
	0xf0, 0x1b, 0x37, 0xd9, 0xea, 0xd4, 0xd3, 0x36, 0xd0, 0xfb, 0x27, 0xf0, 0x27, 0xd8, 0x91, 0x27,
	0xdb, 0x97, 0x10, 0xdf, 0xd8, 0x9c, 0x7a, 0x32, 0x6f, 0xce, 0xbf, 0x82, 0xd7, 0x57, 0x67, 0xe0,
	0x4f, 0x3a, 0xa3, 0x2f, 0x1f, 0xf8, 0xf0, 0xc6, 0xa7, 0xce, 0x67, 0xe9, 0xb5, 0xf6, 0x81, 0xad,
	0x2a, 0xd7, 0xe8, 0x6b, 0x43, 0x37, 0x7a, 0x69, 0xf7, 0x0f, 0xe7, 0xff, 0x8f, 0xfd, 0x2f, 0x00,
	0x00, 0xff, 0xff, 0x15, 0xb0, 0xec, 0x16, 0xaa, 0x0f, 0x00, 0x00,
}
