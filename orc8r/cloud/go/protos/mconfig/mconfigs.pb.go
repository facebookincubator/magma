// Code generated by protoc-gen-go. DO NOT EDIT.
// source: orc8r/protos/mconfig/mconfigs.proto

package mconfig // import "magma/orc8r/cloud/go/protos/mconfig"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protos "magma/orc8r/cloud/go/protos"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ------------------------------------------------------------------------------
// Control Proxy configs
// ------------------------------------------------------------------------------
type ControlProxy struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ControlProxy) Reset()         { *m = ControlProxy{} }
func (m *ControlProxy) String() string { return proto.CompactTextString(m) }
func (*ControlProxy) ProtoMessage()    {}
func (*ControlProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{0}
}
func (m *ControlProxy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlProxy.Unmarshal(m, b)
}
func (m *ControlProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlProxy.Marshal(b, m, deterministic)
}
func (dst *ControlProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlProxy.Merge(dst, src)
}
func (m *ControlProxy) XXX_Size() int {
	return xxx_messageInfo_ControlProxy.Size(m)
}
func (m *ControlProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlProxy.DiscardUnknown(m)
}

var xxx_messageInfo_ControlProxy proto.InternalMessageInfo

func (m *ControlProxy) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// DnsD configs
// ------------------------------------------------------------------------------
type DnsD struct {
	LogLevel             protos.LogLevel                 `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	EnableCaching        bool                            `protobuf:"varint,2,opt,name=enable_caching,json=enableCaching,proto3" json:"enable_caching,omitempty"`
	LocalTTL             int32                           `protobuf:"varint,3,opt,name=localTTL,proto3" json:"localTTL,omitempty"`
	Records              []*NetworkDNSConfigRecordsItems `protobuf:"bytes,4,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *DnsD) Reset()         { *m = DnsD{} }
func (m *DnsD) String() string { return proto.CompactTextString(m) }
func (*DnsD) ProtoMessage()    {}
func (*DnsD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{1}
}
func (m *DnsD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DnsD.Unmarshal(m, b)
}
func (m *DnsD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DnsD.Marshal(b, m, deterministic)
}
func (dst *DnsD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DnsD.Merge(dst, src)
}
func (m *DnsD) XXX_Size() int {
	return xxx_messageInfo_DnsD.Size(m)
}
func (m *DnsD) XXX_DiscardUnknown() {
	xxx_messageInfo_DnsD.DiscardUnknown(m)
}

var xxx_messageInfo_DnsD proto.InternalMessageInfo

func (m *DnsD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *DnsD) GetEnableCaching() bool {
	if m != nil {
		return m.EnableCaching
	}
	return false
}

func (m *DnsD) GetLocalTTL() int32 {
	if m != nil {
		return m.LocalTTL
	}
	return 0
}

func (m *DnsD) GetRecords() []*NetworkDNSConfigRecordsItems {
	if m != nil {
		return m.Records
	}
	return nil
}

type NetworkDNSConfigRecordsItems struct {
	ARecord              []string `protobuf:"bytes,1,rep,name=a_record,json=aRecord,proto3" json:"a_record,omitempty"`
	AaaaRecord           []string `protobuf:"bytes,2,rep,name=aaaa_record,json=aaaaRecord,proto3" json:"aaaa_record,omitempty"`
	CnameRecord          []string `protobuf:"bytes,3,rep,name=cname_record,json=cnameRecord,proto3" json:"cname_record,omitempty"`
	Domain               string   `protobuf:"bytes,4,opt,name=domain,proto3" json:"domain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkDNSConfigRecordsItems) Reset()         { *m = NetworkDNSConfigRecordsItems{} }
func (m *NetworkDNSConfigRecordsItems) String() string { return proto.CompactTextString(m) }
func (*NetworkDNSConfigRecordsItems) ProtoMessage()    {}
func (*NetworkDNSConfigRecordsItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{2}
}
func (m *NetworkDNSConfigRecordsItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Unmarshal(m, b)
}
func (m *NetworkDNSConfigRecordsItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Marshal(b, m, deterministic)
}
func (dst *NetworkDNSConfigRecordsItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkDNSConfigRecordsItems.Merge(dst, src)
}
func (m *NetworkDNSConfigRecordsItems) XXX_Size() int {
	return xxx_messageInfo_NetworkDNSConfigRecordsItems.Size(m)
}
func (m *NetworkDNSConfigRecordsItems) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkDNSConfigRecordsItems.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkDNSConfigRecordsItems proto.InternalMessageInfo

func (m *NetworkDNSConfigRecordsItems) GetARecord() []string {
	if m != nil {
		return m.ARecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetAaaaRecord() []string {
	if m != nil {
		return m.AaaaRecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetCnameRecord() []string {
	if m != nil {
		return m.CnameRecord
	}
	return nil
}

func (m *NetworkDNSConfigRecordsItems) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

type ImageSpec struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Order                int64    `protobuf:"varint,2,opt,name=order,proto3" json:"order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageSpec) Reset()         { *m = ImageSpec{} }
func (m *ImageSpec) String() string { return proto.CompactTextString(m) }
func (*ImageSpec) ProtoMessage()    {}
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{3}
}
func (m *ImageSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageSpec.Unmarshal(m, b)
}
func (m *ImageSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageSpec.Marshal(b, m, deterministic)
}
func (dst *ImageSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageSpec.Merge(dst, src)
}
func (m *ImageSpec) XXX_Size() int {
	return xxx_messageInfo_ImageSpec.Size(m)
}
func (m *ImageSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ImageSpec proto.InternalMessageInfo

func (m *ImageSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ImageSpec) GetOrder() int64 {
	if m != nil {
		return m.Order
	}
	return 0
}

type MagmaD struct {
	LogLevel protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	// Interval for the gateways to send checkin rpc calls to the cloud.
	CheckinInterval int32 `protobuf:"varint,2,opt,name=checkin_interval,json=checkinInterval,proto3" json:"checkin_interval,omitempty"`
	// Checkin rpc timeout
	CheckinTimeout int32 `protobuf:"varint,3,opt,name=checkin_timeout,json=checkinTimeout,proto3" json:"checkin_timeout,omitempty"`
	// Enables autoupgrading of the magma package
	AutoupgradeEnabled bool `protobuf:"varint,4,opt,name=autoupgrade_enabled,json=autoupgradeEnabled,proto3" json:"autoupgrade_enabled,omitempty"`
	// Interval to poll for package upgrades
	AutoupgradePollInterval int32 `protobuf:"varint,5,opt,name=autoupgrade_poll_interval,json=autoupgradePollInterval,proto3" json:"autoupgrade_poll_interval,omitempty"`
	// The magma package version the gateway should upgrade to
	PackageVersion string `protobuf:"bytes,6,opt,name=package_version,json=packageVersion,proto3" json:"package_version,omitempty"`
	// List of upgrade images
	Images []*ImageSpec `protobuf:"bytes,7,rep,name=images,proto3" json:"images,omitempty"`
	// For streamer, should be left unused by gateway
	TierId       string          `protobuf:"bytes,8,opt,name=tier_id,json=tierId,proto3" json:"tier_id,omitempty"`
	FeatureFlags map[string]bool `protobuf:"bytes,9,rep,name=feature_flags,json=featureFlags,proto3" json:"feature_flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// List of dynamic_services
	DynamicServices      []string `protobuf:"bytes,10,rep,name=dynamic_services,json=dynamicServices,proto3" json:"dynamic_services,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MagmaD) Reset()         { *m = MagmaD{} }
func (m *MagmaD) String() string { return proto.CompactTextString(m) }
func (*MagmaD) ProtoMessage()    {}
func (*MagmaD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{4}
}
func (m *MagmaD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MagmaD.Unmarshal(m, b)
}
func (m *MagmaD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MagmaD.Marshal(b, m, deterministic)
}
func (dst *MagmaD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MagmaD.Merge(dst, src)
}
func (m *MagmaD) XXX_Size() int {
	return xxx_messageInfo_MagmaD.Size(m)
}
func (m *MagmaD) XXX_DiscardUnknown() {
	xxx_messageInfo_MagmaD.DiscardUnknown(m)
}

var xxx_messageInfo_MagmaD proto.InternalMessageInfo

func (m *MagmaD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

func (m *MagmaD) GetCheckinInterval() int32 {
	if m != nil {
		return m.CheckinInterval
	}
	return 0
}

func (m *MagmaD) GetCheckinTimeout() int32 {
	if m != nil {
		return m.CheckinTimeout
	}
	return 0
}

func (m *MagmaD) GetAutoupgradeEnabled() bool {
	if m != nil {
		return m.AutoupgradeEnabled
	}
	return false
}

func (m *MagmaD) GetAutoupgradePollInterval() int32 {
	if m != nil {
		return m.AutoupgradePollInterval
	}
	return 0
}

func (m *MagmaD) GetPackageVersion() string {
	if m != nil {
		return m.PackageVersion
	}
	return ""
}

func (m *MagmaD) GetImages() []*ImageSpec {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *MagmaD) GetTierId() string {
	if m != nil {
		return m.TierId
	}
	return ""
}

func (m *MagmaD) GetFeatureFlags() map[string]bool {
	if m != nil {
		return m.FeatureFlags
	}
	return nil
}

func (m *MagmaD) GetDynamicServices() []string {
	if m != nil {
		return m.DynamicServices
	}
	return nil
}

type DirectoryD struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *DirectoryD) Reset()         { *m = DirectoryD{} }
func (m *DirectoryD) String() string { return proto.CompactTextString(m) }
func (*DirectoryD) ProtoMessage()    {}
func (*DirectoryD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{5}
}
func (m *DirectoryD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DirectoryD.Unmarshal(m, b)
}
func (m *DirectoryD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DirectoryD.Marshal(b, m, deterministic)
}
func (dst *DirectoryD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DirectoryD.Merge(dst, src)
}
func (m *DirectoryD) XXX_Size() int {
	return xxx_messageInfo_DirectoryD.Size(m)
}
func (m *DirectoryD) XXX_DiscardUnknown() {
	xxx_messageInfo_DirectoryD.DiscardUnknown(m)
}

var xxx_messageInfo_DirectoryD proto.InternalMessageInfo

func (m *DirectoryD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// MetricsD configs
// ------------------------------------------------------------------------------
type MetricsD struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MetricsD) Reset()         { *m = MetricsD{} }
func (m *MetricsD) String() string { return proto.CompactTextString(m) }
func (*MetricsD) ProtoMessage()    {}
func (*MetricsD) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{6}
}
func (m *MetricsD) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetricsD.Unmarshal(m, b)
}
func (m *MetricsD) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetricsD.Marshal(b, m, deterministic)
}
func (dst *MetricsD) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetricsD.Merge(dst, src)
}
func (m *MetricsD) XXX_Size() int {
	return xxx_messageInfo_MetricsD.Size(m)
}
func (m *MetricsD) XXX_DiscardUnknown() {
	xxx_messageInfo_MetricsD.DiscardUnknown(m)
}

var xxx_messageInfo_MetricsD proto.InternalMessageInfo

func (m *MetricsD) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// State configs
// ------------------------------------------------------------------------------
type State struct {
	LogLevel             protos.LogLevel `protobuf:"varint,1,opt,name=log_level,json=logLevel,proto3,enum=magma.orc8r.LogLevel" json:"log_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{7}
}
func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (dst *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(dst, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetLogLevel() protos.LogLevel {
	if m != nil {
		return m.LogLevel
	}
	return protos.LogLevel_DEBUG
}

// ------------------------------------------------------------------------------
// Fluent Bit configs
// ------------------------------------------------------------------------------
type FluentBit struct {
	ExtraTags            map[string]string `protobuf:"bytes,1,rep,name=extra_tags,json=extraTags,proto3" json:"extra_tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *FluentBit) Reset()         { *m = FluentBit{} }
func (m *FluentBit) String() string { return proto.CompactTextString(m) }
func (*FluentBit) ProtoMessage()    {}
func (*FluentBit) Descriptor() ([]byte, []int) {
	return fileDescriptor_mconfigs_ceef89eb88427e6a, []int{8}
}
func (m *FluentBit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FluentBit.Unmarshal(m, b)
}
func (m *FluentBit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FluentBit.Marshal(b, m, deterministic)
}
func (dst *FluentBit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FluentBit.Merge(dst, src)
}
func (m *FluentBit) XXX_Size() int {
	return xxx_messageInfo_FluentBit.Size(m)
}
func (m *FluentBit) XXX_DiscardUnknown() {
	xxx_messageInfo_FluentBit.DiscardUnknown(m)
}

var xxx_messageInfo_FluentBit proto.InternalMessageInfo

func (m *FluentBit) GetExtraTags() map[string]string {
	if m != nil {
		return m.ExtraTags
	}
	return nil
}

func init() {
	proto.RegisterType((*ControlProxy)(nil), "magma.mconfig.ControlProxy")
	proto.RegisterType((*DnsD)(nil), "magma.mconfig.DnsD")
	proto.RegisterType((*NetworkDNSConfigRecordsItems)(nil), "magma.mconfig.NetworkDNSConfigRecordsItems")
	proto.RegisterType((*ImageSpec)(nil), "magma.mconfig.ImageSpec")
	proto.RegisterType((*MagmaD)(nil), "magma.mconfig.MagmaD")
	proto.RegisterMapType((map[string]bool)(nil), "magma.mconfig.MagmaD.FeatureFlagsEntry")
	proto.RegisterType((*DirectoryD)(nil), "magma.mconfig.DirectoryD")
	proto.RegisterType((*MetricsD)(nil), "magma.mconfig.MetricsD")
	proto.RegisterType((*State)(nil), "magma.mconfig.State")
	proto.RegisterType((*FluentBit)(nil), "magma.mconfig.FluentBit")
	proto.RegisterMapType((map[string]string)(nil), "magma.mconfig.FluentBit.ExtraTagsEntry")
}

func init() {
	proto.RegisterFile("orc8r/protos/mconfig/mconfigs.proto", fileDescriptor_mconfigs_ceef89eb88427e6a)
}

var fileDescriptor_mconfigs_ceef89eb88427e6a = []byte{
	// 686 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0x6d, 0x6b, 0xdb, 0x48,
	0x10, 0xc7, 0x51, 0xfc, 0xa8, 0x49, 0xe2, 0xe4, 0xf6, 0x1e, 0xa2, 0x98, 0x83, 0xf3, 0x29, 0x84,
	0xf8, 0x38, 0x90, 0x8f, 0x1c, 0x07, 0x21, 0x57, 0xda, 0x92, 0xd8, 0x06, 0x83, 0x13, 0x82, 0x6c,
	0xfa, 0xa2, 0x6f, 0xc4, 0x66, 0x35, 0x56, 0x84, 0x57, 0x5a, 0xb3, 0x5a, 0xbb, 0xf1, 0xc7, 0xe8,
	0x8b, 0x7e, 0x8a, 0x7e, 0x8d, 0x7e, 0xb0, 0xa2, 0x5d, 0xd9, 0x75, 0xd2, 0xd2, 0x82, 0x5f, 0x79,
	0xe7, 0x37, 0xff, 0x19, 0x49, 0xf3, 0x1f, 0x2f, 0x9c, 0x08, 0xc9, 0x2e, 0x64, 0x67, 0x26, 0x85,
	0x12, 0x59, 0x27, 0x61, 0x22, 0x9d, 0xc4, 0xd1, 0xea, 0x37, 0xf3, 0x34, 0x27, 0xfb, 0x09, 0x8d,
	0x12, 0xea, 0x15, 0xb4, 0x79, 0xfc, 0xa4, 0x86, 0x89, 0x24, 0x11, 0xa9, 0x51, 0xba, 0x57, 0xb0,
	0x77, 0x2d, 0x52, 0x25, 0x05, 0xbf, 0x93, 0xe2, 0x71, 0x49, 0xce, 0xc1, 0xe6, 0x22, 0x0a, 0x38,
	0x2e, 0x90, 0x3b, 0x56, 0xcb, 0x6a, 0x37, 0xce, 0x7f, 0xf5, 0x4c, 0x37, 0xdd, 0xc4, 0x1b, 0x8a,
	0x68, 0x98, 0x27, 0xfd, 0x3a, 0x2f, 0x4e, 0xee, 0x27, 0x0b, 0xca, 0xdd, 0x34, 0xeb, 0x6e, 0x53,
	0x4c, 0x4e, 0xa1, 0x81, 0x29, 0xbd, 0xe7, 0x18, 0x30, 0xca, 0x1e, 0xe2, 0x34, 0x72, 0x76, 0x5a,
	0x56, 0xbb, 0xee, 0xef, 0x1b, 0x7a, 0x6d, 0x20, 0x69, 0x42, 0x9d, 0x0b, 0x46, 0xf9, 0x78, 0x3c,
	0x74, 0x4a, 0x2d, 0xab, 0x5d, 0xf1, 0xd7, 0x31, 0xe9, 0x41, 0x4d, 0x22, 0x13, 0x32, 0xcc, 0x9c,
	0x72, 0xab, 0xd4, 0xde, 0x3d, 0xff, 0xdb, 0x7b, 0xf2, 0xfd, 0xde, 0x2d, 0xaa, 0x77, 0x42, 0x4e,
	0xbb, 0xb7, 0xa3, 0x6b, 0x0d, 0x7c, 0xa3, 0x1e, 0x28, 0x4c, 0x32, 0x7f, 0x55, 0xeb, 0x7e, 0xb0,
	0xe0, 0xf7, 0xef, 0x29, 0xc9, 0x31, 0xd4, 0x69, 0x60, 0xd4, 0x8e, 0xd5, 0x2a, 0xb5, 0x6d, 0xbf,
	0x46, 0x8d, 0x80, 0xfc, 0x01, 0xbb, 0x94, 0xd2, 0x75, 0x76, 0x47, 0x67, 0x21, 0x47, 0x85, 0xe0,
	0x4f, 0xd8, 0x63, 0x29, 0x4d, 0x70, 0xa5, 0x28, 0x69, 0xc5, 0xae, 0x66, 0x85, 0xe4, 0x37, 0xa8,
	0x86, 0x22, 0xa1, 0x71, 0xea, 0x94, 0x5b, 0x56, 0xdb, 0xf6, 0x8b, 0xc8, 0xfd, 0x0f, 0xec, 0x41,
	0x42, 0x23, 0x1c, 0xcd, 0x90, 0x11, 0x02, 0xe5, 0xbc, 0x44, 0x4f, 0xd7, 0xf6, 0xf5, 0x99, 0xfc,
	0x02, 0x15, 0x21, 0x43, 0x94, 0x7a, 0x72, 0x25, 0xdf, 0x04, 0xee, 0xc7, 0x32, 0x54, 0x6f, 0xf2,
	0x31, 0x6c, 0xe7, 0xcb, 0x5f, 0x70, 0xc8, 0x1e, 0x90, 0x4d, 0xe3, 0x34, 0x88, 0x53, 0x85, 0x72,
	0x41, 0xb9, 0xee, 0x5f, 0xf1, 0x0f, 0x0a, 0x3e, 0x28, 0x30, 0x39, 0x83, 0x15, 0x0a, 0x54, 0x9c,
	0xa0, 0x98, 0xab, 0xc2, 0xa2, 0x46, 0x81, 0xc7, 0x86, 0x92, 0x0e, 0xfc, 0x4c, 0xe7, 0x4a, 0xcc,
	0x67, 0x91, 0xa4, 0x21, 0x06, 0xc6, 0xe1, 0x50, 0x7f, 0x6e, 0xdd, 0x27, 0x1b, 0xa9, 0x9e, 0xc9,
	0x90, 0x4b, 0x38, 0xde, 0x2c, 0x98, 0x09, 0xce, 0xbf, 0xbc, 0x4d, 0x45, 0x3f, 0xe3, 0x68, 0x43,
	0x70, 0x27, 0x38, 0xdf, 0x7c, 0xab, 0x19, 0x65, 0x53, 0x1a, 0x61, 0xb0, 0x40, 0x99, 0xc5, 0x22,
	0x75, 0xaa, 0x7a, 0x68, 0x8d, 0x02, 0xbf, 0x31, 0x94, 0xfc, 0x03, 0xd5, 0x38, 0x9f, 0x6f, 0xe6,
	0xd4, 0xf4, 0xf6, 0x38, 0xcf, 0xb6, 0x67, 0x3d, 0x7c, 0xbf, 0xd0, 0x91, 0x23, 0xa8, 0xa9, 0x18,
	0x65, 0x10, 0x87, 0x4e, 0xdd, 0x58, 0x95, 0x87, 0x83, 0x90, 0x0c, 0x61, 0x7f, 0x82, 0x54, 0xcd,
	0x25, 0x06, 0x13, 0x4e, 0xa3, 0xcc, 0xb1, 0x75, 0xc7, 0xb3, 0x67, 0x1d, 0x8d, 0x2d, 0x5e, 0xdf,
	0x48, 0xfb, 0xb9, 0xb2, 0x97, 0x2a, 0xb9, 0xf4, 0xf7, 0x26, 0x1b, 0x28, 0xb7, 0x20, 0x5c, 0xa6,
	0x34, 0x89, 0x59, 0x90, 0xa1, 0x5c, 0xc4, 0x0c, 0x33, 0x07, 0xf4, 0xde, 0x1c, 0x14, 0x7c, 0x54,
	0xe0, 0xe6, 0x2b, 0xf8, 0xe9, 0xab, 0x6e, 0xe4, 0x10, 0x4a, 0x53, 0x5c, 0x16, 0xab, 0x92, 0x1f,
	0xf3, 0x4d, 0x59, 0x50, 0x3e, 0xc7, 0xe2, 0x3f, 0x66, 0x82, 0xcb, 0x9d, 0x0b, 0xcb, 0x7d, 0x0d,
	0xd0, 0x8d, 0x25, 0x32, 0x25, 0xe4, 0x72, 0xab, 0x85, 0x71, 0x5f, 0x42, 0xfd, 0x06, 0x95, 0x8c,
	0xd9, 0x76, 0x17, 0x81, 0xfb, 0x3f, 0x54, 0x46, 0x8a, 0x2a, 0xdc, 0xaa, 0xf8, 0xbd, 0x05, 0x76,
	0x9f, 0xcf, 0x31, 0x55, 0x57, 0xb1, 0x22, 0x7d, 0x00, 0x7c, 0x54, 0x92, 0x06, 0x2a, 0xf7, 0xc0,
	0xfa, 0xa6, 0x07, 0x6b, 0xb5, 0xd7, 0xcb, 0xa5, 0xe3, 0xb5, 0x07, 0x36, 0xae, 0xe2, 0xe6, 0x0b,
	0x68, 0x3c, 0x4d, 0xfe, 0x68, 0xa4, 0xf6, 0xc6, 0x48, 0xaf, 0x4e, 0xdf, 0x9e, 0xe8, 0x47, 0x76,
	0xcc, 0xed, 0xcb, 0xb8, 0x98, 0x87, 0x9d, 0x48, 0x3c, 0xbb, 0xba, 0xef, 0xab, 0x3a, 0xfe, 0xf7,
	0x73, 0x00, 0x00, 0x00, 0xff, 0xff, 0x42, 0x04, 0x4c, 0xa5, 0xd9, 0x05, 0x00, 0x00,
}
