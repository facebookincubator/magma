// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mproto.proto

package protos

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// --------------------------------------------------------------------------
// A set of protobuf messages, all individually encoded & paired with unique identifiers
// --------------------------------------------------------------------------
type ProtoSlice struct {
	ProtoBytes           map[string][]byte `protobuf:"bytes,1,rep,name=ProtoBytes,proto3" json:"ProtoBytes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ProtoSlice) Reset()         { *m = ProtoSlice{} }
func (m *ProtoSlice) String() string { return proto.CompactTextString(m) }
func (*ProtoSlice) ProtoMessage()    {}
func (*ProtoSlice) Descriptor() ([]byte, []int) {
	return fileDescriptor_d791fb59920415c2, []int{0}
}

func (m *ProtoSlice) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProtoSlice.Unmarshal(m, b)
}
func (m *ProtoSlice) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProtoSlice.Marshal(b, m, deterministic)
}
func (m *ProtoSlice) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProtoSlice.Merge(m, src)
}
func (m *ProtoSlice) XXX_Size() int {
	return xxx_messageInfo_ProtoSlice.Size(m)
}
func (m *ProtoSlice) XXX_DiscardUnknown() {
	xxx_messageInfo_ProtoSlice.DiscardUnknown(m)
}

var xxx_messageInfo_ProtoSlice proto.InternalMessageInfo

func (m *ProtoSlice) GetProtoBytes() map[string][]byte {
	if m != nil {
		return m.ProtoBytes
	}
	return nil
}

// --------------------------------------------------------------------------
// Protobuf message with basic field types for testing deterministic encoding
// --------------------------------------------------------------------------
type TestData struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestData) Reset()         { *m = TestData{} }
func (m *TestData) String() string { return proto.CompactTextString(m) }
func (*TestData) ProtoMessage()    {}
func (*TestData) Descriptor() ([]byte, []int) {
	return fileDescriptor_d791fb59920415c2, []int{1}
}

func (m *TestData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestData.Unmarshal(m, b)
}
func (m *TestData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestData.Marshal(b, m, deterministic)
}
func (m *TestData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestData.Merge(m, src)
}
func (m *TestData) XXX_Size() int {
	return xxx_messageInfo_TestData.Size(m)
}
func (m *TestData) XXX_DiscardUnknown() {
	xxx_messageInfo_TestData.DiscardUnknown(m)
}

var xxx_messageInfo_TestData proto.InternalMessageInfo

func (m *TestData) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TestData) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// --------------------------------------------------------------------------
// Protobuf message with compound field types for testing deterministic encoding
// --------------------------------------------------------------------------
type TestDataCollection struct {
	ID                   string               `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SingleData           *TestData            `protobuf:"bytes,2,opt,name=SingleData,proto3" json:"SingleData,omitempty"`
	DataMap              map[string]*TestData `protobuf:"bytes,3,rep,name=DataMap,proto3" json:"DataMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DataSlice            []*TestData          `protobuf:"bytes,4,rep,name=DataSlice,proto3" json:"DataSlice,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TestDataCollection) Reset()         { *m = TestDataCollection{} }
func (m *TestDataCollection) String() string { return proto.CompactTextString(m) }
func (*TestDataCollection) ProtoMessage()    {}
func (*TestDataCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_d791fb59920415c2, []int{2}
}

func (m *TestDataCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestDataCollection.Unmarshal(m, b)
}
func (m *TestDataCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestDataCollection.Marshal(b, m, deterministic)
}
func (m *TestDataCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestDataCollection.Merge(m, src)
}
func (m *TestDataCollection) XXX_Size() int {
	return xxx_messageInfo_TestDataCollection.Size(m)
}
func (m *TestDataCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_TestDataCollection.DiscardUnknown(m)
}

var xxx_messageInfo_TestDataCollection proto.InternalMessageInfo

func (m *TestDataCollection) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *TestDataCollection) GetSingleData() *TestData {
	if m != nil {
		return m.SingleData
	}
	return nil
}

func (m *TestDataCollection) GetDataMap() map[string]*TestData {
	if m != nil {
		return m.DataMap
	}
	return nil
}

func (m *TestDataCollection) GetDataSlice() []*TestData {
	if m != nil {
		return m.DataSlice
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoSlice)(nil), "magma.orc8r.mproto.ProtoSlice")
	proto.RegisterMapType((map[string][]byte)(nil), "magma.orc8r.mproto.ProtoSlice.ProtoBytesEntry")
	proto.RegisterType((*TestData)(nil), "magma.orc8r.mproto.TestData")
	proto.RegisterType((*TestDataCollection)(nil), "magma.orc8r.mproto.TestDataCollection")
	proto.RegisterMapType((map[string]*TestData)(nil), "magma.orc8r.mproto.TestDataCollection.DataMapEntry")
}

func init() { proto.RegisterFile("mproto.proto", fileDescriptor_d791fb59920415c2) }

var fileDescriptor_d791fb59920415c2 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0x87, 0xd9, 0xc4, 0x6a, 0x3b, 0x0d, 0x2a, 0x83, 0x87, 0x50, 0x3c, 0x84, 0x9c, 0x72, 0xda,
	0x43, 0x7a, 0x29, 0x45, 0x2f, 0x35, 0x1e, 0x4a, 0xa9, 0x48, 0x2a, 0x22, 0xde, 0xd6, 0xb0, 0x94,
	0x60, 0xfe, 0x94, 0x64, 0x15, 0xf2, 0x2c, 0x3e, 0x90, 0xaf, 0x25, 0xbb, 0x9b, 0xb8, 0x41, 0x4b,
	0x7b, 0xc9, 0xce, 0x30, 0xf3, 0x7d, 0x4c, 0x7e, 0xe0, 0xe4, 0xbb, 0xaa, 0x14, 0x25, 0x55, 0x5f,
	0xc4, 0x9c, 0x6d, 0x73, 0x46, 0xcb, 0x2a, 0x99, 0x55, 0x54, 0x4f, 0xfc, 0x2f, 0x02, 0xf0, 0x28,
	0xab, 0x4d, 0x96, 0x26, 0x1c, 0x1f, 0xda, 0x6e, 0xd1, 0x08, 0x5e, 0xbb, 0xc4, 0xb3, 0x83, 0x71,
	0x48, 0xe9, 0x7f, 0x8e, 0x1a, 0x86, 0x1a, 0xe0, 0xbe, 0x10, 0x55, 0x13, 0xf7, 0x0c, 0x93, 0x5b,
	0xb8, 0xf8, 0x33, 0xc6, 0x4b, 0xb0, 0xdf, 0x79, 0xe3, 0x12, 0x8f, 0x04, 0xa3, 0x58, 0x96, 0x78,
	0x05, 0x83, 0x4f, 0x96, 0x7d, 0x70, 0xd7, 0xf2, 0x48, 0xe0, 0xc4, 0xba, 0x99, 0x5b, 0x33, 0xe2,
	0x87, 0x30, 0x7c, 0xe2, 0xb5, 0x88, 0x98, 0x60, 0x92, 0x5b, 0x19, 0x6e, 0xa5, 0xb9, 0xe7, 0x5f,
	0x6e, 0x10, 0xeb, 0xc6, 0xff, 0xb6, 0x00, 0x3b, 0xe8, 0xae, 0xcc, 0x32, 0x9e, 0x88, 0xb4, 0x2c,
	0xf0, 0x1c, 0xac, 0x65, 0xd4, 0xd2, 0xd6, 0x32, 0xc2, 0x1b, 0x80, 0x4d, 0x5a, 0x6c, 0x33, 0x2e,
	0xf7, 0x94, 0x61, 0x1c, 0x5e, 0xef, 0xfb, 0xd3, 0xce, 0x15, 0xf7, 0xf6, 0x71, 0x0d, 0x67, 0xf2,
	0x5d, 0xb3, 0x9d, 0x6b, 0xab, 0x90, 0xa6, 0x87, 0x50, 0x73, 0x06, 0x6d, 0x29, 0x9d, 0x54, 0xe7,
	0xc0, 0x39, 0x8c, 0x64, 0xa9, 0xf2, 0x74, 0x4f, 0x94, 0xf0, 0xf0, 0x2d, 0x66, 0x7d, 0xf2, 0x02,
	0x4e, 0x5f, 0xba, 0x27, 0xdf, 0xb0, 0x9f, 0xef, 0x31, 0xb3, 0x49, 0x7f, 0x31, 0x7c, 0x3d, 0x55,
	0xc3, 0xfa, 0x4d, 0xbf, 0xd3, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x56, 0x8c, 0x4e, 0x1e, 0x50,
	0x02, 0x00, 0x00,
}
