// Code generated by go-swagger; DO NOT EDIT.

package baremetal

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"magma/orc8r/cloud/go/obsidian/swagger/v1/models"
)

// NewPutCiNodesNodeIDParams creates a new PutCiNodesNodeIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPutCiNodesNodeIDParams() *PutCiNodesNodeIDParams {
	return &PutCiNodesNodeIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPutCiNodesNodeIDParamsWithTimeout creates a new PutCiNodesNodeIDParams object
// with the ability to set a timeout on a request.
func NewPutCiNodesNodeIDParamsWithTimeout(timeout time.Duration) *PutCiNodesNodeIDParams {
	return &PutCiNodesNodeIDParams{
		timeout: timeout,
	}
}

// NewPutCiNodesNodeIDParamsWithContext creates a new PutCiNodesNodeIDParams object
// with the ability to set a context for a request.
func NewPutCiNodesNodeIDParamsWithContext(ctx context.Context) *PutCiNodesNodeIDParams {
	return &PutCiNodesNodeIDParams{
		Context: ctx,
	}
}

// NewPutCiNodesNodeIDParamsWithHTTPClient creates a new PutCiNodesNodeIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewPutCiNodesNodeIDParamsWithHTTPClient(client *http.Client) *PutCiNodesNodeIDParams {
	return &PutCiNodesNodeIDParams{
		HTTPClient: client,
	}
}

/* PutCiNodesNodeIDParams contains all the parameters to send to the API endpoint
   for the put ci nodes node ID operation.

   Typically these are written to a http.Request.
*/
type PutCiNodesNodeIDParams struct {

	/* CiNode.

	   CI node to create
	*/
	CiNode *models.MutableCiNode

	/* NodeID.

	   CI node ID
	*/
	NodeID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the put ci nodes node ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCiNodesNodeIDParams) WithDefaults() *PutCiNodesNodeIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the put ci nodes node ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PutCiNodesNodeIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) WithTimeout(timeout time.Duration) *PutCiNodesNodeIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) WithContext(ctx context.Context) *PutCiNodesNodeIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) WithHTTPClient(client *http.Client) *PutCiNodesNodeIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCiNode adds the ciNode to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) WithCiNode(ciNode *models.MutableCiNode) *PutCiNodesNodeIDParams {
	o.SetCiNode(ciNode)
	return o
}

// SetCiNode adds the ciNode to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) SetCiNode(ciNode *models.MutableCiNode) {
	o.CiNode = ciNode
}

// WithNodeID adds the nodeID to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) WithNodeID(nodeID string) *PutCiNodesNodeIDParams {
	o.SetNodeID(nodeID)
	return o
}

// SetNodeID adds the nodeId to the put ci nodes node ID params
func (o *PutCiNodesNodeIDParams) SetNodeID(nodeID string) {
	o.NodeID = nodeID
}

// WriteToRequest writes these params to a swagger request
func (o *PutCiNodesNodeIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.CiNode != nil {
		if err := r.SetBodyParam(o.CiNode); err != nil {
			return err
		}
	}

	// path param node_id
	if err := r.SetPathParam("node_id", o.NodeID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
