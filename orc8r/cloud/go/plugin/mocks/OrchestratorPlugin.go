/*
Copyright (c) Facebook, Inc. and its affiliates.
All rights reserved.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.
*/

// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	"magma/orc8r/cloud/go/obsidian/handlers"
	platformregistry "magma/orc8r/cloud/go/registry"
	"magma/orc8r/cloud/go/services/config/registry"
	"magma/orc8r/cloud/go/services/metricsd"
	state_registry "magma/orc8r/cloud/go/services/state/registry"
	"magma/orc8r/cloud/go/services/streamer/mconfig/factory"
	"magma/orc8r/cloud/go/services/streamer/providers"

	"github.com/stretchr/testify/mock"
)

// OrchestratorPlugin is an autogenerated mock type for the OrchestratorPlugin type
type OrchestratorPlugin struct {
	mock.Mock
}

// GetStateSerdes provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetStateSerdes() []state_registry.StateSerde {
	ret := _m.Called()

	var r0 []state_registry.StateSerde
	if rf, ok := ret.Get(0).(func() []state_registry.StateSerde); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]state_registry.StateSerde)
		}
	}

	return r0
}

// GetConfigManagers provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetConfigManagers() []registry.ConfigManager {
	ret := _m.Called()

	var r0 []registry.ConfigManager
	if rf, ok := ret.Get(0).(func() []registry.ConfigManager); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]registry.ConfigManager)
		}
	}

	return r0
}

// GetMconfigBuilders provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetMconfigBuilders() []factory.MconfigBuilder {
	ret := _m.Called()

	var r0 []factory.MconfigBuilder
	if rf, ok := ret.Get(0).(func() []factory.MconfigBuilder); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]factory.MconfigBuilder)
		}
	}

	return r0
}

// GetMetricsProfiles provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetMetricsProfiles() []metricsd.MetricsProfile {
	ret := _m.Called()

	var r0 []metricsd.MetricsProfile
	if rf, ok := ret.Get(0).(func() []metricsd.MetricsProfile); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]metricsd.MetricsProfile)
		}
	}

	return r0
}

// GetName provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetName() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// GetObsidianHandlers provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetObsidianHandlers() []handlers.Handler {
	ret := _m.Called()

	var r0 []handlers.Handler
	if rf, ok := ret.Get(0).(func() []handlers.Handler); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]handlers.Handler)
		}
	}

	return r0
}

// GetServices provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetServices() []platformregistry.ServiceLocation {
	ret := _m.Called()

	var r0 []platformregistry.ServiceLocation
	if rf, ok := ret.Get(0).(func() []platformregistry.ServiceLocation); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]platformregistry.ServiceLocation)
		}
	}

	return r0
}

// GetStreamerProviders provides a mock function with given fields:
func (_m *OrchestratorPlugin) GetStreamerProviders() []providers.StreamProvider {
	ret := _m.Called()

	var r0 []providers.StreamProvider
	if rf, ok := ret.Get(0).(func() []providers.StreamProvider); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]providers.StreamProvider)
		}
	}

	return r0
}
