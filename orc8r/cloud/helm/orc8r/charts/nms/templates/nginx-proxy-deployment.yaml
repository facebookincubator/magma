{{/*
# Copyright (c) 2018-present, Facebook, Inc.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree. An additional grant
# of patent rights can be found in the PATENTS file in the same directory.
*/}}

{{- if .Values.nginx.manifests.deployment }}
{{- $envAll := . }}

{{- $saNamespace := $envAll.Release.Namespace }}
{{- $serviceAccountName := printf "%s-%s" .Release.Name "nginx" }}
{{- if .Values.nginx.manifests.rbac }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  namespace: {{ $saNamespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $serviceAccountName }}
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - extensions
    resources:
      - ingresses/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
      - create
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ $serviceAccountName }}
  apiGroup: rbac.authorization.k8s.io
{{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nms-nginx-proxy
  labels:
{{ tuple $envAll "nms" "nginx" | include "labels" | indent 4 }}
spec:
  replicas: {{ .Values.pod.replicas.nginx.server }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
{{ tuple $envAll "nms" "nginx" | include "selector-labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "nms" "nginx" | include "selector-labels" | indent 8 }}
    spec:
      {{- if .Values.nginx.manifests.rbac }}
      serviceAccountName: {{ $serviceAccountName }}
      {{- end }}
      affinity:
{{ tuple $envAll "nms" "nginx" | include "kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.nginx.labels.node_selector_key }}: {{ .Values.nginx.labels.node_selector_value | quote }}
      terminationGracePeriodSeconds: 60
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
{{ tuple $envAll $envAll.Values.pod.resources.nginx | include "kubernetes_resources" | indent 10 }}
          ports:
            - containerPort: 443
          volumeMounts:
            - name: nginx-proxy-etc
              mountPath: /etc/nginx/conf.d/nginx_proxy_ssl.conf
              subPath: nginx_proxy_ssl.conf
            - name: orc8r-secrets-certs
              mountPath: /etc/nginx/conf.d/nms_nginx.pem
              subPath: nms_nginx.pem
              readOnly: true
            - name: orc8r-secrets-certs
              mountPath: /etc/nginx/conf.d/nms_nginx.key.pem
              subPath: nms_nginx.key.pem
              readOnly: true
      volumes:
        - name: nginx-proxy-etc
          configMap:
            name: nginx-proxy-etc
            defaultMode: 0555
        - name: orc8r-secrets-certs
          secret:
            secretName: orc8r-secrets-certs
            defaultMode: 0444
{{- end }}
