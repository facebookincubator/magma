version: "3.7"

services:
  prometheus-cache:
    build:
      context: $PWD/../../../orc8r
      dockerfile: $PWD/prometheus-cache/Dockerfile
    ports:
      - 9091:9091/tcp
    command:
      - '-limit=500000'
    restart: always

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090/tcp
    volumes:
      - $PWD/../../../orc8r/cloud/docker/prometheus-configurer/configs:/etc/prometheus:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    restart: always

  alertmanager:
    image: prom/alertmanager
    ports:
      - 9093:9093/tcp
    volumes:
      - $PWD/../../../orc8r/cloud/docker/alertmanager-configurer/configs:/etc/alertmanager:ro
    restart: always

  prometheus-configurer:
    volumes:
      - $PWD/../../../orc8r/cloud/docker/prometheus-configurer/configs:/etc/configs
    build:
      context: $PWD/../../../orc8r
      dockerfile: $PWD/prometheus-configurer/Dockerfile
    command:
      - '-port=9100'
      - '-rules-dir=/etc/configs/alert_rules'
      - '-prometheusURL=prometheus:9090'
      - '-multitenant-label=networkID'
      - '-restrict-queries'
    restart: always

  alertmanager-configurer:
    volumes:
      - $PWD/../../../orc8r/cloud/docker/alertmanager-configurer/configs:/etc/configs
    build:
      context: $PWD/../../../orc8r
      dockerfile: $PWD/alertmanager-configurer/Dockerfile
    command:
      - '-port=9101'
      - '-alertmanager-conf=/etc/configs/alertmanager.yml'
      - '-alertmanagerURL=alertmanager:9093'
      - '-multitenant-label=networkID'
    restart: always

  grafana:
    build:
      context: $PWD/../../../orc8r
      dockerfile: $PWD/grafana/Dockerfile
    environment:
      - PROMETHEUS_HOST=prometheus
      - PROMETHEUS_PORT=9090
    ports:
      - 3000:3000/tcp
    restart: always

  user-grafana:
    volumes:
      - userGrafanaData:/var/lib/grafana
    build:
      context: $PWD/../../../orc8r
      dockerfile: $PWD/user-grafana/Dockerfile
    restart: always

volumes:
  userGrafanaData:
