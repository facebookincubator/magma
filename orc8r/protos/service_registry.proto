/*
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package magma.orc8r;

import "orc8r/protos/common.proto";

option go_package = "magma/orc8r/lib/go/protos";


// --------------------------------------------------------------------------
// The ServiceRegistry interface implements a set of functionalities that can
// be used for service discovery.
// --------------------------------------------------------------------------
service ServiceRegistry {

  // ListAllServices returns the service name of all services in the registry.
  rpc ListAllServices (Void) returns (ServiceList) {}

  // FindServices returns the names of all services that have the passed label.
  rpc FindServices (FindServicesRequest) returns (ServiceList) {}

  // GetServiceAddress returns the service address of a given service.
  rpc GetServiceAddress (ServiceRequest) returns (ServiceAddressResponse) {}

  // GetHttpServerAddress returns the address for a service's HTTP server.
  rpc GetHttpServerAddress (ServiceRequest) returns (ServiceAddressResponse) {}

  // GetAnnotations returns a list of values for the passed annotation
  // name.
  rpc GetAnnotations(GetAnnotationsRequest) returns (AnnotationList) {}
}

message ServiceList {
  repeated string services = 1;
}

message ServiceRequest {
  string service = 1;
}

message ServiceAddressResponse {
  string address = 1;
}

message FindServicesRequest {
  string label = 1;
}

message GetAnnotationsRequest {
  string service = 1;
  string annotation = 2;
}

message AnnotationList {
  repeated string annotations = 1;
}