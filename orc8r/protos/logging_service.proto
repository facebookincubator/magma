// Copyright (c) 2016-present, Facebook, Inc.
// All rights reserved.
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree. An additional grant
// of patent rights can be found in the PATENTS file in the same directory.
syntax = "proto3";

import "orc8r/protos/common.proto";

package magma.orc8r;
option go_package = "magma/orc8r/lib/go/protos";

message LogEntry {
    // category of the log entry
    string category = 1;
    // required unix timestamp in seconds of the entry
    int64 time = 3;
    // optional hardware id of the gateway if the LogEntry comes from a gateway
    string hw_id = 4;
    // optinoal map of normal(string) values
    map<string, string> normal_map = 5;
    // optional map of int values
    map<string, int64> int_map = 6;
    // optional a set of string values, usually used for *gk_on* or *quick_experiment*
    repeated string tag_set = 7;
    // optional a vector of strings, usually used for stack traces
    repeated string normvector = 8;
}

message LogRequest {
    repeated LogEntry Entries = 1;
    LoggerDestination Destination = 2;
}

service LoggingService {
    // Log a list of LogEntry.
    rpc Log (LogRequest) returns (Void) {}
}

// Where to log to. Currently only supports scribe.
enum LoggerDestination {
  SCRIBE = 0;
}