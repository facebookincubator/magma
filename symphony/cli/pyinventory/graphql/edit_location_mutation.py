#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass, field
from datetime import datetime
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json
from marshmallow import fields as marshmallow_fields

from .datetime_utils import fromisoformat

from .edit_location_input import EditLocationInput


DATETIME_FIELD = field(
    metadata={
        "dataclasses_json": {
            "encoder": datetime.isoformat,
            "decoder": fromisoformat,
            "mm_field": marshmallow_fields.DateTime(format="iso"),
        }
    }
)


@dataclass_json
@dataclass
class EditLocationMutation:
    __QUERY__ = """
    mutation EditLocationMutation($input: EditLocationInput!) {
  editLocation(input: $input) {
    id
    name
    latitude
    longitude
    externalId
    locationType {
      name
    }
  }
}

    """

    @dataclass_json
    @dataclass
    class EditLocationMutationData:
        @dataclass_json
        @dataclass
        class Location:
            @dataclass_json
            @dataclass
            class LocationType:
                name: str

            id: str
            name: str
            latitude: Number
            longitude: Number
            locationType: LocationType
            externalId: Optional[str] = None

        editLocation: Optional[Location] = None

    data: Optional[EditLocationMutationData] = None
    errors: Optional[Any] = None

    @classmethod
    # fmt: off
    def execute(cls, client, input: EditLocationInput):
        # fmt: off
        variables = {"input": input}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
