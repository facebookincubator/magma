#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass, field
from datetime import datetime
from functools import partial
from numbers import Number
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json
from marshmallow import fields as marshmallow_fields

from .datetime_utils import fromisoformat

from .add_equipment_port_type_input import AddEquipmentPortTypeInput


DATETIME_FIELD = field(
    metadata={
        "dataclasses_json": {
            "encoder": datetime.isoformat,
            "decoder": fromisoformat,
            "mm_field": marshmallow_fields.DateTime(format="iso"),
        }
    }
)


@dataclass_json
@dataclass
class AddEquipmentPortTypeMutation:
    __QUERY__ = """
    mutation AddEquipmentPortTypeMutation($input: AddEquipmentPortTypeInput!) {
  addEquipmentPortType(input: $input) {
    id
    name
  }
}

    """

    @dataclass_json
    @dataclass
    class AddEquipmentPortTypeMutationData:
        @dataclass_json
        @dataclass
        class EquipmentPortType:
            id: str
            name: str

        addEquipmentPortType: Optional[EquipmentPortType] = None

    data: Optional[AddEquipmentPortTypeMutationData] = None
    errors: Optional[Any] = None

    @classmethod
    # fmt: off
    def execute(cls, client, input: AddEquipmentPortTypeInput):
        # fmt: off
        variables = {"input": input}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
