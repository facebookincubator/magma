#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass, field
from datetime import datetime
from enum import Enum
from functools import partial
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json
from marshmallow import fields as marshmallow_fields

from .datetime_utils import fromisoformat


DATETIME_FIELD = field(
    metadata={
        "dataclasses_json": {
            "encoder": datetime.isoformat,
            "decoder": fromisoformat,
            "mm_field": marshmallow_fields.DateTime(format="iso"),
        }
    }
)


def enum_field(enum_type):
    def encode_enum(value):
        return value.value

    def decode_enum(t, value):
        return t(value)

    return field(
        metadata={
            "dataclasses_json": {
                "encoder": encode_enum,
                "decoder": partial(decode_enum, enum_type),
            }
        }
    )


class SurveyStatus(Enum):
    PLANNED = "PLANNED"
    INPROGRESS = "INPROGRESS"
    COMPLETED = "COMPLETED"


class SurveyQuestionType(Enum):
    BOOL = "BOOL"
    EMAIL = "EMAIL"
    COORDS = "COORDS"
    PHONE = "PHONE"
    TEXT = "TEXT"
    TEXTAREA = "TEXTAREA"
    PHOTO = "PHOTO"
    WIFI = "WIFI"
    CELLULAR = "CELLULAR"
    FLOAT = "FLOAT"
    INTEGER = "INTEGER"
    DATE = "DATE"


class FileType(Enum):
    IMAGE = "IMAGE"
    FILE = "FILE"


class CellularNetworkType(Enum):
    CDMA = "CDMA"
    GSM = "GSM"
    LTE = "LTE"
    WCDMA = "WCDMA"


@dataclass_json
@dataclass
class SurveyCreateData:
    @dataclass_json
    @dataclass
    class SurveyQuestionResponse:
        @dataclass_json
        @dataclass
        class FileInput:
            id: str
            fileName: str
            storeKey: str
            sizeInBytes: Optional[int] = None
            modificationTime: Optional[int] = None
            uploadTime: Optional[int] = None
            fileType: Optional[FileType] = None

        @dataclass_json
        @dataclass
        class SurveyWiFiScanData:
            timestamp: int
            frequency: int
            channel: int
            bssid: str
            strength: int
            ssid: Optional[str] = None
            band: Optional[str] = None
            channelWidth: Optional[int] = None
            capabilities: Optional[str] = None
            latitude: Optional[float] = None
            longitude: Optional[float] = None

        @dataclass_json
        @dataclass
        class SurveyCellScanData:
            networkType: CellularNetworkType = enum_field(CellularNetworkType)
            signalStrength: int
            timestamp: Optional[int] = None
            baseStationID: Optional[str] = None
            networkID: Optional[str] = None
            systemID: Optional[str] = None
            cellID: Optional[str] = None
            locationAreaCode: Optional[str] = None
            mobileCountryCode: Optional[str] = None
            mobileNetworkCode: Optional[str] = None
            primaryScramblingCode: Optional[str] = None
            operator: Optional[str] = None
            arfcn: Optional[int] = None
            physicalCellID: Optional[str] = None
            trackingAreaCode: Optional[str] = None
            timingAdvance: Optional[int] = None
            earfcn: Optional[int] = None
            uarfcn: Optional[int] = None
            latitude: Optional[float] = None
            longitude: Optional[float] = None

        formIndex: int
        questionText: str
        questionIndex: int
        wifiData: List[SurveyWiFiScanData]
        cellData: List[SurveyCellScanData]
        formName: Optional[str] = None
        formDescription: Optional[str] = None
        questionFormat: Optional[SurveyQuestionType] = None
        boolData: Optional[bool] = None
        emailData: Optional[str] = None
        latitude: Optional[float] = None
        longitude: Optional[float] = None
        locationAccuracy: Optional[float] = None
        altitude: Optional[float] = None
        phoneData: Optional[str] = None
        textData: Optional[str] = None
        floatData: Optional[float] = None
        intData: Optional[int] = None
        dateData: Optional[int] = None
        photoData: Optional[FileInput] = None

    name: str
    completionTimestamp: int
    locationID: str
    surveyResponses: List[SurveyQuestionResponse]
    ownerName: Optional[str] = None
    creationTimestamp: Optional[int] = None
    status: Optional[SurveyStatus] = None


@dataclass_json
@dataclass
class CreateSurveyMutation:
    __QUERY__ = """
    mutation CreateSurveyMutation($data: SurveyCreateData!) {
  createSurvey(data: $data)
}

    """

    @dataclass_json
    @dataclass
    class CreateSurveyMutationData:
        createSurvey: Optional[str] = None

    data: Optional[CreateSurveyMutationData] = None
    errors: Any = None

    @classmethod
    # fmt: off
    def execute(cls, client, data: SurveyCreateData):
        # fmt: off
        variables = {"data": data}
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
