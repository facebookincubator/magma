#!/usr/bin/env python3
# @generated AUTOGENERATED file. Do not Change!

from dataclasses import dataclass, field
from datetime import datetime
from enum import Enum
from functools import partial
from typing import Any, Callable, List, Mapping, Optional

from dataclasses_json import dataclass_json
from marshmallow import fields as marshmallow_fields

from .datetime_utils import fromisoformat


DATETIME_FIELD = field(
    metadata={
        "dataclasses_json": {
            "encoder": datetime.isoformat,
            "decoder": fromisoformat,
            "mm_field": marshmallow_fields.DateTime(format="iso"),
        }
    }
)


@dataclass_json
@dataclass
class CustomersQuery:
    __QUERY__ = """
    query CustomersQuery {
  customers {
    edges {
      node {
        id
        name
        externalId
      }
    }
  }
}

    """

    @dataclass_json
    @dataclass
    class CustomersQueryData:
        @dataclass_json
        @dataclass
        class CustomerConnection:
            @dataclass_json
            @dataclass
            class CustomerEdge:
                @dataclass_json
                @dataclass
                class Customer:
                    id: str
                    name: str
                    externalId: Optional[str] = None

                node: Optional[Customer] = None

            edges: List[CustomerEdge]

        customers: Optional[CustomerConnection] = None

    data: Optional[CustomersQueryData] = None
    errors: Any = None

    @classmethod
    # fmt: off
    def execute(cls, client):
        # fmt: off
        variables = None
        response_text = client.call(cls.__QUERY__, variables=variables)
        return cls.from_json(response_text).data
