{{/*
Copyright 2019 Mirantis Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.magmalte.manifests.deployment }}
{{- $envAll := . }}

{{- $saNamespace := $envAll.Release.Namespace }}
{{- $serviceAccountName := printf "%s-%s" .Release.Name "magmalte" }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ $serviceAccountName }}
  namespace: {{ $saNamespace }}
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: {{ $serviceAccountName }}
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: {{ $serviceAccountName }}
subjects:
  - kind: ServiceAccount
    name: {{ $serviceAccountName }}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ $serviceAccountName }}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: magmalte
  labels:
{{ tuple $envAll "nms" "magmalte" | include "labels" | indent 4 }}
spec:
  replicas: {{ .Values.pod.replicas.magmalte.server }}
  selector:
    matchLabels:
{{ tuple $envAll "nms" "magmalte" | include "selector-labels" | indent 6 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "nms" "magmalte" | include "selector-labels" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "nms" "magmalte" | include "kubernetes_pod_anti_affinity" | indent 8 }}
      nodeSelector:
        {{ .Values.magmalte.labels.node_selector_key }}: {{ .Values.magmalte.labels.node_selector_value | quote }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.magmalte.image.repository }}:{{ .Values.magmalte.image.tag }}"
          imagePullPolicy: {{ .Values.magmalte.image.pullPolicy }}
{{ tuple $envAll $envAll.Values.pod.resources.magmalte | include "kubernetes_resources" | indent 10 }}
          args:
            - yarn
            - run
            - start:dev
          env:
            - name: API_CERT_FILENAME
              value: /usr/src/fbcnms-projects/magmalte/certs/admin_operator.pem
            - name: API_PRIVATE_KEY_FILENAME
              value: /usr/src/fbcnms-projects/magmalte/certs/admin_operator.key.pem
            - name: API_HOST
              value: {{ .Values.magmalte.env.api_host | quote }}
            - name: HOST
              value: {{ .Values.magmalte.env.host | quote }}
            - name: PORT
              value: {{ .Values.magmalte.env.port | quote }}
            - name: MAPBOX_ACCESS_TOKEN
              value: {{ .Values.magmalte.env.mapbox_access_token | quote }}
            - name: MYSQL_DB
              value: {{ .Values.magmalte.env.mysql_db | quote }}
            - name: MYSQL_HOST
              value: {{ .Values.magmalte.env.mysql_host | quote }}
            - name: MYSQL_PASS
              valueFrom:
                secretKeyRef:
                  name: magmalte-mysql-secrets
                  key: MYSQL_PASS
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: magmalte-mysql-secrets
                  key: MYSQL_USER
          livenessProbe:
            exec:
              command:
              - curl -If localhost:8081/user/login
          ports:
            - containerPort: 8081
          volumeMounts:
            - name: orc8r-secrets-certs
              mountPath: /usr/src/fbcnms-projects/magmalte/certs/admin_operator.pem
              subPath: admin_operator.pem
            - name: orc8r-secrets-certs
              mountPath: /usr/src/fbcnms-projects/magmalte/certs/admin_operator.key.pem
              subPath: admin_operator.key.pem
      volumes:
        - name: orc8r-secrets-certs
          secret:
            secretName: orc8r-secrets-certs
            defaultMode: 0444
{{- end }}
