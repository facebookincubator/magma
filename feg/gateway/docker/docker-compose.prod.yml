version: "3.7"

services:
  control_proxy:
    container_name: control_proxy
    image: feg_gateway_python
    volumes:
      - ../../../.cache/test_certs:/var/opt/magma/certs
    logging: &logging_anchor
      driver: "json-file"
      options:
        max-size: "10mb"
        max-file: "10"
    restart: always
    network_mode: host
    extra_hosts: &hosts_anchor
      - controller.magma.test:127.0.0.1
      - bootstrapper-controller.magma.test:127.0.0.1
    command: >
      sh -c "python3 /tmp/orc8r/scripts/generate_nghttpx_config.py &&
             /usr/bin/env nghttpx --conf /var/opt/magma/tmp/nghttpx.conf /var/opt/magma/certs/controller.key /var/opt/magma/certs/controller.crt"

  csfb:
    container_name: csfb
    image: feg_gateway_go
    build:
      context: ../../../
      dockerfile: feg/gateway/docker/go/Dockerfile
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/csfb -logtostderr=true -v=0

  eap_aka:
    container_name: eap_aka
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/eap_aka -logtostderr=true -v=0

  eap_router:
    container_name: eap_router
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/eap_router -logtostderr=true -v=0

  feg_hello:
    container_name: feg_hello
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/feg_hello -logtostderr=true -v=0

  health:
    container_name: health
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/gateway_health -logtostderr=true -v=0

  magmad:
    container_name: magmad
    image: feg_gateway_python
    build:
      context: ../../../
      dockerfile: feg/gateway/docker/python/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ../../../.cache/test_certs:/var/opt/magma/certs
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: python3 -m magma.magmad.main
    extra_hosts: *hosts_anchor

  metricsd:
    container_name: metricsd
    image: feg_gateway_python
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: python3 -m magma.metricsd.main

  session_proxy:
    container_name: session_proxy
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/session_proxy -logtostderr=true -v=0

  swx_proxy:
    container_name: swx_proxy
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/swx_proxy -logtostderr=true -v=0

  s6a_proxy:
    container_name: s6a_proxy
    image: feg_gateway_go
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/s6a_proxy -logtostderr=true -v=0

  redis:
    container_name: redis
    image: feg_gateway_python
    logging: *logging_anchor
    restart: always
    network_mode: host
    command: >
      sh -c "/usr/local/bin/generate_service_config.py --service=redis --template=redis &&
             /usr/bin/redis-server /var/opt/magma/tmp/redis.conf --daemonize no &&
             /usr/bin/redis-cli shutdown"
