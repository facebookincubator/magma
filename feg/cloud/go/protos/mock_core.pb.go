// Code generated by protoc-gen-go. DO NOT EDIT.
// source: feg/protos/mock_core.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protos "magma/lte/cloud/go/protos"
	protos1 "magma/orc8r/lib/go/protos"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MonitoringLevel int32

const (
	MonitoringLevel_SessionLevel MonitoringLevel = 0
	MonitoringLevel_RuleLevel    MonitoringLevel = 1
)

var MonitoringLevel_name = map[int32]string{
	0: "SessionLevel",
	1: "RuleLevel",
}

var MonitoringLevel_value = map[string]int32{
	"SessionLevel": 0,
	"RuleLevel":    1,
}

func (x MonitoringLevel) String() string {
	return proto.EnumName(MonitoringLevel_name, int32(x))
}

func (MonitoringLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{0}
}

type CCRequestType int32

const (
	// proto3 requires enums to start at value 0. This should not be used.
	CCRequestType__INVALID    CCRequestType = 0
	CCRequestType_INITIAL     CCRequestType = 1
	CCRequestType_UPDATE      CCRequestType = 2
	CCRequestType_TERMINATION CCRequestType = 3
)

var CCRequestType_name = map[int32]string{
	0: "_INVALID",
	1: "INITIAL",
	2: "UPDATE",
	3: "TERMINATION",
}

var CCRequestType_value = map[string]int32{
	"_INVALID":    0,
	"INITIAL":     1,
	"UPDATE":      2,
	"TERMINATION": 3,
}

func (x CCRequestType) String() string {
	return proto.EnumName(CCRequestType_name, int32(x))
}

func (CCRequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{1}
}

type Reply_ServerBehavior int32

const (
	Reply_REPLY_INSTANTLY Reply_ServerBehavior = 0
	Reply_REPLY_LATE      Reply_ServerBehavior = 1
	Reply_NO_REPLY        Reply_ServerBehavior = 2
)

var Reply_ServerBehavior_name = map[int32]string{
	0: "REPLY_INSTANTLY",
	1: "REPLY_LATE",
	2: "NO_REPLY",
}

var Reply_ServerBehavior_value = map[string]int32{
	"REPLY_INSTANTLY": 0,
	"REPLY_LATE":      1,
	"NO_REPLY":        2,
}

func (x Reply_ServerBehavior) String() string {
	return proto.EnumName(Reply_ServerBehavior_name, int32(x))
}

func (Reply_ServerBehavior) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{0, 0}
}

type CreditInfo_UnitType int32

const (
	CreditInfo_Bytes CreditInfo_UnitType = 0
	CreditInfo_Time  CreditInfo_UnitType = 1
)

var CreditInfo_UnitType_name = map[int32]string{
	0: "Bytes",
	1: "Time",
}

var CreditInfo_UnitType_value = map[string]int32{
	"Bytes": 0,
	"Time":  1,
}

func (x CreditInfo_UnitType) String() string {
	return proto.EnumName(CreditInfo_UnitType_name, int32(x))
}

func (CreditInfo_UnitType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{5, 0}
}

type SetExpectationsRequest_UnexpectedRequestBehavior int32

const (
	// Answer with a permanent failure diameter code, then the session will
	// be terminated. This will be the default behavior unless default CCAs
	// are specified
	SetExpectationsRequest_ANSWER_WITH_ERROR            SetExpectationsRequest_UnexpectedRequestBehavior = 0
	SetExpectationsRequest_CONTINUE_WITH_DEFAULT_ANSWER SetExpectationsRequest_UnexpectedRequestBehavior = 1
)

var SetExpectationsRequest_UnexpectedRequestBehavior_name = map[int32]string{
	0: "ANSWER_WITH_ERROR",
	1: "CONTINUE_WITH_DEFAULT_ANSWER",
}

var SetExpectationsRequest_UnexpectedRequestBehavior_value = map[string]int32{
	"ANSWER_WITH_ERROR":            0,
	"CONTINUE_WITH_DEFAULT_ANSWER": 1,
}

func (x SetExpectationsRequest_UnexpectedRequestBehavior) String() string {
	return proto.EnumName(SetExpectationsRequest_UnexpectedRequestBehavior_name, int32(x))
}

func (SetExpectationsRequest_UnexpectedRequestBehavior) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{12, 0}
}

type Reply struct {
	ServerBehavior Reply_ServerBehavior `protobuf:"varint,1,opt,name=server_behavior,json=serverBehavior,proto3,enum=magma.feg.Reply_ServerBehavior" json:"server_behavior,omitempty"`
	// reply delaying time in sec
	ReplyDelay int32 `protobuf:"varint,2,opt,name=reply_delay,json=replyDelay,proto3" json:"reply_delay,omitempty"`
	// Types that are valid to be assigned to SgsMessage:
	//	*Reply_AlertRequest
	//	*Reply_DownlinkUnitdata
	//	*Reply_EpsDetachAck
	//	*Reply_ImsiDetachAck
	//	*Reply_LocationUpdateAccept
	//	*Reply_LocationUpdateReject
	//	*Reply_MmInformationRequest
	//	*Reply_PagingRequest
	//	*Reply_ReleaseRequest
	//	*Reply_ServiceAbortRequest
	//	*Reply_ResetAck
	//	*Reply_ResetIndication
	//	*Reply_Status
	SgsMessage isReply_SgsMessage `protobuf_oneof:"sgs_message"`
	// Types that are valid to be assigned to GxgyMessage:
	//	*Reply_CreateSessionResponse
	//	*Reply_UpdateSessionResponse
	//	*Reply_SessionTerminateResponse
	GxgyMessage          isReply_GxgyMessage `protobuf_oneof:"gxgy_message"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{0}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetServerBehavior() Reply_ServerBehavior {
	if m != nil {
		return m.ServerBehavior
	}
	return Reply_REPLY_INSTANTLY
}

func (m *Reply) GetReplyDelay() int32 {
	if m != nil {
		return m.ReplyDelay
	}
	return 0
}

type isReply_SgsMessage interface {
	isReply_SgsMessage()
}

type Reply_AlertRequest struct {
	AlertRequest *AlertRequest `protobuf:"bytes,3,opt,name=alert_request,json=alertRequest,proto3,oneof"`
}

type Reply_DownlinkUnitdata struct {
	DownlinkUnitdata *DownlinkUnitdata `protobuf:"bytes,4,opt,name=downlink_unitdata,json=downlinkUnitdata,proto3,oneof"`
}

type Reply_EpsDetachAck struct {
	EpsDetachAck *EPSDetachAck `protobuf:"bytes,5,opt,name=eps_detach_ack,json=epsDetachAck,proto3,oneof"`
}

type Reply_ImsiDetachAck struct {
	ImsiDetachAck *IMSIDetachAck `protobuf:"bytes,6,opt,name=imsi_detach_ack,json=imsiDetachAck,proto3,oneof"`
}

type Reply_LocationUpdateAccept struct {
	LocationUpdateAccept *LocationUpdateAccept `protobuf:"bytes,7,opt,name=location_update_accept,json=locationUpdateAccept,proto3,oneof"`
}

type Reply_LocationUpdateReject struct {
	LocationUpdateReject *LocationUpdateReject `protobuf:"bytes,8,opt,name=location_update_reject,json=locationUpdateReject,proto3,oneof"`
}

type Reply_MmInformationRequest struct {
	MmInformationRequest *MMInformationRequest `protobuf:"bytes,9,opt,name=mm_information_request,json=mmInformationRequest,proto3,oneof"`
}

type Reply_PagingRequest struct {
	PagingRequest *PagingRequest `protobuf:"bytes,10,opt,name=paging_request,json=pagingRequest,proto3,oneof"`
}

type Reply_ReleaseRequest struct {
	ReleaseRequest *ReleaseRequest `protobuf:"bytes,11,opt,name=release_request,json=releaseRequest,proto3,oneof"`
}

type Reply_ServiceAbortRequest struct {
	ServiceAbortRequest *ServiceAbortRequest `protobuf:"bytes,12,opt,name=service_abort_request,json=serviceAbortRequest,proto3,oneof"`
}

type Reply_ResetAck struct {
	ResetAck *ResetAck `protobuf:"bytes,13,opt,name=reset_ack,json=resetAck,proto3,oneof"`
}

type Reply_ResetIndication struct {
	ResetIndication *ResetIndication `protobuf:"bytes,14,opt,name=reset_indication,json=resetIndication,proto3,oneof"`
}

type Reply_Status struct {
	Status *Status `protobuf:"bytes,15,opt,name=status,proto3,oneof"`
}

func (*Reply_AlertRequest) isReply_SgsMessage() {}

func (*Reply_DownlinkUnitdata) isReply_SgsMessage() {}

func (*Reply_EpsDetachAck) isReply_SgsMessage() {}

func (*Reply_ImsiDetachAck) isReply_SgsMessage() {}

func (*Reply_LocationUpdateAccept) isReply_SgsMessage() {}

func (*Reply_LocationUpdateReject) isReply_SgsMessage() {}

func (*Reply_MmInformationRequest) isReply_SgsMessage() {}

func (*Reply_PagingRequest) isReply_SgsMessage() {}

func (*Reply_ReleaseRequest) isReply_SgsMessage() {}

func (*Reply_ServiceAbortRequest) isReply_SgsMessage() {}

func (*Reply_ResetAck) isReply_SgsMessage() {}

func (*Reply_ResetIndication) isReply_SgsMessage() {}

func (*Reply_Status) isReply_SgsMessage() {}

func (m *Reply) GetSgsMessage() isReply_SgsMessage {
	if m != nil {
		return m.SgsMessage
	}
	return nil
}

func (m *Reply) GetAlertRequest() *AlertRequest {
	if x, ok := m.GetSgsMessage().(*Reply_AlertRequest); ok {
		return x.AlertRequest
	}
	return nil
}

func (m *Reply) GetDownlinkUnitdata() *DownlinkUnitdata {
	if x, ok := m.GetSgsMessage().(*Reply_DownlinkUnitdata); ok {
		return x.DownlinkUnitdata
	}
	return nil
}

func (m *Reply) GetEpsDetachAck() *EPSDetachAck {
	if x, ok := m.GetSgsMessage().(*Reply_EpsDetachAck); ok {
		return x.EpsDetachAck
	}
	return nil
}

func (m *Reply) GetImsiDetachAck() *IMSIDetachAck {
	if x, ok := m.GetSgsMessage().(*Reply_ImsiDetachAck); ok {
		return x.ImsiDetachAck
	}
	return nil
}

func (m *Reply) GetLocationUpdateAccept() *LocationUpdateAccept {
	if x, ok := m.GetSgsMessage().(*Reply_LocationUpdateAccept); ok {
		return x.LocationUpdateAccept
	}
	return nil
}

func (m *Reply) GetLocationUpdateReject() *LocationUpdateReject {
	if x, ok := m.GetSgsMessage().(*Reply_LocationUpdateReject); ok {
		return x.LocationUpdateReject
	}
	return nil
}

func (m *Reply) GetMmInformationRequest() *MMInformationRequest {
	if x, ok := m.GetSgsMessage().(*Reply_MmInformationRequest); ok {
		return x.MmInformationRequest
	}
	return nil
}

func (m *Reply) GetPagingRequest() *PagingRequest {
	if x, ok := m.GetSgsMessage().(*Reply_PagingRequest); ok {
		return x.PagingRequest
	}
	return nil
}

func (m *Reply) GetReleaseRequest() *ReleaseRequest {
	if x, ok := m.GetSgsMessage().(*Reply_ReleaseRequest); ok {
		return x.ReleaseRequest
	}
	return nil
}

func (m *Reply) GetServiceAbortRequest() *ServiceAbortRequest {
	if x, ok := m.GetSgsMessage().(*Reply_ServiceAbortRequest); ok {
		return x.ServiceAbortRequest
	}
	return nil
}

func (m *Reply) GetResetAck() *ResetAck {
	if x, ok := m.GetSgsMessage().(*Reply_ResetAck); ok {
		return x.ResetAck
	}
	return nil
}

func (m *Reply) GetResetIndication() *ResetIndication {
	if x, ok := m.GetSgsMessage().(*Reply_ResetIndication); ok {
		return x.ResetIndication
	}
	return nil
}

func (m *Reply) GetStatus() *Status {
	if x, ok := m.GetSgsMessage().(*Reply_Status); ok {
		return x.Status
	}
	return nil
}

type isReply_GxgyMessage interface {
	isReply_GxgyMessage()
}

type Reply_CreateSessionResponse struct {
	CreateSessionResponse *protos.CreateSessionResponse `protobuf:"bytes,16,opt,name=create_session_response,json=createSessionResponse,proto3,oneof"`
}

type Reply_UpdateSessionResponse struct {
	UpdateSessionResponse *protos.UpdateSessionResponse `protobuf:"bytes,17,opt,name=update_session_response,json=updateSessionResponse,proto3,oneof"`
}

type Reply_SessionTerminateResponse struct {
	SessionTerminateResponse *protos.SessionTerminateResponse `protobuf:"bytes,18,opt,name=session_terminate_response,json=sessionTerminateResponse,proto3,oneof"`
}

func (*Reply_CreateSessionResponse) isReply_GxgyMessage() {}

func (*Reply_UpdateSessionResponse) isReply_GxgyMessage() {}

func (*Reply_SessionTerminateResponse) isReply_GxgyMessage() {}

func (m *Reply) GetGxgyMessage() isReply_GxgyMessage {
	if m != nil {
		return m.GxgyMessage
	}
	return nil
}

func (m *Reply) GetCreateSessionResponse() *protos.CreateSessionResponse {
	if x, ok := m.GetGxgyMessage().(*Reply_CreateSessionResponse); ok {
		return x.CreateSessionResponse
	}
	return nil
}

func (m *Reply) GetUpdateSessionResponse() *protos.UpdateSessionResponse {
	if x, ok := m.GetGxgyMessage().(*Reply_UpdateSessionResponse); ok {
		return x.UpdateSessionResponse
	}
	return nil
}

func (m *Reply) GetSessionTerminateResponse() *protos.SessionTerminateResponse {
	if x, ok := m.GetGxgyMessage().(*Reply_SessionTerminateResponse); ok {
		return x.SessionTerminateResponse
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Reply) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Reply_AlertRequest)(nil),
		(*Reply_DownlinkUnitdata)(nil),
		(*Reply_EpsDetachAck)(nil),
		(*Reply_ImsiDetachAck)(nil),
		(*Reply_LocationUpdateAccept)(nil),
		(*Reply_LocationUpdateReject)(nil),
		(*Reply_MmInformationRequest)(nil),
		(*Reply_PagingRequest)(nil),
		(*Reply_ReleaseRequest)(nil),
		(*Reply_ServiceAbortRequest)(nil),
		(*Reply_ResetAck)(nil),
		(*Reply_ResetIndication)(nil),
		(*Reply_Status)(nil),
		(*Reply_CreateSessionResponse)(nil),
		(*Reply_UpdateSessionResponse)(nil),
		(*Reply_SessionTerminateResponse)(nil),
	}
}

type ExpectedRequest struct {
	// Types that are valid to be assigned to SgsMessage:
	//	*ExpectedRequest_AlertAck
	//	*ExpectedRequest_AlertReject
	//	*ExpectedRequest_EpsDetachIndication
	//	*ExpectedRequest_ImsiDetachIndication
	//	*ExpectedRequest_LocationUpdateRequest
	//	*ExpectedRequest_PagingReject
	//	*ExpectedRequest_ServiceRequest
	//	*ExpectedRequest_TmsiReallocationComplete
	//	*ExpectedRequest_UeActivityIndication
	//	*ExpectedRequest_UeUnreachable
	//	*ExpectedRequest_UplinkUnitdata
	//	*ExpectedRequest_ResetAck
	//	*ExpectedRequest_ResetIndication
	//	*ExpectedRequest_Status
	SgsMessage isExpectedRequest_SgsMessage `protobuf_oneof:"sgs_message"`
	// Types that are valid to be assigned to GxgyMessage:
	//	*ExpectedRequest_CreateSessionRequest
	//	*ExpectedRequest_UpdateSessionRequest
	//	*ExpectedRequest_SessionTerminateRequest
	GxgyMessage          isExpectedRequest_GxgyMessage `protobuf_oneof:"gxgy_message"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *ExpectedRequest) Reset()         { *m = ExpectedRequest{} }
func (m *ExpectedRequest) String() string { return proto.CompactTextString(m) }
func (*ExpectedRequest) ProtoMessage()    {}
func (*ExpectedRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{1}
}

func (m *ExpectedRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpectedRequest.Unmarshal(m, b)
}
func (m *ExpectedRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpectedRequest.Marshal(b, m, deterministic)
}
func (m *ExpectedRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpectedRequest.Merge(m, src)
}
func (m *ExpectedRequest) XXX_Size() int {
	return xxx_messageInfo_ExpectedRequest.Size(m)
}
func (m *ExpectedRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpectedRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExpectedRequest proto.InternalMessageInfo

type isExpectedRequest_SgsMessage interface {
	isExpectedRequest_SgsMessage()
}

type ExpectedRequest_AlertAck struct {
	AlertAck *AlertAck `protobuf:"bytes,1,opt,name=alert_ack,json=alertAck,proto3,oneof"`
}

type ExpectedRequest_AlertReject struct {
	AlertReject *AlertReject `protobuf:"bytes,2,opt,name=alert_reject,json=alertReject,proto3,oneof"`
}

type ExpectedRequest_EpsDetachIndication struct {
	EpsDetachIndication *EPSDetachIndication `protobuf:"bytes,3,opt,name=eps_detach_indication,json=epsDetachIndication,proto3,oneof"`
}

type ExpectedRequest_ImsiDetachIndication struct {
	ImsiDetachIndication *IMSIDetachIndication `protobuf:"bytes,4,opt,name=imsi_detach_indication,json=imsiDetachIndication,proto3,oneof"`
}

type ExpectedRequest_LocationUpdateRequest struct {
	LocationUpdateRequest *LocationUpdateRequest `protobuf:"bytes,5,opt,name=location_update_request,json=locationUpdateRequest,proto3,oneof"`
}

type ExpectedRequest_PagingReject struct {
	PagingReject *PagingReject `protobuf:"bytes,6,opt,name=paging_reject,json=pagingReject,proto3,oneof"`
}

type ExpectedRequest_ServiceRequest struct {
	ServiceRequest *ServiceRequest `protobuf:"bytes,7,opt,name=service_request,json=serviceRequest,proto3,oneof"`
}

type ExpectedRequest_TmsiReallocationComplete struct {
	TmsiReallocationComplete *TMSIReallocationComplete `protobuf:"bytes,8,opt,name=tmsi_reallocation_complete,json=tmsiReallocationComplete,proto3,oneof"`
}

type ExpectedRequest_UeActivityIndication struct {
	UeActivityIndication *UEActivityIndication `protobuf:"bytes,9,opt,name=ue_activity_indication,json=ueActivityIndication,proto3,oneof"`
}

type ExpectedRequest_UeUnreachable struct {
	UeUnreachable *UEUnreachable `protobuf:"bytes,10,opt,name=ue_unreachable,json=ueUnreachable,proto3,oneof"`
}

type ExpectedRequest_UplinkUnitdata struct {
	UplinkUnitdata *UplinkUnitdata `protobuf:"bytes,11,opt,name=uplink_unitdata,json=uplinkUnitdata,proto3,oneof"`
}

type ExpectedRequest_ResetAck struct {
	ResetAck *ResetAck `protobuf:"bytes,12,opt,name=reset_ack,json=resetAck,proto3,oneof"`
}

type ExpectedRequest_ResetIndication struct {
	ResetIndication *ResetIndication `protobuf:"bytes,13,opt,name=reset_indication,json=resetIndication,proto3,oneof"`
}

type ExpectedRequest_Status struct {
	Status *Status `protobuf:"bytes,14,opt,name=status,proto3,oneof"`
}

func (*ExpectedRequest_AlertAck) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_AlertReject) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_EpsDetachIndication) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_ImsiDetachIndication) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_LocationUpdateRequest) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_PagingReject) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_ServiceRequest) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_TmsiReallocationComplete) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_UeActivityIndication) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_UeUnreachable) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_UplinkUnitdata) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_ResetAck) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_ResetIndication) isExpectedRequest_SgsMessage() {}

func (*ExpectedRequest_Status) isExpectedRequest_SgsMessage() {}

func (m *ExpectedRequest) GetSgsMessage() isExpectedRequest_SgsMessage {
	if m != nil {
		return m.SgsMessage
	}
	return nil
}

func (m *ExpectedRequest) GetAlertAck() *AlertAck {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_AlertAck); ok {
		return x.AlertAck
	}
	return nil
}

func (m *ExpectedRequest) GetAlertReject() *AlertReject {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_AlertReject); ok {
		return x.AlertReject
	}
	return nil
}

func (m *ExpectedRequest) GetEpsDetachIndication() *EPSDetachIndication {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_EpsDetachIndication); ok {
		return x.EpsDetachIndication
	}
	return nil
}

func (m *ExpectedRequest) GetImsiDetachIndication() *IMSIDetachIndication {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_ImsiDetachIndication); ok {
		return x.ImsiDetachIndication
	}
	return nil
}

func (m *ExpectedRequest) GetLocationUpdateRequest() *LocationUpdateRequest {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_LocationUpdateRequest); ok {
		return x.LocationUpdateRequest
	}
	return nil
}

func (m *ExpectedRequest) GetPagingReject() *PagingReject {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_PagingReject); ok {
		return x.PagingReject
	}
	return nil
}

func (m *ExpectedRequest) GetServiceRequest() *ServiceRequest {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_ServiceRequest); ok {
		return x.ServiceRequest
	}
	return nil
}

func (m *ExpectedRequest) GetTmsiReallocationComplete() *TMSIReallocationComplete {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_TmsiReallocationComplete); ok {
		return x.TmsiReallocationComplete
	}
	return nil
}

func (m *ExpectedRequest) GetUeActivityIndication() *UEActivityIndication {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_UeActivityIndication); ok {
		return x.UeActivityIndication
	}
	return nil
}

func (m *ExpectedRequest) GetUeUnreachable() *UEUnreachable {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_UeUnreachable); ok {
		return x.UeUnreachable
	}
	return nil
}

func (m *ExpectedRequest) GetUplinkUnitdata() *UplinkUnitdata {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_UplinkUnitdata); ok {
		return x.UplinkUnitdata
	}
	return nil
}

func (m *ExpectedRequest) GetResetAck() *ResetAck {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_ResetAck); ok {
		return x.ResetAck
	}
	return nil
}

func (m *ExpectedRequest) GetResetIndication() *ResetIndication {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_ResetIndication); ok {
		return x.ResetIndication
	}
	return nil
}

func (m *ExpectedRequest) GetStatus() *Status {
	if x, ok := m.GetSgsMessage().(*ExpectedRequest_Status); ok {
		return x.Status
	}
	return nil
}

type isExpectedRequest_GxgyMessage interface {
	isExpectedRequest_GxgyMessage()
}

type ExpectedRequest_CreateSessionRequest struct {
	CreateSessionRequest *protos.CreateSessionRequest `protobuf:"bytes,15,opt,name=create_session_request,json=createSessionRequest,proto3,oneof"`
}

type ExpectedRequest_UpdateSessionRequest struct {
	UpdateSessionRequest *protos.UpdateSessionRequest `protobuf:"bytes,16,opt,name=update_session_request,json=updateSessionRequest,proto3,oneof"`
}

type ExpectedRequest_SessionTerminateRequest struct {
	SessionTerminateRequest *protos.SessionTerminateRequest `protobuf:"bytes,17,opt,name=session_terminate_request,json=sessionTerminateRequest,proto3,oneof"`
}

func (*ExpectedRequest_CreateSessionRequest) isExpectedRequest_GxgyMessage() {}

func (*ExpectedRequest_UpdateSessionRequest) isExpectedRequest_GxgyMessage() {}

func (*ExpectedRequest_SessionTerminateRequest) isExpectedRequest_GxgyMessage() {}

func (m *ExpectedRequest) GetGxgyMessage() isExpectedRequest_GxgyMessage {
	if m != nil {
		return m.GxgyMessage
	}
	return nil
}

func (m *ExpectedRequest) GetCreateSessionRequest() *protos.CreateSessionRequest {
	if x, ok := m.GetGxgyMessage().(*ExpectedRequest_CreateSessionRequest); ok {
		return x.CreateSessionRequest
	}
	return nil
}

func (m *ExpectedRequest) GetUpdateSessionRequest() *protos.UpdateSessionRequest {
	if x, ok := m.GetGxgyMessage().(*ExpectedRequest_UpdateSessionRequest); ok {
		return x.UpdateSessionRequest
	}
	return nil
}

func (m *ExpectedRequest) GetSessionTerminateRequest() *protos.SessionTerminateRequest {
	if x, ok := m.GetGxgyMessage().(*ExpectedRequest_SessionTerminateRequest); ok {
		return x.SessionTerminateRequest
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExpectedRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExpectedRequest_AlertAck)(nil),
		(*ExpectedRequest_AlertReject)(nil),
		(*ExpectedRequest_EpsDetachIndication)(nil),
		(*ExpectedRequest_ImsiDetachIndication)(nil),
		(*ExpectedRequest_LocationUpdateRequest)(nil),
		(*ExpectedRequest_PagingReject)(nil),
		(*ExpectedRequest_ServiceRequest)(nil),
		(*ExpectedRequest_TmsiReallocationComplete)(nil),
		(*ExpectedRequest_UeActivityIndication)(nil),
		(*ExpectedRequest_UeUnreachable)(nil),
		(*ExpectedRequest_UplinkUnitdata)(nil),
		(*ExpectedRequest_ResetAck)(nil),
		(*ExpectedRequest_ResetIndication)(nil),
		(*ExpectedRequest_Status)(nil),
		(*ExpectedRequest_CreateSessionRequest)(nil),
		(*ExpectedRequest_UpdateSessionRequest)(nil),
		(*ExpectedRequest_SessionTerminateRequest)(nil),
	}
}

type RequestReply struct {
	Request              *ExpectedRequest `protobuf:"bytes,1,opt,name=request,proto3" json:"request,omitempty"`
	Reply                *Reply           `protobuf:"bytes,2,opt,name=reply,proto3" json:"reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RequestReply) Reset()         { *m = RequestReply{} }
func (m *RequestReply) String() string { return proto.CompactTextString(m) }
func (*RequestReply) ProtoMessage()    {}
func (*RequestReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{2}
}

func (m *RequestReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestReply.Unmarshal(m, b)
}
func (m *RequestReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestReply.Marshal(b, m, deterministic)
}
func (m *RequestReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestReply.Merge(m, src)
}
func (m *RequestReply) XXX_Size() int {
	return xxx_messageInfo_RequestReply.Size(m)
}
func (m *RequestReply) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestReply.DiscardUnknown(m)
}

var xxx_messageInfo_RequestReply proto.InternalMessageInfo

func (m *RequestReply) GetRequest() *ExpectedRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *RequestReply) GetReply() *Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

type ServerConfiguration struct {
	RequestReply         []*RequestReply `protobuf:"bytes,1,rep,name=request_reply,json=requestReply,proto3" json:"request_reply,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ServerConfiguration) Reset()         { *m = ServerConfiguration{} }
func (m *ServerConfiguration) String() string { return proto.CompactTextString(m) }
func (*ServerConfiguration) ProtoMessage()    {}
func (*ServerConfiguration) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{3}
}

func (m *ServerConfiguration) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerConfiguration.Unmarshal(m, b)
}
func (m *ServerConfiguration) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerConfiguration.Marshal(b, m, deterministic)
}
func (m *ServerConfiguration) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerConfiguration.Merge(m, src)
}
func (m *ServerConfiguration) XXX_Size() int {
	return xxx_messageInfo_ServerConfiguration.Size(m)
}
func (m *ServerConfiguration) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerConfiguration.DiscardUnknown(m)
}

var xxx_messageInfo_ServerConfiguration proto.InternalMessageInfo

func (m *ServerConfiguration) GetRequestReply() []*RequestReply {
	if m != nil {
		return m.RequestReply
	}
	return nil
}

type OCSConfig struct {
	MaxUsageBytes        uint32   `protobuf:"varint,1,opt,name=max_usage_bytes,json=maxUsageBytes,proto3" json:"max_usage_bytes,omitempty"`
	MaxUsageTime         uint32   `protobuf:"varint,2,opt,name=max_usage_time,json=maxUsageTime,proto3" json:"max_usage_time,omitempty"`
	ValidityTime         uint32   `protobuf:"varint,3,opt,name=validity_time,json=validityTime,proto3" json:"validity_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OCSConfig) Reset()         { *m = OCSConfig{} }
func (m *OCSConfig) String() string { return proto.CompactTextString(m) }
func (*OCSConfig) ProtoMessage()    {}
func (*OCSConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{4}
}

func (m *OCSConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OCSConfig.Unmarshal(m, b)
}
func (m *OCSConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OCSConfig.Marshal(b, m, deterministic)
}
func (m *OCSConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OCSConfig.Merge(m, src)
}
func (m *OCSConfig) XXX_Size() int {
	return xxx_messageInfo_OCSConfig.Size(m)
}
func (m *OCSConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_OCSConfig.DiscardUnknown(m)
}

var xxx_messageInfo_OCSConfig proto.InternalMessageInfo

func (m *OCSConfig) GetMaxUsageBytes() uint32 {
	if m != nil {
		return m.MaxUsageBytes
	}
	return 0
}

func (m *OCSConfig) GetMaxUsageTime() uint32 {
	if m != nil {
		return m.MaxUsageTime
	}
	return 0
}

func (m *OCSConfig) GetValidityTime() uint32 {
	if m != nil {
		return m.ValidityTime
	}
	return 0
}

type CreditInfo struct {
	Imsi                 string              `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	ChargingKey          uint32              `protobuf:"varint,2,opt,name=charging_key,json=chargingKey,proto3" json:"charging_key,omitempty"`
	Volume               uint64              `protobuf:"varint,3,opt,name=volume,proto3" json:"volume,omitempty"`
	UnitType             CreditInfo_UnitType `protobuf:"varint,4,opt,name=unit_type,json=unitType,proto3,enum=magma.feg.CreditInfo_UnitType" json:"unit_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreditInfo) Reset()         { *m = CreditInfo{} }
func (m *CreditInfo) String() string { return proto.CompactTextString(m) }
func (*CreditInfo) ProtoMessage()    {}
func (*CreditInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{5}
}

func (m *CreditInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreditInfo.Unmarshal(m, b)
}
func (m *CreditInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreditInfo.Marshal(b, m, deterministic)
}
func (m *CreditInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreditInfo.Merge(m, src)
}
func (m *CreditInfo) XXX_Size() int {
	return xxx_messageInfo_CreditInfo.Size(m)
}
func (m *CreditInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CreditInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CreditInfo proto.InternalMessageInfo

func (m *CreditInfo) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *CreditInfo) GetChargingKey() uint32 {
	if m != nil {
		return m.ChargingKey
	}
	return 0
}

func (m *CreditInfo) GetVolume() uint64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *CreditInfo) GetUnitType() CreditInfo_UnitType {
	if m != nil {
		return m.UnitType
	}
	return CreditInfo_Bytes
}

type ReAuthTarget struct {
	Imsi                 string   `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RatingGroup          uint32   `protobuf:"varint,2,opt,name=rating_group,json=ratingGroup,proto3" json:"rating_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReAuthTarget) Reset()         { *m = ReAuthTarget{} }
func (m *ReAuthTarget) String() string { return proto.CompactTextString(m) }
func (*ReAuthTarget) ProtoMessage()    {}
func (*ReAuthTarget) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{6}
}

func (m *ReAuthTarget) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReAuthTarget.Unmarshal(m, b)
}
func (m *ReAuthTarget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReAuthTarget.Marshal(b, m, deterministic)
}
func (m *ReAuthTarget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReAuthTarget.Merge(m, src)
}
func (m *ReAuthTarget) XXX_Size() int {
	return xxx_messageInfo_ReAuthTarget.Size(m)
}
func (m *ReAuthTarget) XXX_DiscardUnknown() {
	xxx_messageInfo_ReAuthTarget.DiscardUnknown(m)
}

var xxx_messageInfo_ReAuthTarget proto.InternalMessageInfo

func (m *ReAuthTarget) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *ReAuthTarget) GetRatingGroup() uint32 {
	if m != nil {
		return m.RatingGroup
	}
	return 0
}

type ReAuthAnswer struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	ResultCode           uint32   `protobuf:"varint,2,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReAuthAnswer) Reset()         { *m = ReAuthAnswer{} }
func (m *ReAuthAnswer) String() string { return proto.CompactTextString(m) }
func (*ReAuthAnswer) ProtoMessage()    {}
func (*ReAuthAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{7}
}

func (m *ReAuthAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReAuthAnswer.Unmarshal(m, b)
}
func (m *ReAuthAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReAuthAnswer.Marshal(b, m, deterministic)
}
func (m *ReAuthAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReAuthAnswer.Merge(m, src)
}
func (m *ReAuthAnswer) XXX_Size() int {
	return xxx_messageInfo_ReAuthAnswer.Size(m)
}
func (m *ReAuthAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_ReAuthAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_ReAuthAnswer proto.InternalMessageInfo

func (m *ReAuthAnswer) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *ReAuthAnswer) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

type AccountRules struct {
	Imsi                 string            `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RuleNames            []string          `protobuf:"bytes,2,rep,name=rule_names,json=ruleNames,proto3" json:"rule_names,omitempty"`
	RuleBaseNames        []string          `protobuf:"bytes,3,rep,name=rule_base_names,json=ruleBaseNames,proto3" json:"rule_base_names,omitempty"`
	RuleDefinitions      []*RuleDefinition `protobuf:"bytes,4,rep,name=rule_definitions,json=ruleDefinitions,proto3" json:"rule_definitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AccountRules) Reset()         { *m = AccountRules{} }
func (m *AccountRules) String() string { return proto.CompactTextString(m) }
func (*AccountRules) ProtoMessage()    {}
func (*AccountRules) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{8}
}

func (m *AccountRules) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountRules.Unmarshal(m, b)
}
func (m *AccountRules) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountRules.Marshal(b, m, deterministic)
}
func (m *AccountRules) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountRules.Merge(m, src)
}
func (m *AccountRules) XXX_Size() int {
	return xxx_messageInfo_AccountRules.Size(m)
}
func (m *AccountRules) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountRules.DiscardUnknown(m)
}

var xxx_messageInfo_AccountRules proto.InternalMessageInfo

func (m *AccountRules) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *AccountRules) GetRuleNames() []string {
	if m != nil {
		return m.RuleNames
	}
	return nil
}

func (m *AccountRules) GetRuleBaseNames() []string {
	if m != nil {
		return m.RuleBaseNames
	}
	return nil
}

func (m *AccountRules) GetRuleDefinitions() []*RuleDefinition {
	if m != nil {
		return m.RuleDefinitions
	}
	return nil
}

type RuleDefinition struct {
	RuleName             string                      `protobuf:"bytes,1,opt,name=rule_name,json=ruleName,proto3" json:"rule_name,omitempty"`
	RatingGroup          uint32                      `protobuf:"varint,2,opt,name=rating_group,json=ratingGroup,proto3" json:"rating_group,omitempty"`
	Precedence           uint32                      `protobuf:"varint,3,opt,name=precedence,proto3" json:"precedence,omitempty"`
	MonitoringKey        string                      `protobuf:"bytes,4,opt,name=monitoring_key,json=monitoringKey,proto3" json:"monitoring_key,omitempty"`
	FlowDescriptions     []string                    `protobuf:"bytes,5,rep,name=flow_descriptions,json=flowDescriptions,proto3" json:"flow_descriptions,omitempty"`
	RedirectInformation  *protos.RedirectInformation `protobuf:"bytes,7,opt,name=redirect_information,json=redirectInformation,proto3" json:"redirect_information,omitempty"`
	QosInformation       *protos.FlowQos             `protobuf:"bytes,8,opt,name=qos_information,json=qosInformation,proto3" json:"qos_information,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *RuleDefinition) Reset()         { *m = RuleDefinition{} }
func (m *RuleDefinition) String() string { return proto.CompactTextString(m) }
func (*RuleDefinition) ProtoMessage()    {}
func (*RuleDefinition) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{9}
}

func (m *RuleDefinition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleDefinition.Unmarshal(m, b)
}
func (m *RuleDefinition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleDefinition.Marshal(b, m, deterministic)
}
func (m *RuleDefinition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleDefinition.Merge(m, src)
}
func (m *RuleDefinition) XXX_Size() int {
	return xxx_messageInfo_RuleDefinition.Size(m)
}
func (m *RuleDefinition) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleDefinition.DiscardUnknown(m)
}

var xxx_messageInfo_RuleDefinition proto.InternalMessageInfo

func (m *RuleDefinition) GetRuleName() string {
	if m != nil {
		return m.RuleName
	}
	return ""
}

func (m *RuleDefinition) GetRatingGroup() uint32 {
	if m != nil {
		return m.RatingGroup
	}
	return 0
}

func (m *RuleDefinition) GetPrecedence() uint32 {
	if m != nil {
		return m.Precedence
	}
	return 0
}

func (m *RuleDefinition) GetMonitoringKey() string {
	if m != nil {
		return m.MonitoringKey
	}
	return ""
}

func (m *RuleDefinition) GetFlowDescriptions() []string {
	if m != nil {
		return m.FlowDescriptions
	}
	return nil
}

func (m *RuleDefinition) GetRedirectInformation() *protos.RedirectInformation {
	if m != nil {
		return m.RedirectInformation
	}
	return nil
}

func (m *RuleDefinition) GetQosInformation() *protos.FlowQos {
	if m != nil {
		return m.QosInformation
	}
	return nil
}

type SetUsageMonitorRequest struct {
	Imsi                 string          `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	UsageMonitorCredits  []*UsageMonitor `protobuf:"bytes,2,rep,name=usage_monitor_credits,json=usageMonitorCredits,proto3" json:"usage_monitor_credits,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SetUsageMonitorRequest) Reset()         { *m = SetUsageMonitorRequest{} }
func (m *SetUsageMonitorRequest) String() string { return proto.CompactTextString(m) }
func (*SetUsageMonitorRequest) ProtoMessage()    {}
func (*SetUsageMonitorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{10}
}

func (m *SetUsageMonitorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetUsageMonitorRequest.Unmarshal(m, b)
}
func (m *SetUsageMonitorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetUsageMonitorRequest.Marshal(b, m, deterministic)
}
func (m *SetUsageMonitorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetUsageMonitorRequest.Merge(m, src)
}
func (m *SetUsageMonitorRequest) XXX_Size() int {
	return xxx_messageInfo_SetUsageMonitorRequest.Size(m)
}
func (m *SetUsageMonitorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetUsageMonitorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetUsageMonitorRequest proto.InternalMessageInfo

func (m *SetUsageMonitorRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *SetUsageMonitorRequest) GetUsageMonitorCredits() []*UsageMonitor {
	if m != nil {
		return m.UsageMonitorCredits
	}
	return nil
}

type UsageMonitor struct {
	// the usage monitoring information the PCRF sends per answer
	MonitorInfoPerRequest *UsageMonitoringInformation `protobuf:"bytes,1,opt,name=monitor_info_per_request,json=monitorInfoPerRequest,proto3" json:"monitor_info_per_request,omitempty"`
	// the total amount of quota assigned to the monitoring key
	TotalQuota           *Octets  `protobuf:"bytes,2,opt,name=total_quota,json=totalQuota,proto3" json:"total_quota,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsageMonitor) Reset()         { *m = UsageMonitor{} }
func (m *UsageMonitor) String() string { return proto.CompactTextString(m) }
func (*UsageMonitor) ProtoMessage()    {}
func (*UsageMonitor) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{11}
}

func (m *UsageMonitor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitor.Unmarshal(m, b)
}
func (m *UsageMonitor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitor.Marshal(b, m, deterministic)
}
func (m *UsageMonitor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitor.Merge(m, src)
}
func (m *UsageMonitor) XXX_Size() int {
	return xxx_messageInfo_UsageMonitor.Size(m)
}
func (m *UsageMonitor) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitor.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitor proto.InternalMessageInfo

func (m *UsageMonitor) GetMonitorInfoPerRequest() *UsageMonitoringInformation {
	if m != nil {
		return m.MonitorInfoPerRequest
	}
	return nil
}

func (m *UsageMonitor) GetTotalQuota() *Octets {
	if m != nil {
		return m.TotalQuota
	}
	return nil
}

type SetExpectationsRequest struct {
	Expectations              []*Expectation                                   `protobuf:"bytes,1,rep,name=expectations,proto3" json:"expectations,omitempty"`
	UnexpectedRequestBehavior SetExpectationsRequest_UnexpectedRequestBehavior `protobuf:"varint,2,opt,name=unexpected_request_behavior,json=unexpectedRequestBehavior,proto3,enum=magma.feg.SetExpectationsRequest_UnexpectedRequestBehavior" json:"unexpected_request_behavior,omitempty"`
	GxDefaultCca              *GxCreditControlAnswer                           `protobuf:"bytes,3,opt,name=gx_default_cca,json=gxDefaultCca,proto3" json:"gx_default_cca,omitempty"`
	GyDefaultCca              *GyCreditControlAnswer                           `protobuf:"bytes,4,opt,name=gy_default_cca,json=gyDefaultCca,proto3" json:"gy_default_cca,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                         `json:"-"`
	XXX_unrecognized          []byte                                           `json:"-"`
	XXX_sizecache             int32                                            `json:"-"`
}

func (m *SetExpectationsRequest) Reset()         { *m = SetExpectationsRequest{} }
func (m *SetExpectationsRequest) String() string { return proto.CompactTextString(m) }
func (*SetExpectationsRequest) ProtoMessage()    {}
func (*SetExpectationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{12}
}

func (m *SetExpectationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetExpectationsRequest.Unmarshal(m, b)
}
func (m *SetExpectationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetExpectationsRequest.Marshal(b, m, deterministic)
}
func (m *SetExpectationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetExpectationsRequest.Merge(m, src)
}
func (m *SetExpectationsRequest) XXX_Size() int {
	return xxx_messageInfo_SetExpectationsRequest.Size(m)
}
func (m *SetExpectationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetExpectationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetExpectationsRequest proto.InternalMessageInfo

func (m *SetExpectationsRequest) GetExpectations() []*Expectation {
	if m != nil {
		return m.Expectations
	}
	return nil
}

func (m *SetExpectationsRequest) GetUnexpectedRequestBehavior() SetExpectationsRequest_UnexpectedRequestBehavior {
	if m != nil {
		return m.UnexpectedRequestBehavior
	}
	return SetExpectationsRequest_ANSWER_WITH_ERROR
}

func (m *SetExpectationsRequest) GetGxDefaultCca() *GxCreditControlAnswer {
	if m != nil {
		return m.GxDefaultCca
	}
	return nil
}

func (m *SetExpectationsRequest) GetGyDefaultCca() *GyCreditControlAnswer {
	if m != nil {
		return m.GyDefaultCca
	}
	return nil
}

type Expectation struct {
	// Types that are valid to be assigned to Expectation:
	//	*Expectation_GxCcExpectation
	//	*Expectation_GyCcExpectation
	Expectation          isExpectation_Expectation `protobuf_oneof:"expectation"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Expectation) Reset()         { *m = Expectation{} }
func (m *Expectation) String() string { return proto.CompactTextString(m) }
func (*Expectation) ProtoMessage()    {}
func (*Expectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{13}
}

func (m *Expectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Expectation.Unmarshal(m, b)
}
func (m *Expectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Expectation.Marshal(b, m, deterministic)
}
func (m *Expectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Expectation.Merge(m, src)
}
func (m *Expectation) XXX_Size() int {
	return xxx_messageInfo_Expectation.Size(m)
}
func (m *Expectation) XXX_DiscardUnknown() {
	xxx_messageInfo_Expectation.DiscardUnknown(m)
}

var xxx_messageInfo_Expectation proto.InternalMessageInfo

type isExpectation_Expectation interface {
	isExpectation_Expectation()
}

type Expectation_GxCcExpectation struct {
	GxCcExpectation *GxCreditControlExpectation `protobuf:"bytes,1,opt,name=gx_cc_expectation,json=gxCcExpectation,proto3,oneof"`
}

type Expectation_GyCcExpectation struct {
	GyCcExpectation *GyCreditControlExpectation `protobuf:"bytes,2,opt,name=gy_cc_expectation,json=gyCcExpectation,proto3,oneof"`
}

func (*Expectation_GxCcExpectation) isExpectation_Expectation() {}

func (*Expectation_GyCcExpectation) isExpectation_Expectation() {}

func (m *Expectation) GetExpectation() isExpectation_Expectation {
	if m != nil {
		return m.Expectation
	}
	return nil
}

func (m *Expectation) GetGxCcExpectation() *GxCreditControlExpectation {
	if x, ok := m.GetExpectation().(*Expectation_GxCcExpectation); ok {
		return x.GxCcExpectation
	}
	return nil
}

func (m *Expectation) GetGyCcExpectation() *GyCreditControlExpectation {
	if x, ok := m.GetExpectation().(*Expectation_GyCcExpectation); ok {
		return x.GyCcExpectation
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Expectation) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Expectation_GxCcExpectation)(nil),
		(*Expectation_GyCcExpectation)(nil),
	}
}

type AssertExpectationsResult struct {
	Results              []*ExpectationResult      `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	GxUnexpectedRequests []*GxCreditControlRequest `protobuf:"bytes,2,rep,name=gx_unexpected_requests,json=gxUnexpectedRequests,proto3" json:"gx_unexpected_requests,omitempty"`
	GyUnexpectedRequests []*GyCreditControlRequest `protobuf:"bytes,3,rep,name=gy_unexpected_requests,json=gyUnexpectedRequests,proto3" json:"gy_unexpected_requests,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AssertExpectationsResult) Reset()         { *m = AssertExpectationsResult{} }
func (m *AssertExpectationsResult) String() string { return proto.CompactTextString(m) }
func (*AssertExpectationsResult) ProtoMessage()    {}
func (*AssertExpectationsResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{14}
}

func (m *AssertExpectationsResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssertExpectationsResult.Unmarshal(m, b)
}
func (m *AssertExpectationsResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssertExpectationsResult.Marshal(b, m, deterministic)
}
func (m *AssertExpectationsResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssertExpectationsResult.Merge(m, src)
}
func (m *AssertExpectationsResult) XXX_Size() int {
	return xxx_messageInfo_AssertExpectationsResult.Size(m)
}
func (m *AssertExpectationsResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AssertExpectationsResult.DiscardUnknown(m)
}

var xxx_messageInfo_AssertExpectationsResult proto.InternalMessageInfo

func (m *AssertExpectationsResult) GetResults() []*ExpectationResult {
	if m != nil {
		return m.Results
	}
	return nil
}

func (m *AssertExpectationsResult) GetGxUnexpectedRequests() []*GxCreditControlRequest {
	if m != nil {
		return m.GxUnexpectedRequests
	}
	return nil
}

func (m *AssertExpectationsResult) GetGyUnexpectedRequests() []*GyCreditControlRequest {
	if m != nil {
		return m.GyUnexpectedRequests
	}
	return nil
}

type ExpectationResult struct {
	Expectation          *Expectation `protobuf:"bytes,1,opt,name=expectation,proto3" json:"expectation,omitempty"`
	ExpectationMet       bool         `protobuf:"varint,2,opt,name=expectation_met,json=expectationMet,proto3" json:"expectation_met,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExpectationResult) Reset()         { *m = ExpectationResult{} }
func (m *ExpectationResult) String() string { return proto.CompactTextString(m) }
func (*ExpectationResult) ProtoMessage()    {}
func (*ExpectationResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{15}
}

func (m *ExpectationResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExpectationResult.Unmarshal(m, b)
}
func (m *ExpectationResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExpectationResult.Marshal(b, m, deterministic)
}
func (m *ExpectationResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExpectationResult.Merge(m, src)
}
func (m *ExpectationResult) XXX_Size() int {
	return xxx_messageInfo_ExpectationResult.Size(m)
}
func (m *ExpectationResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExpectationResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExpectationResult proto.InternalMessageInfo

func (m *ExpectationResult) GetExpectation() *Expectation {
	if m != nil {
		return m.Expectation
	}
	return nil
}

func (m *ExpectationResult) GetExpectationMet() bool {
	if m != nil {
		return m.ExpectationMet
	}
	return false
}

type GxCreditControlExpectation struct {
	ExpectedRequest      *GxCreditControlRequest `protobuf:"bytes,1,opt,name=expected_request,json=expectedRequest,proto3" json:"expected_request,omitempty"`
	Answer               *GxCreditControlAnswer  `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GxCreditControlExpectation) Reset()         { *m = GxCreditControlExpectation{} }
func (m *GxCreditControlExpectation) String() string { return proto.CompactTextString(m) }
func (*GxCreditControlExpectation) ProtoMessage()    {}
func (*GxCreditControlExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{16}
}

func (m *GxCreditControlExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GxCreditControlExpectation.Unmarshal(m, b)
}
func (m *GxCreditControlExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GxCreditControlExpectation.Marshal(b, m, deterministic)
}
func (m *GxCreditControlExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GxCreditControlExpectation.Merge(m, src)
}
func (m *GxCreditControlExpectation) XXX_Size() int {
	return xxx_messageInfo_GxCreditControlExpectation.Size(m)
}
func (m *GxCreditControlExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_GxCreditControlExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_GxCreditControlExpectation proto.InternalMessageInfo

func (m *GxCreditControlExpectation) GetExpectedRequest() *GxCreditControlRequest {
	if m != nil {
		return m.ExpectedRequest
	}
	return nil
}

func (m *GxCreditControlExpectation) GetAnswer() *GxCreditControlAnswer {
	if m != nil {
		return m.Answer
	}
	return nil
}

type GyCreditControlExpectation struct {
	ExpectedRequest      *GyCreditControlRequest `protobuf:"bytes,1,opt,name=expected_request,json=expectedRequest,proto3" json:"expected_request,omitempty"`
	Answer               *GyCreditControlAnswer  `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *GyCreditControlExpectation) Reset()         { *m = GyCreditControlExpectation{} }
func (m *GyCreditControlExpectation) String() string { return proto.CompactTextString(m) }
func (*GyCreditControlExpectation) ProtoMessage()    {}
func (*GyCreditControlExpectation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{17}
}

func (m *GyCreditControlExpectation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GyCreditControlExpectation.Unmarshal(m, b)
}
func (m *GyCreditControlExpectation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GyCreditControlExpectation.Marshal(b, m, deterministic)
}
func (m *GyCreditControlExpectation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GyCreditControlExpectation.Merge(m, src)
}
func (m *GyCreditControlExpectation) XXX_Size() int {
	return xxx_messageInfo_GyCreditControlExpectation.Size(m)
}
func (m *GyCreditControlExpectation) XXX_DiscardUnknown() {
	xxx_messageInfo_GyCreditControlExpectation.DiscardUnknown(m)
}

var xxx_messageInfo_GyCreditControlExpectation proto.InternalMessageInfo

func (m *GyCreditControlExpectation) GetExpectedRequest() *GyCreditControlRequest {
	if m != nil {
		return m.ExpectedRequest
	}
	return nil
}

func (m *GyCreditControlExpectation) GetAnswer() *GyCreditControlAnswer {
	if m != nil {
		return m.Answer
	}
	return nil
}

type GxCreditControlRequest struct {
	Imsi                   string                        `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RequestType            CCRequestType                 `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=magma.feg.CCRequestType" json:"request_type,omitempty"`
	RequestNumber          uint32                        `protobuf:"varint,3,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	UsageMonitoringReports []*UsageMonitoringInformation `protobuf:"bytes,11,rep,name=usage_monitoring_reports,json=usageMonitoringReports,proto3" json:"usage_monitoring_reports,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                      `json:"-"`
	XXX_unrecognized       []byte                        `json:"-"`
	XXX_sizecache          int32                         `json:"-"`
}

func (m *GxCreditControlRequest) Reset()         { *m = GxCreditControlRequest{} }
func (m *GxCreditControlRequest) String() string { return proto.CompactTextString(m) }
func (*GxCreditControlRequest) ProtoMessage()    {}
func (*GxCreditControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{18}
}

func (m *GxCreditControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GxCreditControlRequest.Unmarshal(m, b)
}
func (m *GxCreditControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GxCreditControlRequest.Marshal(b, m, deterministic)
}
func (m *GxCreditControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GxCreditControlRequest.Merge(m, src)
}
func (m *GxCreditControlRequest) XXX_Size() int {
	return xxx_messageInfo_GxCreditControlRequest.Size(m)
}
func (m *GxCreditControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GxCreditControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GxCreditControlRequest proto.InternalMessageInfo

func (m *GxCreditControlRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *GxCreditControlRequest) GetRequestType() CCRequestType {
	if m != nil {
		return m.RequestType
	}
	return CCRequestType__INVALID
}

func (m *GxCreditControlRequest) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *GxCreditControlRequest) GetUsageMonitoringReports() []*UsageMonitoringInformation {
	if m != nil {
		return m.UsageMonitoringReports
	}
	return nil
}

type GxCreditControlAnswer struct {
	RequestType          CCRequestType                 `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=magma.feg.CCRequestType" json:"request_type,omitempty"`
	RequestNumber        uint32                        `protobuf:"varint,2,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	ResultCode           uint32                        `protobuf:"varint,3,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	UsageMonitoringInfos []*UsageMonitoringInformation `protobuf:"bytes,11,rep,name=usage_monitoring_infos,json=usageMonitoringInfos,proto3" json:"usage_monitoring_infos,omitempty"`
	RuleInstalls         *RuleInstalls                 `protobuf:"bytes,12,opt,name=rule_installs,json=ruleInstalls,proto3" json:"rule_installs,omitempty"`
	RuleRemovals         *RuleRemovals                 `protobuf:"bytes,13,opt,name=rule_removals,json=ruleRemovals,proto3" json:"rule_removals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *GxCreditControlAnswer) Reset()         { *m = GxCreditControlAnswer{} }
func (m *GxCreditControlAnswer) String() string { return proto.CompactTextString(m) }
func (*GxCreditControlAnswer) ProtoMessage()    {}
func (*GxCreditControlAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{19}
}

func (m *GxCreditControlAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GxCreditControlAnswer.Unmarshal(m, b)
}
func (m *GxCreditControlAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GxCreditControlAnswer.Marshal(b, m, deterministic)
}
func (m *GxCreditControlAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GxCreditControlAnswer.Merge(m, src)
}
func (m *GxCreditControlAnswer) XXX_Size() int {
	return xxx_messageInfo_GxCreditControlAnswer.Size(m)
}
func (m *GxCreditControlAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_GxCreditControlAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_GxCreditControlAnswer proto.InternalMessageInfo

func (m *GxCreditControlAnswer) GetRequestType() CCRequestType {
	if m != nil {
		return m.RequestType
	}
	return CCRequestType__INVALID
}

func (m *GxCreditControlAnswer) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *GxCreditControlAnswer) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

func (m *GxCreditControlAnswer) GetUsageMonitoringInfos() []*UsageMonitoringInformation {
	if m != nil {
		return m.UsageMonitoringInfos
	}
	return nil
}

func (m *GxCreditControlAnswer) GetRuleInstalls() *RuleInstalls {
	if m != nil {
		return m.RuleInstalls
	}
	return nil
}

func (m *GxCreditControlAnswer) GetRuleRemovals() *RuleRemovals {
	if m != nil {
		return m.RuleRemovals
	}
	return nil
}

type GyCreditControlRequest struct {
	Imsi                 string        `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	RequestType          CCRequestType `protobuf:"varint,2,opt,name=request_type,json=requestType,proto3,enum=magma.feg.CCRequestType" json:"request_type,omitempty"`
	RequestNumber        uint32        `protobuf:"varint,3,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	QosInfo              *QosInfo      `protobuf:"bytes,21,opt,name=qos_info,json=qosInfo,proto3" json:"qos_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GyCreditControlRequest) Reset()         { *m = GyCreditControlRequest{} }
func (m *GyCreditControlRequest) String() string { return proto.CompactTextString(m) }
func (*GyCreditControlRequest) ProtoMessage()    {}
func (*GyCreditControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{20}
}

func (m *GyCreditControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GyCreditControlRequest.Unmarshal(m, b)
}
func (m *GyCreditControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GyCreditControlRequest.Marshal(b, m, deterministic)
}
func (m *GyCreditControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GyCreditControlRequest.Merge(m, src)
}
func (m *GyCreditControlRequest) XXX_Size() int {
	return xxx_messageInfo_GyCreditControlRequest.Size(m)
}
func (m *GyCreditControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GyCreditControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GyCreditControlRequest proto.InternalMessageInfo

func (m *GyCreditControlRequest) GetImsi() string {
	if m != nil {
		return m.Imsi
	}
	return ""
}

func (m *GyCreditControlRequest) GetRequestType() CCRequestType {
	if m != nil {
		return m.RequestType
	}
	return CCRequestType__INVALID
}

func (m *GyCreditControlRequest) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *GyCreditControlRequest) GetQosInfo() *QosInfo {
	if m != nil {
		return m.QosInfo
	}
	return nil
}

type GyCreditControlAnswer struct {
	RequestType          CCRequestType `protobuf:"varint,1,opt,name=request_type,json=requestType,proto3,enum=magma.feg.CCRequestType" json:"request_type,omitempty"`
	RequestNumber        uint32        `protobuf:"varint,2,opt,name=request_number,json=requestNumber,proto3" json:"request_number,omitempty"`
	ResultCode           uint32        `protobuf:"varint,3,opt,name=result_code,json=resultCode,proto3" json:"result_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GyCreditControlAnswer) Reset()         { *m = GyCreditControlAnswer{} }
func (m *GyCreditControlAnswer) String() string { return proto.CompactTextString(m) }
func (*GyCreditControlAnswer) ProtoMessage()    {}
func (*GyCreditControlAnswer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{21}
}

func (m *GyCreditControlAnswer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GyCreditControlAnswer.Unmarshal(m, b)
}
func (m *GyCreditControlAnswer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GyCreditControlAnswer.Marshal(b, m, deterministic)
}
func (m *GyCreditControlAnswer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GyCreditControlAnswer.Merge(m, src)
}
func (m *GyCreditControlAnswer) XXX_Size() int {
	return xxx_messageInfo_GyCreditControlAnswer.Size(m)
}
func (m *GyCreditControlAnswer) XXX_DiscardUnknown() {
	xxx_messageInfo_GyCreditControlAnswer.DiscardUnknown(m)
}

var xxx_messageInfo_GyCreditControlAnswer proto.InternalMessageInfo

func (m *GyCreditControlAnswer) GetRequestType() CCRequestType {
	if m != nil {
		return m.RequestType
	}
	return CCRequestType__INVALID
}

func (m *GyCreditControlAnswer) GetRequestNumber() uint32 {
	if m != nil {
		return m.RequestNumber
	}
	return 0
}

func (m *GyCreditControlAnswer) GetResultCode() uint32 {
	if m != nil {
		return m.ResultCode
	}
	return 0
}

// AVP: 1067
type UsageMonitoringInformation struct {
	MonitoringKey        []byte          `protobuf:"bytes,1,opt,name=monitoring_key,json=monitoringKey,proto3" json:"monitoring_key,omitempty"`
	MonitoringLevel      MonitoringLevel `protobuf:"varint,2,opt,name=monitoring_level,json=monitoringLevel,proto3,enum=magma.feg.MonitoringLevel" json:"monitoring_level,omitempty"`
	Octets               *Octets         `protobuf:"bytes,3,opt,name=octets,proto3" json:"octets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *UsageMonitoringInformation) Reset()         { *m = UsageMonitoringInformation{} }
func (m *UsageMonitoringInformation) String() string { return proto.CompactTextString(m) }
func (*UsageMonitoringInformation) ProtoMessage()    {}
func (*UsageMonitoringInformation) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{22}
}

func (m *UsageMonitoringInformation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsageMonitoringInformation.Unmarshal(m, b)
}
func (m *UsageMonitoringInformation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsageMonitoringInformation.Marshal(b, m, deterministic)
}
func (m *UsageMonitoringInformation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsageMonitoringInformation.Merge(m, src)
}
func (m *UsageMonitoringInformation) XXX_Size() int {
	return xxx_messageInfo_UsageMonitoringInformation.Size(m)
}
func (m *UsageMonitoringInformation) XXX_DiscardUnknown() {
	xxx_messageInfo_UsageMonitoringInformation.DiscardUnknown(m)
}

var xxx_messageInfo_UsageMonitoringInformation proto.InternalMessageInfo

func (m *UsageMonitoringInformation) GetMonitoringKey() []byte {
	if m != nil {
		return m.MonitoringKey
	}
	return nil
}

func (m *UsageMonitoringInformation) GetMonitoringLevel() MonitoringLevel {
	if m != nil {
		return m.MonitoringLevel
	}
	return MonitoringLevel_SessionLevel
}

func (m *UsageMonitoringInformation) GetOctets() *Octets {
	if m != nil {
		return m.Octets
	}
	return nil
}

type QosInfo struct {
	// AVP: 1041
	ApnAggMaxBitRateUl uint32 `protobuf:"varint,1,opt,name=apn_agg_max_bit_rate_ul,json=apnAggMaxBitRateUl,proto3" json:"apn_agg_max_bit_rate_ul,omitempty"`
	// AVP: 1040
	ApnAggMaxBitRateDl   uint32   `protobuf:"varint,2,opt,name=apn_agg_max_bit_rate_dl,json=apnAggMaxBitRateDl,proto3" json:"apn_agg_max_bit_rate_dl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QosInfo) Reset()         { *m = QosInfo{} }
func (m *QosInfo) String() string { return proto.CompactTextString(m) }
func (*QosInfo) ProtoMessage()    {}
func (*QosInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{23}
}

func (m *QosInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QosInfo.Unmarshal(m, b)
}
func (m *QosInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QosInfo.Marshal(b, m, deterministic)
}
func (m *QosInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QosInfo.Merge(m, src)
}
func (m *QosInfo) XXX_Size() int {
	return xxx_messageInfo_QosInfo.Size(m)
}
func (m *QosInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_QosInfo.DiscardUnknown(m)
}

var xxx_messageInfo_QosInfo proto.InternalMessageInfo

func (m *QosInfo) GetApnAggMaxBitRateUl() uint32 {
	if m != nil {
		return m.ApnAggMaxBitRateUl
	}
	return 0
}

func (m *QosInfo) GetApnAggMaxBitRateDl() uint32 {
	if m != nil {
		return m.ApnAggMaxBitRateDl
	}
	return 0
}

type RuleInstalls struct {
	RuleNames            []string             `protobuf:"bytes,1,rep,name=rule_names,json=ruleNames,proto3" json:"rule_names,omitempty"`
	RuleBaseNames        []string             `protobuf:"bytes,2,rep,name=rule_base_names,json=ruleBaseNames,proto3" json:"rule_base_names,omitempty"`
	RuleDefinitions      []*RuleDefinition    `protobuf:"bytes,3,rep,name=rule_definitions,json=ruleDefinitions,proto3" json:"rule_definitions,omitempty"`
	ActivationTime       *timestamp.Timestamp `protobuf:"bytes,4,opt,name=activation_time,json=activationTime,proto3" json:"activation_time,omitempty"`
	DeactivationTime     *timestamp.Timestamp `protobuf:"bytes,5,opt,name=deactivation_time,json=deactivationTime,proto3" json:"deactivation_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *RuleInstalls) Reset()         { *m = RuleInstalls{} }
func (m *RuleInstalls) String() string { return proto.CompactTextString(m) }
func (*RuleInstalls) ProtoMessage()    {}
func (*RuleInstalls) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{24}
}

func (m *RuleInstalls) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleInstalls.Unmarshal(m, b)
}
func (m *RuleInstalls) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleInstalls.Marshal(b, m, deterministic)
}
func (m *RuleInstalls) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleInstalls.Merge(m, src)
}
func (m *RuleInstalls) XXX_Size() int {
	return xxx_messageInfo_RuleInstalls.Size(m)
}
func (m *RuleInstalls) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleInstalls.DiscardUnknown(m)
}

var xxx_messageInfo_RuleInstalls proto.InternalMessageInfo

func (m *RuleInstalls) GetRuleNames() []string {
	if m != nil {
		return m.RuleNames
	}
	return nil
}

func (m *RuleInstalls) GetRuleBaseNames() []string {
	if m != nil {
		return m.RuleBaseNames
	}
	return nil
}

func (m *RuleInstalls) GetRuleDefinitions() []*RuleDefinition {
	if m != nil {
		return m.RuleDefinitions
	}
	return nil
}

func (m *RuleInstalls) GetActivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.ActivationTime
	}
	return nil
}

func (m *RuleInstalls) GetDeactivationTime() *timestamp.Timestamp {
	if m != nil {
		return m.DeactivationTime
	}
	return nil
}

type RuleRemovals struct {
	RuleNames            []string `protobuf:"bytes,1,rep,name=rule_names,json=ruleNames,proto3" json:"rule_names,omitempty"`
	RuleBaseNames        []string `protobuf:"bytes,2,rep,name=rule_base_names,json=ruleBaseNames,proto3" json:"rule_base_names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RuleRemovals) Reset()         { *m = RuleRemovals{} }
func (m *RuleRemovals) String() string { return proto.CompactTextString(m) }
func (*RuleRemovals) ProtoMessage()    {}
func (*RuleRemovals) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{25}
}

func (m *RuleRemovals) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RuleRemovals.Unmarshal(m, b)
}
func (m *RuleRemovals) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RuleRemovals.Marshal(b, m, deterministic)
}
func (m *RuleRemovals) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RuleRemovals.Merge(m, src)
}
func (m *RuleRemovals) XXX_Size() int {
	return xxx_messageInfo_RuleRemovals.Size(m)
}
func (m *RuleRemovals) XXX_DiscardUnknown() {
	xxx_messageInfo_RuleRemovals.DiscardUnknown(m)
}

var xxx_messageInfo_RuleRemovals proto.InternalMessageInfo

func (m *RuleRemovals) GetRuleNames() []string {
	if m != nil {
		return m.RuleNames
	}
	return nil
}

func (m *RuleRemovals) GetRuleBaseNames() []string {
	if m != nil {
		return m.RuleBaseNames
	}
	return nil
}

type Octets struct {
	TotalOctets          uint64   `protobuf:"varint,1,opt,name=total_octets,json=totalOctets,proto3" json:"total_octets,omitempty"`
	InputOctets          uint64   `protobuf:"varint,2,opt,name=input_octets,json=inputOctets,proto3" json:"input_octets,omitempty"`
	OutputOctets         uint64   `protobuf:"varint,3,opt,name=output_octets,json=outputOctets,proto3" json:"output_octets,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Octets) Reset()         { *m = Octets{} }
func (m *Octets) String() string { return proto.CompactTextString(m) }
func (*Octets) ProtoMessage()    {}
func (*Octets) Descriptor() ([]byte, []int) {
	return fileDescriptor_ef3afe2df05d1dc6, []int{26}
}

func (m *Octets) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Octets.Unmarshal(m, b)
}
func (m *Octets) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Octets.Marshal(b, m, deterministic)
}
func (m *Octets) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Octets.Merge(m, src)
}
func (m *Octets) XXX_Size() int {
	return xxx_messageInfo_Octets.Size(m)
}
func (m *Octets) XXX_DiscardUnknown() {
	xxx_messageInfo_Octets.DiscardUnknown(m)
}

var xxx_messageInfo_Octets proto.InternalMessageInfo

func (m *Octets) GetTotalOctets() uint64 {
	if m != nil {
		return m.TotalOctets
	}
	return 0
}

func (m *Octets) GetInputOctets() uint64 {
	if m != nil {
		return m.InputOctets
	}
	return 0
}

func (m *Octets) GetOutputOctets() uint64 {
	if m != nil {
		return m.OutputOctets
	}
	return 0
}

func init() {
	proto.RegisterEnum("magma.feg.MonitoringLevel", MonitoringLevel_name, MonitoringLevel_value)
	proto.RegisterEnum("magma.feg.CCRequestType", CCRequestType_name, CCRequestType_value)
	proto.RegisterEnum("magma.feg.Reply_ServerBehavior", Reply_ServerBehavior_name, Reply_ServerBehavior_value)
	proto.RegisterEnum("magma.feg.CreditInfo_UnitType", CreditInfo_UnitType_name, CreditInfo_UnitType_value)
	proto.RegisterEnum("magma.feg.SetExpectationsRequest_UnexpectedRequestBehavior", SetExpectationsRequest_UnexpectedRequestBehavior_name, SetExpectationsRequest_UnexpectedRequestBehavior_value)
	proto.RegisterType((*Reply)(nil), "magma.feg.Reply")
	proto.RegisterType((*ExpectedRequest)(nil), "magma.feg.ExpectedRequest")
	proto.RegisterType((*RequestReply)(nil), "magma.feg.RequestReply")
	proto.RegisterType((*ServerConfiguration)(nil), "magma.feg.ServerConfiguration")
	proto.RegisterType((*OCSConfig)(nil), "magma.feg.OCSConfig")
	proto.RegisterType((*CreditInfo)(nil), "magma.feg.CreditInfo")
	proto.RegisterType((*ReAuthTarget)(nil), "magma.feg.ReAuthTarget")
	proto.RegisterType((*ReAuthAnswer)(nil), "magma.feg.ReAuthAnswer")
	proto.RegisterType((*AccountRules)(nil), "magma.feg.AccountRules")
	proto.RegisterType((*RuleDefinition)(nil), "magma.feg.RuleDefinition")
	proto.RegisterType((*SetUsageMonitorRequest)(nil), "magma.feg.SetUsageMonitorRequest")
	proto.RegisterType((*UsageMonitor)(nil), "magma.feg.UsageMonitor")
	proto.RegisterType((*SetExpectationsRequest)(nil), "magma.feg.SetExpectationsRequest")
	proto.RegisterType((*Expectation)(nil), "magma.feg.Expectation")
	proto.RegisterType((*AssertExpectationsResult)(nil), "magma.feg.AssertExpectationsResult")
	proto.RegisterType((*ExpectationResult)(nil), "magma.feg.ExpectationResult")
	proto.RegisterType((*GxCreditControlExpectation)(nil), "magma.feg.GxCreditControlExpectation")
	proto.RegisterType((*GyCreditControlExpectation)(nil), "magma.feg.GyCreditControlExpectation")
	proto.RegisterType((*GxCreditControlRequest)(nil), "magma.feg.GxCreditControlRequest")
	proto.RegisterType((*GxCreditControlAnswer)(nil), "magma.feg.GxCreditControlAnswer")
	proto.RegisterType((*GyCreditControlRequest)(nil), "magma.feg.GyCreditControlRequest")
	proto.RegisterType((*GyCreditControlAnswer)(nil), "magma.feg.GyCreditControlAnswer")
	proto.RegisterType((*UsageMonitoringInformation)(nil), "magma.feg.UsageMonitoringInformation")
	proto.RegisterType((*QosInfo)(nil), "magma.feg.QosInfo")
	proto.RegisterType((*RuleInstalls)(nil), "magma.feg.RuleInstalls")
	proto.RegisterType((*RuleRemovals)(nil), "magma.feg.RuleRemovals")
	proto.RegisterType((*Octets)(nil), "magma.feg.Octets")
}

func init() { proto.RegisterFile("feg/protos/mock_core.proto", fileDescriptor_ef3afe2df05d1dc6) }

var fileDescriptor_ef3afe2df05d1dc6 = []byte{
	// 2765 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4b, 0x6f, 0x1c, 0xc7,
	0xb5, 0x9e, 0x1e, 0xbe, 0x0f, 0xe7, 0xc5, 0xe2, 0x6b, 0x48, 0xd9, 0x16, 0xdd, 0xba, 0xf6, 0xf5,
	0xb5, 0x71, 0x49, 0x80, 0xbe, 0xb8, 0x11, 0x2c, 0x27, 0xc1, 0x70, 0x38, 0x12, 0xc7, 0x26, 0x87,
	0x52, 0xcf, 0xd0, 0x82, 0x1d, 0x20, 0x9d, 0x66, 0x4f, 0xb1, 0xd5, 0x51, 0xbf, 0xd4, 0x55, 0x4d,
	0x71, 0x10, 0x20, 0xab, 0x2c, 0xf3, 0x03, 0xb2, 0xc8, 0x2a, 0x08, 0x02, 0x64, 0x95, 0x55, 0xe0,
	0x64, 0x95, 0x5d, 0x7e, 0x41, 0xfe, 0x48, 0x16, 0xd9, 0x07, 0xf5, 0xe8, 0x99, 0xea, 0x07, 0x2d,
	0x39, 0xf2, 0xc2, 0x2b, 0x4e, 0x9d, 0xfa, 0xea, 0xab, 0xd7, 0xa9, 0xaf, 0xce, 0xa9, 0x26, 0xec,
	0x5e, 0x61, 0xe7, 0x20, 0x8a, 0x43, 0x1a, 0x92, 0x03, 0x3f, 0xb4, 0x9f, 0x9b, 0x76, 0x18, 0xe3,
	0x7d, 0x6e, 0x40, 0x2b, 0xbe, 0xe5, 0xf8, 0xd6, 0xfe, 0x15, 0x76, 0x76, 0x77, 0xc2, 0xd8, 0xbe,
	0x1f, 0xa7, 0x40, 0x3b, 0xf4, 0xfd, 0x30, 0x10, 0xa8, 0xdd, 0x4d, 0x85, 0xc1, 0x26, 0x57, 0x97,
	0xd2, 0xbc, 0xe3, 0x51, 0x9c, 0x9a, 0xa3, 0xd0, 0x73, 0xed, 0xc9, 0x38, 0xad, 0xda, 0x53, 0xaa,
	0x08, 0x26, 0xc4, 0x0d, 0x03, 0xd3, 0xb7, 0x02, 0xcb, 0xc1, 0xb1, 0x44, 0xbc, 0xad, 0x22, 0x92,
	0x4b, 0x62, 0xc7, 0xee, 0x25, 0x8e, 0xa7, 0x04, 0x77, 0x9d, 0x30, 0x74, 0x3c, 0x89, 0xb8, 0x4c,
	0xae, 0x0e, 0xa8, 0xeb, 0x63, 0x42, 0x2d, 0x3f, 0x12, 0x00, 0xfd, 0x37, 0xab, 0xb0, 0x60, 0xe0,
	0xc8, 0x9b, 0xa0, 0x13, 0x68, 0x12, 0x1c, 0x5f, 0xe3, 0xd8, 0xbc, 0xc4, 0xcf, 0xac, 0x6b, 0x37,
	0x8c, 0xdb, 0xda, 0x9e, 0xf6, 0x41, 0xe3, 0xf0, 0xee, 0xfe, 0x74, 0x76, 0xfb, 0x1c, 0xba, 0x3f,
	0xe4, 0xb8, 0x23, 0x09, 0x33, 0x1a, 0x24, 0x53, 0x46, 0x77, 0x61, 0x35, 0x66, 0x38, 0x73, 0x8c,
	0x3d, 0x6b, 0xd2, 0xae, 0xee, 0x69, 0x1f, 0x2c, 0x18, 0xc0, 0x4d, 0xc7, 0xcc, 0x82, 0x7e, 0x04,
	0x75, 0xcb, 0xc3, 0x31, 0x35, 0x63, 0xfc, 0x22, 0xc1, 0x84, 0xb6, 0xe7, 0xf6, 0xb4, 0x0f, 0x56,
	0x0f, 0xb7, 0x95, 0x8e, 0x3a, 0xac, 0xde, 0x10, 0xd5, 0x27, 0x15, 0xa3, 0x66, 0x29, 0x65, 0xf4,
	0x19, 0xac, 0x8d, 0xc3, 0x97, 0x81, 0xe7, 0x06, 0xcf, 0xcd, 0x24, 0x70, 0xe9, 0xd8, 0xa2, 0x56,
	0x7b, 0x9e, 0x73, 0xdc, 0x51, 0x38, 0x8e, 0x25, 0xe6, 0x42, 0x42, 0x4e, 0x2a, 0x46, 0x6b, 0x9c,
	0xb3, 0xa1, 0x1f, 0x43, 0x03, 0x47, 0xc4, 0x1c, 0x63, 0x6a, 0xd9, 0xcf, 0x4c, 0xcb, 0x7e, 0xde,
	0x5e, 0x28, 0x0c, 0xa6, 0xf7, 0x78, 0x78, 0xcc, 0xeb, 0x3b, 0xf6, 0x73, 0x36, 0x18, 0x1c, 0x91,
	0x69, 0x19, 0x1d, 0x41, 0xd3, 0xf5, 0x89, 0xab, 0x32, 0x2c, 0x72, 0x86, 0xb6, 0xc2, 0xd0, 0x3f,
	0x1b, 0xf6, 0x55, 0x8a, 0x3a, 0x6b, 0x32, 0xe3, 0x78, 0x0a, 0x5b, 0x5e, 0x68, 0x5b, 0x94, 0xed,
	0x6f, 0x12, 0x8d, 0x2d, 0x8a, 0x4d, 0xcb, 0xb6, 0x71, 0x44, 0xdb, 0x4b, 0x9c, 0x4a, 0xdd, 0x82,
	0x53, 0x09, 0xbc, 0xe0, 0xb8, 0x0e, 0x87, 0x9d, 0x54, 0x8c, 0x0d, 0xaf, 0xc4, 0x5e, 0x46, 0x1c,
	0xe3, 0x9f, 0x63, 0x9b, 0xb6, 0x97, 0x5f, 0x41, 0x6c, 0x70, 0x58, 0x91, 0x58, 0xd8, 0x19, 0xb1,
	0xef, 0x9b, 0x6e, 0x70, 0x15, 0xc6, 0xbe, 0xa0, 0x4f, 0xf7, 0x72, 0xa5, 0x40, 0x7c, 0x76, 0xd6,
	0x9f, 0xe1, 0x66, 0x7b, 0xba, 0xe1, 0xfb, 0x45, 0x3b, 0xea, 0x40, 0x23, 0xb2, 0x1c, 0x37, 0x70,
	0xa6, 0x84, 0x50, 0x58, 0xcd, 0xc7, 0x1c, 0x30, 0x63, 0xaa, 0x47, 0xaa, 0x01, 0x1d, 0x43, 0x33,
	0xc6, 0x1e, 0xb6, 0x08, 0x9e, 0x72, 0xac, 0x72, 0x8e, 0x9d, 0x8c, 0x27, 0x73, 0xc4, 0x8c, 0xa4,
	0x11, 0x67, 0x2c, 0x68, 0x04, 0x9b, 0xcc, 0xaf, 0x5d, 0x1b, 0x9b, 0xd6, 0x65, 0xa8, 0x38, 0x6b,
	0x8d, 0x73, 0xbd, 0xa3, 0x70, 0x0d, 0x05, 0xae, 0xc3, 0x60, 0x33, 0xc2, 0x75, 0x52, 0x34, 0xa3,
	0x43, 0x58, 0x89, 0x31, 0xc1, 0x94, 0xfb, 0x49, 0x9d, 0x33, 0xad, 0x67, 0x46, 0x45, 0x30, 0x15,
	0x2e, 0xb2, 0x1c, 0xcb, 0xdf, 0xe8, 0x11, 0xb4, 0x44, 0x1b, 0x37, 0x18, 0xbb, 0x62, 0x2f, 0xda,
	0x0d, 0xde, 0x74, 0x37, 0xdf, 0xb4, 0x3f, 0x45, 0x9c, 0x54, 0x8c, 0x66, 0x9c, 0x35, 0xa1, 0x8f,
	0x60, 0x91, 0x50, 0x8b, 0x26, 0xa4, 0xdd, 0xe4, 0xcd, 0xd7, 0xd4, 0x39, 0xf0, 0x8a, 0x93, 0x8a,
	0x21, 0x21, 0xe8, 0x2b, 0xd8, 0xb6, 0x63, 0xcc, 0x3c, 0x26, 0x55, 0x9e, 0x18, 0x93, 0x28, 0x0c,
	0x08, 0x6e, 0xb7, 0x78, 0xeb, 0x3d, 0xd9, 0xda, 0xa3, 0x78, 0xbf, 0xcb, 0x91, 0x43, 0x01, 0x34,
	0x24, 0xee, 0x44, 0x33, 0x36, 0xed, 0xb2, 0x0a, 0xc6, 0x2d, 0xbd, 0xb1, 0xc0, 0xbd, 0x56, 0xe0,
	0x16, 0x7e, 0x57, 0xc2, 0x9d, 0x94, 0x55, 0x20, 0x1b, 0x76, 0x53, 0x52, 0x8a, 0x63, 0xdf, 0x0d,
	0x84, 0xd3, 0x4b, 0x7a, 0xc4, 0xe9, 0xef, 0x29, 0xf4, 0xb2, 0xfd, 0x28, 0xc5, 0x2a, 0x3d, 0xb4,
	0xc9, 0x2d, 0x75, 0x7a, 0x17, 0x1a, 0x59, 0x11, 0x44, 0xeb, 0xd0, 0x34, 0x7a, 0x8f, 0x4f, 0xbf,
	0x34, 0xfb, 0x83, 0xe1, 0xa8, 0x33, 0x18, 0x9d, 0x7e, 0xd9, 0xaa, 0xa0, 0x06, 0x80, 0x30, 0x9e,
	0x76, 0x46, 0xbd, 0x96, 0x86, 0x6a, 0xb0, 0x3c, 0x38, 0x37, 0xb9, 0xa9, 0x55, 0x3d, 0xaa, 0xc3,
	0x2a, 0x71, 0x88, 0xe9, 0x63, 0x42, 0x2c, 0x07, 0x1f, 0x35, 0xa0, 0xe6, 0xdc, 0x38, 0x93, 0xb4,
	0xac, 0x7f, 0x0d, 0xd0, 0xec, 0xdd, 0x44, 0xd8, 0xa6, 0x78, 0xac, 0xb8, 0x8f, 0x50, 0x4e, 0xe6,
	0x3e, 0x5a, 0xc1, 0x7d, 0xb8, 0x6a, 0x4a, 0xf7, 0xb1, 0xe4, 0x6f, 0xf4, 0x00, 0x6a, 0xa9, 0xda,
	0xf2, 0x93, 0x5f, 0xe5, 0xcd, 0xb6, 0x8a, 0x62, 0x2b, 0x0f, 0xfc, 0xaa, 0x35, 0x2b, 0xb2, 0x53,
	0xa0, 0xc8, 0xa3, 0xe2, 0x80, 0x73, 0x85, 0x53, 0x30, 0x55, 0xc9, 0x8c, 0x13, 0xae, 0x4f, 0xc5,
	0x52, 0x71, 0xc4, 0xa7, 0xb0, 0xa5, 0x6a, 0xa6, 0x42, 0x3b, 0x5f, 0x50, 0x8f, 0x99, 0x74, 0x66,
	0x78, 0x37, 0x66, 0x0a, 0xaa, 0x10, 0x7f, 0x05, 0xdb, 0x45, 0xbd, 0x13, 0xc7, 0x76, 0x21, 0xe3,
	0x58, 0x65, 0x82, 0x97, 0x1e, 0xdc, 0x4d, 0xaf, 0xac, 0x82, 0xdd, 0x5a, 0x53, 0x65, 0xe2, 0x0b,
	0xb9, 0x58, 0xb8, 0x28, 0x52, 0x61, 0x92, 0x2b, 0x59, 0x8b, 0x94, 0x32, 0x93, 0xa5, 0x54, 0x50,
	0xd2, 0x31, 0x2d, 0x15, 0x64, 0x49, 0x4a, 0x89, 0x22, 0x4b, 0x24, 0x63, 0x61, 0xee, 0x4d, 0xd9,
	0xd2, 0xc5, 0xd8, 0xf2, 0xa6, 0x53, 0xb5, 0x43, 0x3f, 0xf2, 0x30, 0xc5, 0x52, 0xd5, 0xef, 0x29,
	0x84, 0xa3, 0xb3, 0x61, 0xdf, 0x50, 0xb0, 0x5d, 0x09, 0x3d, 0xa9, 0x18, 0x6d, 0x46, 0x54, 0x56,
	0xc7, 0xf6, 0x27, 0x61, 0x57, 0x10, 0x75, 0xaf, 0x5d, 0x3a, 0x51, 0xf7, 0xa7, 0xa8, 0xee, 0x17,
	0xbd, 0x8e, 0xc4, 0x65, 0xf7, 0x27, 0xc1, 0x45, 0x3b, 0x53, 0xf7, 0x04, 0x9b, 0x49, 0x10, 0x63,
	0xcb, 0x7e, 0x66, 0x5d, 0x7a, 0xb8, 0x44, 0xdd, 0x2f, 0x7a, 0x17, 0xb3, 0x7a, 0xa6, 0xee, 0x09,
	0x56, 0x0c, 0x6c, 0x19, 0x93, 0x28, 0x7b, 0xf5, 0x17, 0xd5, 0xfd, 0x22, 0xca, 0x5d, 0xfc, 0x8d,
	0x24, 0x63, 0xc9, 0xea, 0x70, 0xed, 0x3f, 0xd7, 0xe1, 0xfa, 0x9b, 0xe9, 0x70, 0xe3, 0xd5, 0x3a,
	0xfc, 0x14, 0xb6, 0x0a, 0x3a, 0x2c, 0xbc, 0xa7, 0x99, 0xd9, 0x8b, 0x12, 0x19, 0x16, 0x3e, 0xa4,
	0x19, 0x1b, 0x76, 0x89, 0x9d, 0x6f, 0x72, 0x5e, 0x84, 0x05, 0x71, 0xab, 0x40, 0x9c, 0xd3, 0xe0,
	0x29, 0x71, 0x52, 0x62, 0x47, 0x3f, 0x83, 0x9d, 0x32, 0x05, 0x16, 0xdc, 0x42, 0xdf, 0xf5, 0x6f,
	0x14, 0xe0, 0x94, 0x7e, 0x9b, 0x94, 0x57, 0xbd, 0x4a, 0x39, 0x3d, 0xa8, 0x49, 0xa4, 0x08, 0x6d,
	0xff, 0x0f, 0x96, 0xd2, 0xee, 0xb5, 0xc2, 0x7e, 0xe5, 0x24, 0xd6, 0x48, 0xa1, 0xe8, 0x7d, 0x58,
	0xe0, 0x31, 0xab, 0x14, 0xcc, 0x56, 0x3e, 0x0c, 0x36, 0x44, 0xb5, 0x3e, 0x84, 0x75, 0x71, 0x17,
	0x74, 0xc3, 0xe0, 0xca, 0x75, 0x92, 0x58, 0x6c, 0xf2, 0xa7, 0x50, 0x97, 0x4c, 0xa6, 0xa0, 0xd1,
	0xf6, 0xe6, 0x72, 0x72, 0xa1, 0x0e, 0xd2, 0xa8, 0xc5, 0x4a, 0x49, 0xff, 0x25, 0xac, 0x9c, 0x77,
	0x87, 0x82, 0x11, 0xbd, 0x0f, 0x4d, 0xdf, 0xba, 0x31, 0x13, 0x36, 0x39, 0xf3, 0x72, 0x42, 0x31,
	0xe1, 0xf3, 0xa8, 0x1b, 0x75, 0xdf, 0xba, 0xb9, 0xe0, 0x4b, 0xc0, 0x8c, 0xe8, 0xbf, 0xa0, 0x31,
	0xc3, 0xb1, 0x48, 0x9f, 0x0f, 0xbd, 0x6e, 0xd4, 0x52, 0xd8, 0xc8, 0xf5, 0x31, 0xba, 0x07, 0xf5,
	0x6b, 0xcb, 0x73, 0xc7, 0xec, 0x64, 0x73, 0xd0, 0x9c, 0x00, 0xa5, 0x46, 0x06, 0xd2, 0xff, 0xaa,
	0x01, 0x74, 0x63, 0x3c, 0x76, 0x29, 0x8b, 0xd1, 0x10, 0x82, 0x79, 0xa6, 0xb7, 0xbc, 0xdb, 0x15,
	0x83, 0xff, 0x46, 0xef, 0x42, 0xcd, 0x7e, 0x66, 0xc5, 0x5c, 0x11, 0x9f, 0xe3, 0x89, 0xec, 0x6b,
	0x35, 0xb5, 0x7d, 0x8e, 0x27, 0x68, 0x0b, 0x16, 0xaf, 0x43, 0x2f, 0x91, 0x7d, 0xcc, 0x1b, 0xb2,
	0x84, 0x1e, 0xc0, 0x0a, 0x3b, 0xbc, 0x26, 0x9d, 0x44, 0x98, 0x4b, 0x7e, 0x23, 0x73, 0x93, 0xcc,
	0x3a, 0xde, 0x67, 0x07, 0x76, 0x34, 0x89, 0xb0, 0xb1, 0x9c, 0xc8, 0x5f, 0xfa, 0x5d, 0x58, 0x4e,
	0xad, 0x68, 0x05, 0x16, 0xf8, 0xd4, 0x5b, 0x15, 0xb4, 0x0c, 0xf3, 0x6c, 0xe4, 0x2d, 0x4d, 0xef,
	0xb1, 0xed, 0xef, 0x24, 0xf4, 0xd9, 0xc8, 0x8a, 0x1d, 0x4c, 0x6f, 0x1b, 0x3c, 0xdb, 0xa7, 0xc0,
	0x31, 0x9d, 0x38, 0x4c, 0xa2, 0x74, 0xf0, 0xc2, 0xf6, 0x88, 0x99, 0xf4, 0x41, 0x4a, 0xd3, 0x09,
	0xc8, 0x4b, 0x1c, 0xa3, 0xb7, 0x01, 0x52, 0xb7, 0x76, 0xc7, 0x92, 0x6c, 0x45, 0x5a, 0xfa, 0x63,
	0x91, 0xf5, 0x90, 0xc4, 0xa3, 0xa6, 0x1d, 0x8e, 0xd3, 0x95, 0x07, 0x61, 0xea, 0x86, 0x63, 0xac,
	0xff, 0x49, 0x83, 0x5a, 0xc7, 0xb6, 0xc3, 0x24, 0xa0, 0x46, 0xe2, 0x61, 0x52, 0x3a, 0xae, 0xb7,
	0x01, 0xe2, 0xc4, 0xc3, 0x66, 0x60, 0xf9, 0x98, 0xb4, 0xab, 0x7b, 0x73, 0xac, 0x13, 0x66, 0x19,
	0x30, 0x03, 0xf3, 0x04, 0x5e, 0x7d, 0xc9, 0x82, 0x5b, 0x81, 0x99, 0xe3, 0x98, 0x3a, 0x33, 0x1f,
	0x59, 0x44, 0xe2, 0x8e, 0xa1, 0xc5, 0x71, 0x63, 0x7c, 0xe5, 0x06, 0x2e, 0xf3, 0x47, 0xd2, 0x9e,
	0xe7, 0xfe, 0x97, 0x89, 0x81, 0x13, 0x0f, 0x1f, 0x4f, 0x11, 0x06, 0xa7, 0x9e, 0x95, 0x89, 0xfe,
	0x8f, 0x2a, 0x34, 0xb2, 0x18, 0x74, 0x07, 0x56, 0xa6, 0xe3, 0x93, 0x03, 0x5f, 0x4e, 0x87, 0xf7,
	0x1a, 0x8b, 0x8a, 0xde, 0x01, 0x88, 0x62, 0x6c, 0xe3, 0x31, 0x0e, 0xec, 0xd4, 0xf3, 0x14, 0x0b,
	0x7a, 0x0f, 0x1a, 0x7e, 0x18, 0xb8, 0x34, 0x8c, 0x53, 0xb7, 0x9a, 0xe7, 0x9d, 0xd4, 0x67, 0x56,
	0xe6, 0x58, 0x1f, 0xc1, 0xda, 0x95, 0x17, 0xbe, 0x34, 0xc7, 0x98, 0x65, 0xbc, 0x91, 0x98, 0xe0,
	0x02, 0x5f, 0x89, 0x16, 0xab, 0x38, 0x56, 0xec, 0xe8, 0x09, 0x6c, 0x30, 0x87, 0x8a, 0xb1, 0x4d,
	0xd5, 0x8c, 0x45, 0xde, 0xbe, 0xef, 0x28, 0x52, 0x64, 0x48, 0x98, 0x9a, 0x97, 0xac, 0xc7, 0x45,
	0x23, 0x7a, 0x00, 0xcd, 0x17, 0x21, 0xc9, 0xb0, 0x89, 0xab, 0x17, 0x29, 0x6c, 0x0f, 0xbd, 0xf0,
	0xe5, 0x93, 0x90, 0x18, 0x8d, 0x17, 0x21, 0x51, 0x1a, 0xeb, 0x13, 0xd8, 0x1a, 0x62, 0xca, 0x0f,
	0xe4, 0x99, 0x98, 0x55, 0xaa, 0x9c, 0x65, 0x1e, 0xf1, 0x39, 0x6c, 0x8a, 0x03, 0x2d, 0x57, 0xc0,
	0xb4, 0xf9, 0xe9, 0x10, 0xce, 0x91, 0xd5, 0x93, 0x0c, 0xe5, 0x7a, 0xa2, 0x94, 0xc4, 0x89, 0x22,
	0xfa, 0xef, 0x34, 0xa8, 0xa9, 0x28, 0xf4, 0x53, 0x68, 0xa7, 0xbc, 0x6c, 0x32, 0x66, 0x84, 0x63,
	0x33, 0xab, 0x95, 0xef, 0xdd, 0xd2, 0x81, 0x1b, 0x38, 0xea, 0x32, 0x6d, 0x4a, 0x1a, 0x66, 0x7b,
	0x8c, 0xe3, 0x59, 0xc0, 0xba, 0x4a, 0x43, 0x6a, 0x79, 0xe6, 0x8b, 0x24, 0xa4, 0x96, 0x94, 0x52,
	0xf5, 0xbe, 0x3b, 0xb7, 0x29, 0xa6, 0xc4, 0x00, 0x8e, 0x7a, 0xc2, 0x40, 0xfa, 0xd7, 0x73, 0x7c,
	0x81, 0x84, 0x30, 0x73, 0x76, 0x92, 0xd2, 0x7d, 0x02, 0x35, 0xac, 0x98, 0xa5, 0xa6, 0x6e, 0x15,
	0xe4, 0x5c, 0x8c, 0x29, 0x83, 0x45, 0xbf, 0x80, 0x3b, 0x49, 0x80, 0xa5, 0xda, 0xa7, 0x93, 0x9c,
	0x3d, 0x76, 0x54, 0xb9, 0x0c, 0x3d, 0xc8, 0xc4, 0x62, 0x65, 0x63, 0xd8, 0xbf, 0x98, 0x92, 0xa4,
	0xd7, 0x51, 0xfa, 0x10, 0xb2, 0x93, 0xdc, 0x56, 0x85, 0x1e, 0x42, 0xc3, 0xb9, 0x61, 0xc7, 0xd1,
	0xe2, 0x0a, 0x61, 0x5b, 0x32, 0x80, 0x56, 0xe3, 0xd1, 0x47, 0x37, 0x62, 0x9b, 0xba, 0x61, 0x40,
	0xe3, 0xd0, 0x13, 0xb2, 0x63, 0xd4, 0x9c, 0x9b, 0x63, 0xd1, 0xac, 0x6b, 0x5b, 0x9c, 0x67, 0x92,
	0xe1, 0x99, 0x2f, 0xf2, 0x4c, 0xca, 0x79, 0x26, 0x33, 0x1e, 0x7d, 0x04, 0x3b, 0xb7, 0xce, 0x03,
	0x6d, 0xc2, 0x5a, 0x67, 0x30, 0x7c, 0xda, 0x33, 0xcc, 0xa7, 0xfd, 0xd1, 0x89, 0xd9, 0x33, 0x8c,
	0x73, 0xa3, 0x55, 0x41, 0x7b, 0xf0, 0x56, 0xf7, 0x7c, 0x30, 0xea, 0x0f, 0x2e, 0x7a, 0xa2, 0xe2,
	0xb8, 0xf7, 0xb0, 0x73, 0x71, 0x3a, 0x32, 0x05, 0xb8, 0xa5, 0xe9, 0x7f, 0xd7, 0x60, 0x55, 0x59,
	0x32, 0x34, 0x84, 0x35, 0xe7, 0xc6, 0xb4, 0x6d, 0x53, 0xd9, 0x88, 0x12, 0xb7, 0xca, 0x4d, 0x5c,
	0x61, 0x60, 0xd1, 0x93, 0x73, 0xd3, 0xb5, 0xf3, 0xa4, 0x93, 0x3c, 0x69, 0xb5, 0x48, 0x3a, 0xf9,
	0x46, 0xd2, 0x49, 0x86, 0x94, 0x45, 0x14, 0x0a, 0x9d, 0xfe, 0xab, 0x2a, 0xb4, 0x3b, 0x84, 0xe0,
	0x38, 0xe7, 0x01, 0x4c, 0xcc, 0xd1, 0xff, 0xb3, 0x70, 0x82, 0xfd, 0x4a, 0xfd, 0xef, 0xad, 0x5b,
	0xfc, 0x8f, 0x83, 0x8c, 0x14, 0xcc, 0x02, 0x2e, 0xe7, 0xc6, 0x2c, 0xfa, 0x60, 0x7a, 0x94, 0xdf,
	0xbd, 0x7d, 0x49, 0xd2, 0x48, 0x61, 0xc3, 0xb9, 0x29, 0x6c, 0x9b, 0x20, 0x9e, 0x94, 0x12, 0xcf,
	0x15, 0x89, 0x27, 0xb7, 0x10, 0x4f, 0x8a, 0xc4, 0xfa, 0x35, 0xac, 0x15, 0xe6, 0x83, 0xee, 0x67,
	0x96, 0x4a, 0x6e, 0xe7, 0x6d, 0x47, 0x50, 0x85, 0xa2, 0xff, 0x86, 0xa6, 0x52, 0x34, 0x7d, 0x2c,
	0x92, 0xd1, 0x65, 0xa3, 0xa1, 0x98, 0xcf, 0x30, 0xd5, 0x7f, 0xaf, 0xc1, 0xee, 0xed, 0x4e, 0x81,
	0x4e, 0xa1, 0x95, 0x9f, 0xaa, 0x1c, 0xc6, 0x6b, 0x2c, 0x61, 0x33, 0x37, 0x4b, 0x74, 0x1f, 0x16,
	0x2d, 0x7e, 0x44, 0xa4, 0x13, 0xbd, 0xfa, 0x48, 0x4a, 0xbc, 0x18, 0xe6, 0xe4, 0x4d, 0x87, 0x39,
	0xf9, 0x0e, 0x86, 0x39, 0xf9, 0xa6, 0x61, 0xfe, 0x53, 0x83, 0xad, 0xf2, 0xc5, 0x28, 0xbd, 0x70,
	0x1e, 0x40, 0x1a, 0x8a, 0x8a, 0xf8, 0x4c, 0x08, 0xa3, 0x9a, 0xa1, 0x75, 0xbb, 0xb2, 0x3d, 0x8f,
	0xcc, 0x56, 0xe3, 0x59, 0x81, 0xdd, 0xdf, 0x69, 0xe3, 0x20, 0xf1, 0x2f, 0x71, 0x2c, 0xef, 0xf8,
	0x34, 0x16, 0x1e, 0x70, 0x23, 0x32, 0xa1, 0x9d, 0xb9, 0xd4, 0x44, 0x56, 0x1d, 0x85, 0x31, 0x25,
	0xed, 0x55, 0xee, 0xb3, 0xaf, 0x79, 0xed, 0x6c, 0x25, 0xd9, 0x3a, 0x43, 0x90, 0xe8, 0xff, 0xaa,
	0xc2, 0x66, 0xe9, 0xe6, 0x15, 0xa6, 0xa7, 0xbd, 0xd9, 0xf4, 0xaa, 0x65, 0xd3, 0xcb, 0xc5, 0x82,
	0x73, 0xf9, 0x58, 0x10, 0xfd, 0x04, 0xb6, 0x0a, 0xf3, 0x67, 0xf7, 0xef, 0xb7, 0x9c, 0xfd, 0x46,
	0x52, 0xac, 0x23, 0x3c, 0xf3, 0x60, 0x31, 0x9a, 0x1b, 0x10, 0x6a, 0x79, 0x1e, 0x91, 0xf9, 0xed,
	0x76, 0x2e, 0xf2, 0xeb, 0xcb, 0x6a, 0xa3, 0x16, 0x2b, 0xa5, 0x69, 0xeb, 0x18, 0xfb, 0xe1, 0xb5,
	0xe5, 0x11, 0x99, 0xe2, 0xe6, 0x5b, 0x1b, 0xb2, 0x5a, 0xb4, 0x4e, 0x4b, 0xfa, 0xdf, 0x98, 0xaf,
	0x4d, 0xbe, 0x57, 0xbe, 0xf6, 0xbf, 0xb0, 0x9c, 0xc6, 0x6a, 0xed, 0xcd, 0x4c, 0x90, 0xc6, 0xf8,
	0x9f, 0x88, 0xd8, 0xcc, 0x58, 0x92, 0x41, 0x9a, 0xfe, 0x5b, 0x0d, 0x36, 0x4b, 0xcf, 0xd3, 0xf7,
	0xc2, 0x73, 0xf4, 0x3f, 0x6b, 0xb0, 0x7b, 0xbb, 0x47, 0x94, 0xc4, 0xcf, 0x6c, 0x94, 0xb5, 0x7c,
	0xfc, 0xdc, 0x83, 0x96, 0x02, 0xf3, 0xf0, 0x35, 0xf6, 0xe4, 0xda, 0xab, 0xa9, 0xf1, 0xac, 0x8b,
	0x53, 0x86, 0x30, 0x9a, 0x7e, 0xd6, 0x80, 0xfe, 0x07, 0x16, 0x43, 0x1e, 0xbf, 0xc9, 0x68, 0xa6,
	0x24, 0xb0, 0x93, 0x00, 0x9d, 0xc0, 0x92, 0x5c, 0x6a, 0xf4, 0x31, 0x6c, 0x5b, 0x51, 0x60, 0x5a,
	0x8e, 0x63, 0xb2, 0x74, 0xf5, 0xd2, 0xa5, 0x66, 0x6c, 0x51, 0x6c, 0x26, 0x9e, 0x4c, 0x6b, 0x91,
	0x15, 0x05, 0x1d, 0xc7, 0x39, 0xb3, 0x6e, 0x8e, 0x5c, 0x6a, 0x58, 0x14, 0x5f, 0x78, 0xb7, 0x36,
	0x1a, 0x7b, 0x72, 0x21, 0x0b, 0x8d, 0x8e, 0x3d, 0xfd, 0x8f, 0x55, 0xa8, 0xa9, 0xae, 0x9e, 0x4b,
	0xaf, 0xb4, 0xd7, 0x48, 0xaf, 0xaa, 0xaf, 0x9b, 0x5e, 0xcd, 0x7d, 0xdb, 0xf4, 0x0a, 0x75, 0xa1,
	0xc9, 0x9f, 0xd8, 0xc4, 0x6d, 0xc8, 0x53, 0xf1, 0x79, 0xf9, 0x3c, 0x21, 0x3e, 0xdb, 0xed, 0xa7,
	0x9f, 0xed, 0xf6, 0x47, 0xe9, 0x67, 0x3b, 0xa3, 0x31, 0x6b, 0xc2, 0xb3, 0xf9, 0x47, 0xb0, 0x36,
	0xc6, 0x79, 0x9a, 0x85, 0x57, 0xd2, 0xb4, 0xd4, 0x46, 0x3c, 0xe3, 0xbf, 0x10, 0x4b, 0x95, 0x9e,
	0xe4, 0xef, 0x68, 0xa9, 0x74, 0x02, 0x8b, 0xc2, 0x13, 0x58, 0x76, 0x28, 0x52, 0x01, 0xe9, 0x32,
	0x1a, 0x7f, 0x12, 0x10, 0xe9, 0xc1, 0x0c, 0xe2, 0x06, 0x51, 0x42, 0x53, 0x48, 0x55, 0x40, 0xb8,
	0x4d, 0x42, 0xee, 0x41, 0x3d, 0x4c, 0xa8, 0x82, 0x11, 0x2f, 0x0b, 0x35, 0x61, 0x14, 0xa0, 0x0f,
	0x0f, 0xa1, 0x99, 0xf3, 0x5d, 0xd4, 0x82, 0x9a, 0x7c, 0x68, 0xe2, 0xe5, 0x56, 0x05, 0xd5, 0x61,
	0x85, 0x4d, 0x58, 0x14, 0xb5, 0x0f, 0x1f, 0x41, 0x3d, 0x73, 0x7c, 0x51, 0x0d, 0x96, 0xcd, 0xfe,
	0xe0, 0x8b, 0xce, 0x69, 0xff, 0xb8, 0x55, 0x41, 0xab, 0xb0, 0xd4, 0x1f, 0xf4, 0x47, 0xfd, 0xce,
	0x69, 0x4b, 0x43, 0x00, 0x8b, 0x17, 0x8f, 0x8f, 0x3b, 0xa3, 0x5e, 0xab, 0x8a, 0x9a, 0xb0, 0x3a,
	0xea, 0x19, 0x67, 0xfd, 0x41, 0x67, 0xd4, 0x3f, 0x1f, 0xb4, 0xe6, 0x0e, 0x7f, 0xad, 0xc1, 0xc6,
	0x59, 0x68, 0x3f, 0xef, 0x86, 0x31, 0x9e, 0x3d, 0x09, 0x85, 0x31, 0xea, 0x42, 0x4d, 0x94, 0xc5,
	0x73, 0x11, 0xca, 0x7f, 0x42, 0xca, 0xbd, 0x20, 0xed, 0xa6, 0xa7, 0x89, 0x7f, 0x51, 0xde, 0xff,
	0x22, 0x74, 0xc7, 0x7a, 0x05, 0x1d, 0xc0, 0x02, 0x7f, 0x61, 0x44, 0xc5, 0xda, 0xd2, 0x06, 0x87,
	0x7f, 0xa9, 0xc2, 0x12, 0x1b, 0xce, 0x79, 0x77, 0x88, 0x1e, 0x40, 0x63, 0x88, 0xe9, 0x79, 0x77,
	0x38, 0xc4, 0x94, 0xe5, 0xe4, 0x04, 0x6d, 0xa8, 0x27, 0x36, 0x7d, 0x70, 0x2a, 0xef, 0xf9, 0x07,
	0xb0, 0x32, 0xc4, 0x54, 0x08, 0x23, 0xda, 0x2c, 0x7d, 0xae, 0x29, 0x6f, 0xf8, 0x43, 0xa8, 0x8b,
	0x87, 0x49, 0xf9, 0xfa, 0x81, 0xb6, 0xd5, 0xd7, 0xbf, 0xe9, 0x47, 0xeb, 0xfe, 0x71, 0x79, 0xf3,
	0x4f, 0xa0, 0xd5, 0xf5, 0xb0, 0x15, 0xcf, 0x90, 0xe4, 0x75, 0x27, 0x8f, 0x3e, 0x85, 0x45, 0xf1,
	0x86, 0x83, 0xb2, 0xef, 0x6e, 0xb3, 0xd7, 0xa1, 0xdd, 0x62, 0x85, 0x90, 0x7b, 0xbd, 0x72, 0xf8,
	0x87, 0x39, 0x58, 0x66, 0x4b, 0xf7, 0xb8, 0x6b, 0x3c, 0x7c, 0xd3, 0x59, 0xdc, 0x87, 0xe5, 0x21,
	0x96, 0x0f, 0x3f, 0x99, 0x0f, 0xdd, 0xca, 0x8b, 0x50, 0x79, 0xcb, 0xcf, 0xa0, 0x95, 0x7b, 0x2e,
	0x20, 0xe8, 0xdd, 0x6c, 0x9a, 0x5a, 0xf2, 0x96, 0xf0, 0xdd, 0xaf, 0x65, 0x1f, 0x9a, 0xb9, 0x8c,
	0x38, 0x3f, 0x8c, 0x92, 0x6c, 0xb9, 0x9c, 0x6a, 0x00, 0xa8, 0x98, 0x5d, 0x95, 0x0d, 0x44, 0xfd,
	0x92, 0x71, 0x5b, 0x3e, 0xa6, 0x57, 0x8e, 0xee, 0x7c, 0xb5, 0xc3, 0x71, 0x07, 0x57, 0xd8, 0x39,
	0xb0, 0xbd, 0x30, 0x19, 0x1f, 0x38, 0xa1, 0xfc, 0xb7, 0x88, 0xcb, 0x45, 0xfe, 0xf7, 0xe3, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xb4, 0xcc, 0x37, 0x0d, 0xc1, 0x21, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MockCoreConfiguratorClient is the client API for MockCoreConfigurator service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MockCoreConfiguratorClient interface {
	ConfigServer(ctx context.Context, in *ServerConfiguration, opts ...grpc.CallOption) (*protos1.Void, error)
	Reset(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error)
}

type mockCoreConfiguratorClient struct {
	cc grpc.ClientConnInterface
}

func NewMockCoreConfiguratorClient(cc grpc.ClientConnInterface) MockCoreConfiguratorClient {
	return &mockCoreConfiguratorClient{cc}
}

func (c *mockCoreConfiguratorClient) ConfigServer(ctx context.Context, in *ServerConfiguration, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockCoreConfigurator/ConfigServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockCoreConfiguratorClient) Reset(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockCoreConfigurator/Reset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MockCoreConfiguratorServer is the server API for MockCoreConfigurator service.
type MockCoreConfiguratorServer interface {
	ConfigServer(context.Context, *ServerConfiguration) (*protos1.Void, error)
	Reset(context.Context, *protos1.Void) (*protos1.Void, error)
}

// UnimplementedMockCoreConfiguratorServer can be embedded to have forward compatible implementations.
type UnimplementedMockCoreConfiguratorServer struct {
}

func (*UnimplementedMockCoreConfiguratorServer) ConfigServer(ctx context.Context, req *ServerConfiguration) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConfigServer not implemented")
}
func (*UnimplementedMockCoreConfiguratorServer) Reset(ctx context.Context, req *protos1.Void) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reset not implemented")
}

func RegisterMockCoreConfiguratorServer(s *grpc.Server, srv MockCoreConfiguratorServer) {
	s.RegisterService(&_MockCoreConfigurator_serviceDesc, srv)
}

func _MockCoreConfigurator_ConfigServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerConfiguration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockCoreConfiguratorServer).ConfigServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockCoreConfigurator/ConfigServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockCoreConfiguratorServer).ConfigServer(ctx, req.(*ServerConfiguration))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockCoreConfigurator_Reset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos1.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockCoreConfiguratorServer).Reset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockCoreConfigurator/Reset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockCoreConfiguratorServer).Reset(ctx, req.(*protos1.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _MockCoreConfigurator_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.MockCoreConfigurator",
	HandlerType: (*MockCoreConfiguratorServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfigServer",
			Handler:    _MockCoreConfigurator_ConfigServer_Handler,
		},
		{
			MethodName: "Reset",
			Handler:    _MockCoreConfigurator_Reset_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/mock_core.proto",
}

// MockOCSClient is the client API for MockOCS service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MockOCSClient interface {
	SetOCSSettings(ctx context.Context, in *OCSConfig, opts ...grpc.CallOption) (*protos1.Void, error)
	SetCredit(ctx context.Context, in *CreditInfo, opts ...grpc.CallOption) (*protos1.Void, error)
	CreateAccount(ctx context.Context, in *protos.SubscriberID, opts ...grpc.CallOption) (*protos1.Void, error)
	ClearSubscribers(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error)
	ReAuth(ctx context.Context, in *ReAuthTarget, opts ...grpc.CallOption) (*ReAuthAnswer, error)
}

type mockOCSClient struct {
	cc grpc.ClientConnInterface
}

func NewMockOCSClient(cc grpc.ClientConnInterface) MockOCSClient {
	return &mockOCSClient{cc}
}

func (c *mockOCSClient) SetOCSSettings(ctx context.Context, in *OCSConfig, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockOCS/SetOCSSettings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockOCSClient) SetCredit(ctx context.Context, in *CreditInfo, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockOCS/SetCredit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockOCSClient) CreateAccount(ctx context.Context, in *protos.SubscriberID, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockOCS/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockOCSClient) ClearSubscribers(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockOCS/ClearSubscribers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockOCSClient) ReAuth(ctx context.Context, in *ReAuthTarget, opts ...grpc.CallOption) (*ReAuthAnswer, error) {
	out := new(ReAuthAnswer)
	err := c.cc.Invoke(ctx, "/magma.feg.MockOCS/ReAuth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MockOCSServer is the server API for MockOCS service.
type MockOCSServer interface {
	SetOCSSettings(context.Context, *OCSConfig) (*protos1.Void, error)
	SetCredit(context.Context, *CreditInfo) (*protos1.Void, error)
	CreateAccount(context.Context, *protos.SubscriberID) (*protos1.Void, error)
	ClearSubscribers(context.Context, *protos1.Void) (*protos1.Void, error)
	ReAuth(context.Context, *ReAuthTarget) (*ReAuthAnswer, error)
}

// UnimplementedMockOCSServer can be embedded to have forward compatible implementations.
type UnimplementedMockOCSServer struct {
}

func (*UnimplementedMockOCSServer) SetOCSSettings(ctx context.Context, req *OCSConfig) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetOCSSettings not implemented")
}
func (*UnimplementedMockOCSServer) SetCredit(ctx context.Context, req *CreditInfo) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetCredit not implemented")
}
func (*UnimplementedMockOCSServer) CreateAccount(ctx context.Context, req *protos.SubscriberID) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedMockOCSServer) ClearSubscribers(ctx context.Context, req *protos1.Void) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearSubscribers not implemented")
}
func (*UnimplementedMockOCSServer) ReAuth(ctx context.Context, req *ReAuthTarget) (*ReAuthAnswer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReAuth not implemented")
}

func RegisterMockOCSServer(s *grpc.Server, srv MockOCSServer) {
	s.RegisterService(&_MockOCS_serviceDesc, srv)
}

func _MockOCS_SetOCSSettings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OCSConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockOCSServer).SetOCSSettings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockOCS/SetOCSSettings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockOCSServer).SetOCSSettings(ctx, req.(*OCSConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockOCS_SetCredit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreditInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockOCSServer).SetCredit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockOCS/SetCredit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockOCSServer).SetCredit(ctx, req.(*CreditInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockOCS_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.SubscriberID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockOCSServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockOCS/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockOCSServer).CreateAccount(ctx, req.(*protos.SubscriberID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockOCS_ClearSubscribers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos1.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockOCSServer).ClearSubscribers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockOCS/ClearSubscribers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockOCSServer).ClearSubscribers(ctx, req.(*protos1.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockOCS_ReAuth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReAuthTarget)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockOCSServer).ReAuth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockOCS/ReAuth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockOCSServer).ReAuth(ctx, req.(*ReAuthTarget))
	}
	return interceptor(ctx, in, info, handler)
}

var _MockOCS_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.MockOCS",
	HandlerType: (*MockOCSServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetOCSSettings",
			Handler:    _MockOCS_SetOCSSettings_Handler,
		},
		{
			MethodName: "SetCredit",
			Handler:    _MockOCS_SetCredit_Handler,
		},
		{
			MethodName: "CreateAccount",
			Handler:    _MockOCS_CreateAccount_Handler,
		},
		{
			MethodName: "ClearSubscribers",
			Handler:    _MockOCS_ClearSubscribers_Handler,
		},
		{
			MethodName: "ReAuth",
			Handler:    _MockOCS_ReAuth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/mock_core.proto",
}

// MockPCRFClient is the client API for MockPCRF service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MockPCRFClient interface {
	CreateAccount(ctx context.Context, in *protos.SubscriberID, opts ...grpc.CallOption) (*protos1.Void, error)
	SetRules(ctx context.Context, in *AccountRules, opts ...grpc.CallOption) (*protos1.Void, error)
	SetUsageMonitors(ctx context.Context, in *SetUsageMonitorRequest, opts ...grpc.CallOption) (*protos1.Void, error)
	ClearSubscribers(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error)
	SetExpectations(ctx context.Context, in *SetExpectationsRequest, opts ...grpc.CallOption) (*protos1.Void, error)
	AssertExpectations(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*AssertExpectationsResult, error)
}

type mockPCRFClient struct {
	cc grpc.ClientConnInterface
}

func NewMockPCRFClient(cc grpc.ClientConnInterface) MockPCRFClient {
	return &mockPCRFClient{cc}
}

func (c *mockPCRFClient) CreateAccount(ctx context.Context, in *protos.SubscriberID, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockPCRFClient) SetRules(ctx context.Context, in *AccountRules, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/SetRules", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockPCRFClient) SetUsageMonitors(ctx context.Context, in *SetUsageMonitorRequest, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/SetUsageMonitors", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockPCRFClient) ClearSubscribers(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/ClearSubscribers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockPCRFClient) SetExpectations(ctx context.Context, in *SetExpectationsRequest, opts ...grpc.CallOption) (*protos1.Void, error) {
	out := new(protos1.Void)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/SetExpectations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mockPCRFClient) AssertExpectations(ctx context.Context, in *protos1.Void, opts ...grpc.CallOption) (*AssertExpectationsResult, error) {
	out := new(AssertExpectationsResult)
	err := c.cc.Invoke(ctx, "/magma.feg.MockPCRF/AssertExpectations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MockPCRFServer is the server API for MockPCRF service.
type MockPCRFServer interface {
	CreateAccount(context.Context, *protos.SubscriberID) (*protos1.Void, error)
	SetRules(context.Context, *AccountRules) (*protos1.Void, error)
	SetUsageMonitors(context.Context, *SetUsageMonitorRequest) (*protos1.Void, error)
	ClearSubscribers(context.Context, *protos1.Void) (*protos1.Void, error)
	SetExpectations(context.Context, *SetExpectationsRequest) (*protos1.Void, error)
	AssertExpectations(context.Context, *protos1.Void) (*AssertExpectationsResult, error)
}

// UnimplementedMockPCRFServer can be embedded to have forward compatible implementations.
type UnimplementedMockPCRFServer struct {
}

func (*UnimplementedMockPCRFServer) CreateAccount(ctx context.Context, req *protos.SubscriberID) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAccount not implemented")
}
func (*UnimplementedMockPCRFServer) SetRules(ctx context.Context, req *AccountRules) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRules not implemented")
}
func (*UnimplementedMockPCRFServer) SetUsageMonitors(ctx context.Context, req *SetUsageMonitorRequest) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetUsageMonitors not implemented")
}
func (*UnimplementedMockPCRFServer) ClearSubscribers(ctx context.Context, req *protos1.Void) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearSubscribers not implemented")
}
func (*UnimplementedMockPCRFServer) SetExpectations(ctx context.Context, req *SetExpectationsRequest) (*protos1.Void, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetExpectations not implemented")
}
func (*UnimplementedMockPCRFServer) AssertExpectations(ctx context.Context, req *protos1.Void) (*AssertExpectationsResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssertExpectations not implemented")
}

func RegisterMockPCRFServer(s *grpc.Server, srv MockPCRFServer) {
	s.RegisterService(&_MockPCRF_serviceDesc, srv)
}

func _MockPCRF_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos.SubscriberID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).CreateAccount(ctx, req.(*protos.SubscriberID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockPCRF_SetRules_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountRules)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).SetRules(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/SetRules",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).SetRules(ctx, req.(*AccountRules))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockPCRF_SetUsageMonitors_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetUsageMonitorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).SetUsageMonitors(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/SetUsageMonitors",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).SetUsageMonitors(ctx, req.(*SetUsageMonitorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockPCRF_ClearSubscribers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos1.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).ClearSubscribers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/ClearSubscribers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).ClearSubscribers(ctx, req.(*protos1.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockPCRF_SetExpectations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetExpectationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).SetExpectations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/SetExpectations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).SetExpectations(ctx, req.(*SetExpectationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MockPCRF_AssertExpectations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protos1.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MockPCRFServer).AssertExpectations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/magma.feg.MockPCRF/AssertExpectations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MockPCRFServer).AssertExpectations(ctx, req.(*protos1.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _MockPCRF_serviceDesc = grpc.ServiceDesc{
	ServiceName: "magma.feg.MockPCRF",
	HandlerType: (*MockPCRFServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _MockPCRF_CreateAccount_Handler,
		},
		{
			MethodName: "SetRules",
			Handler:    _MockPCRF_SetRules_Handler,
		},
		{
			MethodName: "SetUsageMonitors",
			Handler:    _MockPCRF_SetUsageMonitors_Handler,
		},
		{
			MethodName: "ClearSubscribers",
			Handler:    _MockPCRF_ClearSubscribers_Handler,
		},
		{
			MethodName: "SetExpectations",
			Handler:    _MockPCRF_SetExpectations_Handler,
		},
		{
			MethodName: "AssertExpectations",
			Handler:    _MockPCRF_AssertExpectations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "feg/protos/mock_core.proto",
}
