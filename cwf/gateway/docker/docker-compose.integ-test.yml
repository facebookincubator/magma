version: "3.7"

# Standard logging for each service
x-logging: &logging_anchor
  driver: "json-file"
  options:
    max-size: "10mb"
    max-file: "10"

# Standard volumes mounted
x-standard-volumes: &volumes_anchor
  - ${ROOTCA_PATH}:/var/opt/magma/certs/rootCA.pem
  - ${CERTS_VOLUME}:/var/opt/magma/certs
  - ${CONFIGS_OVERRIDE_VOLUME}:/var/opt/magma/configs
  - ${CONFIGS_DEFAULT_VOLUME}:/etc/magma
  - ${CONFIGS_TEMPLATES_PATH}:/etc/magma/templates
  - ${CONTROL_PROXY_PATH}:/etc/magma/control_proxy.yml
  - /etc/snowflake:/etc/snowflake

x-generic-service: &service
  volumes: *volumes_anchor
  logging: *logging_anchor
  restart: always
  network_mode: host

# Generic python anchor to avoid repetition for orc8r python services
x-orc8r-service: &pyservice
  <<: *service
  image: ${DOCKER_REGISTRY}gateway_python:${IMAGE_VERSION}

x-feg-goservice: &feggoservice
  <<: *service
  image: ${DOCKER_REGISTRY}gateway_go:${IMAGE_VERSION}

services:
  eap_aka:
    environment:
      USE_REMOTE_SWX_PROXY: 0

  # TODO: Remove this override once GRE tun_dst logic is added to pipelined
  pipelined:
    privileged: true
    volumes:
      - ${ROOTCA_PATH}:/var/opt/magma/certs/rootCA.pem
      - ${CERTS_VOLUME}:/var/opt/magma/certs
      - ${CONFIGS_OVERRIDE_VOLUME}:/var/opt/magma/configs
      - ${CONFIGS_DEFAULT_VOLUME}:/etc/magma
      - ${CONFIGS_TEMPLATES_PATH}:/etc/magma/templates
      - ${CONTROL_PROXY_PATH}:/etc/magma/control_proxy.yml
      - /etc/snowflake:/etc/snowflake
      - ../integ_tests/pipelined.yml:/etc/magma/pipelined.yml
      - /var/run/openvswitch:/var/run/openvswitch
    command: >
      sh -c "/usr/bin/ovs-vsctl --if-exists del-port cwag_br0 gre0 &&
        /usr/bin/ovs-vsctl --may-exist add-port cwag_br0 gre0 -- set interface gre0 ofport_request=32768 type=gre options:remote_ip=192.168.70.102 options:key=5001 &&
        /usr/bin/ovs-vsctl set-controller cwag_br0 tcp:127.0.0.1:6633 &&
        python3 -m magma.pipelined.main"

  swx_proxy:
    <<: *feggoservice
    container_name: swx_proxy
    depends_on:
      - hss
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/swx_proxy -logtostderr=true -v=0

  session_proxy:
    <<: *feggoservice
    container_name: session_proxy
    depends_on:
      - pcrf
      - ocs
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/session_proxy -logtostderr=true -v=0

  hss:
    <<: *feggoservice
    container_name: hss
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/hss -logtostderr=true -v=0

  pcrf:
    <<: *feggoservice
    container_name: pcrf
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/pcrf -logtostderr=true -v=0

  ocs:
    <<: *feggoservice
    container_name: ocs
    command: envdir /var/opt/magma/envdir /var/opt/magma/bin/ocs -logtostderr=true -v=0

  redis:
    <<: *pyservice
    container_name: redis
    volumes:
      - /var/opt/magma/redis.conf:/var/opt/magma/redis.conf
    command: >
      /bin/bash -c "/usr/bin/redis-server /var/opt/magma/redis.conf --daemonize no &&
             /usr/bin/redis-cli shutdown"

