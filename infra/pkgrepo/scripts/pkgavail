#!/usr/bin/python3
"""
Copyright 2020 The Magma Authors.

This source code is licensed under the BSD-style license found in the
LICENSE file in the root directory of this source tree.

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""

"""
-- imported from old repo
Pass in a path to a dpkg file. If there is a package version already available
that's >= the dpkg file specified, print True, otherwise print False.
"""

import sys

import apt
import apt_pkg
import argparse

from debian import debfile

# Default repo and release branch
pkgrepo = "packages.magma.etagecom.io"
release = "prod"

# Cmdline options that overwrite the defaults above
parser = argparse.ArgumentParser(description='Specify package repo'
                                 'and release branch.')
parser.add_argument('--repo', help='package repo URL')
parser.add_argument('--release', help='release branch')
parser.add_argument('package', help='package path')
args = parser.parse_args()
repo = args.repo
release = args.release
path = args.package

deb = debfile.DebFile(path)
name = deb.debcontrol()['Package']
ver = deb.debcontrol()['Version']

c = apt.Cache()
if name in c:
    # the package exists, check versions avail from repo
    repo_versions = []
    for v in c[name].versions:
        for o in v.origins:
            if o.site == pkgrepo and o.archive == release:
                repo_versions.append(v)

    if len(repo_versions) > 0:
        max_ver = max(repo_versions).version
        print(apt_pkg.version_compare(ver, max_ver) <= 0)
        exit(0)

# the package doesn't exist, return False
print(False)
